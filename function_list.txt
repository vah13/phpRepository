CairoContext cairo_create( CairoSurface $surface )
CairoFontFace cairo_scaled_font_get_font_face( CairoScaledFont $scaledfont )
CairoFontOptions cairo_font_options_create( void )
CairoFontOptions cairo_scaled_font_get_font_matrix( CairoScaledFont $scaledfont )
CairoFontOptions cairo_scaled_font_get_font_options( CairoScaledFont $scaledfont )
CairoFontOptions cairo_surface_get_font_options( CairoSurface $surface )
CairoImageSurface cairo_image_surface_create( int $format , int $width , int $height )
CairoImageSurface cairo_image_surface_create_for_data( string $data , int $format , int $width , int $height  [, int $stride = -1 ])
CairoImageSurface cairo_image_surface_create_from_png( string $file )
CairoMatrix cairo_matrix_multiply( CairoMatrix $matrix1 , CairoMatrix $matrix2 )
CairoMatrix cairo_pattern_get_matrix( CairoPattern $pattern )
CairoMatrix cairo_scaled_font_get_ctm( CairoScaledFont $scaledfont )
CairoMatrix cairo_scaled_font_get_scale_matrix( CairoScaledFont $scaledfont )
CairoPattern cairo_pattern_create_for_surface( CairoSurface $surface )
CairoPattern cairo_pattern_create_linear( float $x0 , float $y0 , float $x1 , float $y1 )
CairoPattern cairo_pattern_create_radial( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )
CairoPattern cairo_pattern_create_rgb( float $red , float $green , float $blue )
CairoPattern cairo_pattern_create_rgba( float $red , float $green , float $blue , float $alpha )
CairoPdfSurface cairo_pdf_surface_create( string $file , float $width , float $height )
CairoPsSurface cairo_ps_surface_create( string $file , float $width , float $height )
CairoScaledFont cairo_scaled_font_create( CairoFontFace $fontface , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $fontoptions )
CairoSurface cairo_pattern_get_surface( CairoSurfacePattern $pattern )
CairoSurface cairo_surface_create_similar( CairoSurface $surface , int $content , float $width , float $height )
CairoSvgSurface cairo_svg_surface_create( string $file , float $width , float $height )
Closure uopz_copy( string $class , string $function )
Counter::bumpValue  ( integer $offset  )
DOMDocument XSLTProcessor::transformToDoc( DOMNode $doc )
DOMElement dom_import_simplexml( SimpleXMLElement $node )
DOMImplementation::__construct( void )
DOMNode DOMNamedNodeMap::getNamedItem( string $name )
DOMNode DOMNamedNodeMap::getNamedItemNS( string $namespaceURI , string $localName )
DOMNode DOMNamedNodeMap::item( int $index )
DOMNode DOMNodelist::item( int $index )
DateTimeImmutable date_create_immutable([ string $time = "now"  [, DateTimeZone $timezone = NULL ]])
DateTimeZone timezone_open( string $timezone )
Directory dir( string $directory  [, resource $context ])
GMP gmp_abs( GMP $a )
GMP gmp_add( GMP $a, GMP $b )
GMP gmp_and( GMP $a , GMP $b )
GMP gmp_com( GMP $a )
GMP gmp_div_q( GMP $a , GMP $b  [, int $round = GMP_ROUND_ZERO ])
GMP gmp_div_r( GMP $n, GMP $d [, int $round = GMP_ROUND_ZERO ])
GMP gmp_divexact( GMP $n , GMP $d )
GMP gmp_fact( mixed $a )
GMP gmp_gcd( GMP $a , GMP $b )
GMP gmp_import( string $data , integer $word_size , integer $options )
GMP gmp_init( mixed $number  [, int $base = 0 ])
GMP gmp_invert( GMP $a , GMP $b )
GMP gmp_mod( GMP $n , GMP $d )
GMP gmp_mul( GMP $a, GMP $b )
GMP gmp_neg( GMP $a )
GMP gmp_nextprime( int $a )
GMP gmp_or( GMP $a , GMP $b )
GMP gmp_pow( GMP $base , int $exp )
GMP gmp_powm( GMP $base , GMP $exp , GMP $mod )
GMP gmp_random([ int $limiter = 20 ])
GMP gmp_random_bits( integer $bits )
GMP gmp_random_range( GMP $min , GMP $max )
GMP gmp_root( GMP $a , int $nth )
GMP gmp_sqrt( GMP $a )
GMP gmp_sub( GMP $a, GMP $b )
GMP gmp_xor( GMP $a , GMP $b )
Gmagick Gmagick::setCompressionQuality( int $quality = 75 )
HW_API hwapi_hgcsp( string $hostname  [, int $port ])
HW_API_Attribute hwapi_attribute_new([ string $name  [, string $value ]])
HW_API_Content hw_api::content( array $parameter )
HW_API_Content hwapi_content_new( string $content , string $mimetype )
HW_API_Reason hw_api_error::reason( void )
HW_API_Reason hw_api_reason::type( void )
HaruDoc::__construct( void )
Imagick Imagick::appendImages( bool $stack = false )
Imagick Imagick::averageImages( void )
Imagick Imagick::clone( void )
Imagick Imagick::coalesceImages( void )
Imagick Imagick::combineImages( int $channelType )
Imagick Imagick::compareImageLayers( int $method )
Imagick Imagick::current( void )
Imagick Imagick::deconstructImages( void )
Imagick Imagick::flattenImages( void )
Imagick Imagick::fxImage( string $expression  [, int $channel = Imagick::CHANNEL_ALL ])
Imagick Imagick::getImage( void )
Imagick Imagick::getImageClipMask( void )
Imagick Imagick::getImageRegion( int $width , int $height , int $x , int $y )
Imagick Imagick::mergeImageLayers( int $layer_method )
Imagick Imagick::montageImage( ImagickDraw $draw , string $tile_geometry , string $thumbnail_geometry , int $mode , string $frame )
Imagick Imagick::morphImages( int $number_frames )
Imagick Imagick::mosaicImages( void )
Imagick Imagick::steganoImage( Imagick $watermark_wand , int $offset )
Imagick Imagick::transformImage( string $crop , string $geometry )
ImagickDraw ImagickDraw::clone( void )
ImagickDraw::__construct( void )
ImagickPixel Imagick::getImageBackgroundColor( void )
ImagickPixel Imagick::getImageBorderColor( void )
ImagickPixel Imagick::getImageColormapColor( int $index )
ImagickPixel Imagick::getImageMatteColor( void )
ImagickPixel Imagick::getImagePixelColor( int $x , int $y )
ImagickPixel ImagickDraw::getFillColor( void )
ImagickPixel ImagickDraw::getStrokeColor( void )
ImagickPixel ImagickDraw::getTextUnderColor( void )
ImagickPixelIterator Imagick::getPixelIterator( void )
ImagickPixelIterator Imagick::getPixelRegionIterator( int $x , int $y , int $columns , int $rows )
ImagickPixelIterator::__construct( Imagick $wand )
LibXMLError libxml_get_last_error( void )
OCI-Collection oci_new_collection( resource $connection , string $tdo  [, string $schema = NULL ])
OCI-Lob oci_new_descriptor( resource $connection  [, int $type = OCI_DTYPE_LOB ])
Phar PharData::convertToExecutable([ int $format  [, int $compression  [, string $extension ]]])
PharData PharData::convertToData([ int $format  [, int $compression  [, string $extension ]]])
PharData::__construct( string $fname  [, int $flags  [, string $alias  [, int $format = Phar::TAR ]]])
ReturnType fann_create_sparse( float $connection_rate , int $num_layers , int $num_neurons1 , int $num_neurons2  [, int $... ])
ReturnType fann_create_sparse_array( float $connection_rate , int $num_layers , array $layers )
ReturnType fann_get_rprop_delta_zero( resource $ann )
SAMMessage SAMConnection::peek( string $target  [, array $properties ])
SAMMessage SAMConnection::receive( string $target  [, array $properties ])
SAMMessage SAMConnection::remove( string $target  [, array $properties ])
SDODataObject SDO_DAS_Relational::createRootDataObject( void )
SDODataObject SDO_DAS_Relational::executePreparedQuery( PDO $database_handle , PDOStatement $prepared_statement , array $value_list  [, array $column_specifier  ])
SDODataObject SDO_DAS_Relational::executeQuery( PDO $database_handle , string $SQL_statement  [, array $column_specifier  ])
SDO_DAS_ChangeSummary SDO_DAS_DataObject::getChangeSummary( void )
SDO_DAS_DataFactory SDO_DAS_DataFactory::getDataFactory( void )
SDO_DAS_Relational::__construct( array $database_metadata  [, string $application_root_type  [, array $SDO_containment_references_metadata  ]])
SDO_DAS_XML SDO_DAS_XML::create([ mixed $xsd_file  [, string $key ]])
SDO_DAS_XML_Document SDO_DAS_XML::createDocument([ string $document_element_name ])
SDO_DAS_XML_Document SDO_DAS_XML::loadString( string $xml_string )
SDO_DataObject SCA::createDataObject( string $type_namespace_uri , string $type_name )
SDO_DataObject SCA_LocalProxy::createDataObject( string $type_namespace_uri , string $type_name )
SDO_DataObject SCA_SoapProxy::createDataObject( string $type_namespace_uri , string $type_name )
SDO_DataObject SDO_DAS_ChangeSummary::getOldContainer( SDO_DataObject $data_object )
SDO_DataObject SDO_DAS_XML::createDataObject( string $namespace_uri , string $type_name )
SDO_DataObject SDO_DAS_XML_Document::getRootDataObject( void )
SDO_DataObject SDO_DataObject::createDataObject( mixed $identifier )
SDO_DataObject SDO_DataObject::getContainer( void )
SDO_List SDO_DAS_ChangeSummary::getChangedDataObjects( void )
SDO_List SDO_DAS_ChangeSummary::getOldValues( SDO_DataObject $data_object )
SDO_Model_Property SDO_Model_ReflectionDataObject::getContainmentProperty( void )
SDO_Model_Property SDO_Model_Type::getProperty( mixed $identifier )
SDO_Model_Property SDO_Sequence::getProperty( int $sequence_index )
SDO_Model_ReflectionDataObject::__construct( SDO_DataObject $data_object )
SDO_Model_Type SDO_Model_Property::getContainingType( void )
SDO_Model_Type SDO_Model_Property::getType( void )
SDO_Model_Type SDO_Model_ReflectionDataObject::getType( void )
SDO_Model_Type SDO_Model_Type::getBaseType( void )
SDO_Sequence SDO_DataObject::getSequence( void )
SDO_XMLDocument SDO_DAS_XML::loadFile( string $xml_file )
SQLiteDatabase sqlite_factory( string $filename  [, int $mode = 0666  [, string &$error_message ]])
SWFAction::__construct( string $script )
SWFBitmap::__construct( mixed $file  [, mixed $alphafile ])
SWFButton::__construct( void )
SWFFill SWFShape::addFill( int $red , int $green , int $blue  [, int $alpha = 255 ])
SWFFont::__construct( string $filename )
SWFFontChar SWFMovie::importFont( string $libswf , string $name )
SWFGradient::__construct( void )
SWFMorph::__construct( void )
SWFMovie::__construct([ int $version ])
SWFPrebuiltClip::__construct( mixed $file )
SWFShape SWFMorph::getShape1( void )
SWFShape SWFMorph::getShape2( void )
SWFShape::__construct( void )
SWFSound::__construct( string $filename  [, int $flags = 0 ])
SWFSoundInstance SWFButton::addASound( SWFSound $sound , int $flags )
SWFSoundInstance SWFMovie::startSound( SWFSound $sound )
SWFSoundInstance SWFSprite::startSound( SWFSound $sount )
SWFSprite SWFMovie::importChar( string $libswf , string $name )
SWFSprite::__construct( void )
SWFText::__construct( void )
SWFTextField::__construct([ int $flags ])
SWFVideoStream::__construct([ string $file ])
SimpleXMLElement simplexml_import_dom( DOMNode $node  [, string $class_name = "SimpleXMLElement" ])
SoapFault::SoapFault( string $faultcode , string $faultstring  [, string $faultactor  [, string $detail  [, string $faultname  [, string $headerfault ]]]])
SoapFault::__construct( string $faultcode , string $faultstring  [, string $faultactor  [, string $detail  [, string $faultname  [, string $headerfault ]]]])
SoapHeader::SoapHeader( string $namespace , string $name  [, mixed $data  [, bool $mustunderstand = false  [, string $actor ]]])
SoapHeader::__construct( string $namespace , string $name  [, mixed $data  [, bool $mustunderstand  [, string $actor ]]])
SoapParam::SoapParam( mixed $data , string $name )
SoapParam::__construct( mixed $data , string $name )
SoapVar::SoapVar( mixed $data , string $encoding  [, string $type_name  [, string $type_namespace  [, string $node_name  [, string $node_namespace ]]]])
SoapVar::__construct( string $data , string $encoding  [, string $type_name  [, string $type_namespace  [, string $node_name  [, string $node_namespace ]]]])
SplType::__construct([ mixed $initial_value  [, bool $strict ]])
StompFrame::__construct([ string $command  [, array $headers  [, string $body ]]])
ZMQContext::__construct([ integer $io_threads = 1  [, boolean $is_persistent = true ]])
ZMQSocket::__construct( ZMQContext $context , int $type  [, string $persistent_id = null  [, callback $on_new_socket = null ]])
abstract protected int SplHeap::compare( mixed $value1 , mixed $value2 )
abstract public EvWatcher::__construct( void )
abstract public EventUtil::__construct( void )
abstract public MongoCursorInterface MongoCursorInterface::batchSize( int $batchSize )
abstract public MongoCursorInterface MongoCursorInterface::setReadPreference( string $read_preference  [, array $tags ])
abstract public MongoCursorInterface MongoCursorInterface::timeout( int $ms )
abstract public Throwable Throwable::getPrevious( void )
abstract public Traversable IteratorAggregate::getIterator( void )
abstract public Yaf_Config_Abstract Yaf_Config_Abstract::set( void )
abstract public array MongoCursorInterface::getReadPreference( void )
abstract public array MongoCursorInterface::info( void )
abstract public array Throwable::getTrace( void )
abstract public array Yaf_Config_Abstract::toArray( void )
abstract public array|object MongoDB\BSON\Serializable::bsonSerialize( void )
abstract public bool MongoCursorInterface::dead( void )
abstract public bool SessionHandlerInterface::close( void )
abstract public bool SessionHandlerInterface::destroy( string $session_id )
abstract public bool SessionHandlerInterface::gc( int $maxlifetime )
abstract public bool SessionHandlerInterface::open( string $save_path , string $name )
abstract public bool SessionHandlerInterface::write( string $session_id , string $session_data )
abstract public bool Yaf_Config_Abstract::readonly( void )
abstract public bool Yaf_Route_Interface::route( Yaf_Request_Abstract $request )
abstract public bool Yaf_View_Interface::assign( string $name  [, string $value ])
abstract public bool Yaf_View_Interface::display( string $tpl  [, array $tpl_vars ])
abstract public boolean ArrayAccess::offsetExists( mixed $offset )
abstract public boolean Iterator::valid( void )
abstract public int Countable::count( void )
abstract public int Throwable::getCode( void )
abstract public int Throwable::getLine( void )
abstract public mixed ArrayAccess::offsetGet( mixed $offset )
abstract public mixed JsonSerializable::jsonSerialize( void )
abstract public mixed XMLDiff\Base::diff( mixed $from , mixed $to )
abstract public mixed XMLDiff\Base::merge( mixed $src , mixed $diff )
abstract public mixed Yaf_Config_Abstract::get( string $name , mixed $value )
abstract public string Serializable::serialize( void )
abstract public string SessionHandlerInterface::read( string $session_id )
abstract public string Throwable::__toString( void )
abstract public string Throwable::getFile( void )
abstract public string Throwable::getMessage( void )
abstract public string Throwable::getTraceAsString( void )
abstract public string Yaf_Route_Interface::assemble( array $info  [, array $query ])
abstract public string Yaf_View_Interface::render( string $tpl  [, array $tpl_vars ])
abstract public void ArrayAccess::offsetSet( mixed $offset , mixed $value )
abstract public void ArrayAccess::offsetUnset( mixed $offset )
abstract public void MongoDB\BSON\Unserializable::bsonUnserialize( array $data )
abstract public void ReflectionFunctionAbstract::__toString( void )
abstract public void SeekableIterator::seek( int $position )
abstract public void Serializable::unserialize( string $serialized )
abstract public void SplObserver::update( SplSubject $subject )
abstract public void SplSubject::attach( SplObserver $observer )
abstract public void SplSubject::detach( SplObserver $observer )
abstract public void SplSubject::notify( void )
abstract public void Yaf_View_Interface::getScriptPath( void )
abstract public void Yaf_View_Interface::setScriptPath( string $template_dir )
abstract publicmixed Yaf_Action_Abstract::execute([ mixed $arg  [, mixed $... ]])
array HaruFont::getTextWidth( string $text )
array HaruImage::getSize( void )
array HaruPage::getCMYKFill( void )
array HaruPage::getCMYKStroke( void )
array HaruPage::getCurrentPos( void )
array HaruPage::getCurrentTextPos( void )
array HaruPage::getDash( void )
array HaruPage::getRGBFill( void )
array HaruPage::getRGBStroke( void )
array HaruPage::getTextMatrix( void )
array HaruPage::getTransMatrix( void )
array Imagick::compareImageChannels( Imagick $image , int $channelType , int $metricType )
array Imagick::compareImages( Imagick $compare , int $metric )
array Imagick::getImageBluePrimary( void )
array Imagick::getImageChannelExtrema( int $channel )
array Imagick::getImageChannelMean( int $channel )
array Imagick::getImageChannelRange( int $channel )
array Imagick::getImageChannelStatistics( void )
array Imagick::getImageExtrema( void )
array Imagick::getImageGeometry( void )
array Imagick::getImageGreenPrimary( void )
array Imagick::getImageHistogram( void )
array Imagick::getImagePage( void )
array Imagick::getImageProfiles([ string $pattern = "*"  [, bool $only_names = true ]])
array Imagick::getImageProperties([ string $pattern = "*"  [, bool $only_names = true ]])
array Imagick::getImageRedPrimary( void )
array Imagick::getImageResolution( void )
array Imagick::getImageWhitePoint( void )
array Imagick::getPage( void )
array Imagick::getQuantumDepth( void )
array Imagick::getQuantumRange( void )
array Imagick::getSamplingFactors( void )
array Imagick::getSize( void )
array Imagick::getVersion( void )
array Imagick::identifyImage([ bool $appendRawOutput = false ])
array Imagick::queryFontMetrics( ImagickDraw $properties , string $text  [, bool $multiline ])
array Imagick::queryFonts([ string $pattern = "*" ])
array Imagick::queryFormats([ string $pattern = "*" ])
array ImagickDraw::getStrokeDashArray( void )
array ImagickPixel::getColor([ bool $normalized = false ])
array ImagickPixel::getHSL( void )
array ImagickPixelIterator::getCurrentIteratorRow( void )
array ImagickPixelIterator::getNextIteratorRow( void )
array ImagickPixelIterator::getPreviousIteratorRow( void )
array Memcache::getExtendedStats([ string $type  [, int $slabid  [, int $limit = 100 ]]])
array Memcache::getStats([ string $type  [, int $slabid  [, int $limit = 100 ]]])
array PharData::buildFromIterator( Iterator $iter  [, string $base_directory ])
array SAMConnection::peekAll( string $target  [, array $properties ])
array SDO_Model_ReflectionDataObject::getInstanceProperties( void )
array SDO_Model_Type::getProperties( void )
array Swish::getMetaList( string $index_name )
array Swish::getPropertyList( string $index_name )
array SwishResult::getMetaList( void )
array SwishResult::stem( string $word )
array SwishResults::getParsedWords( string $index_name )
array SwishResults::getRemovedStopwords( string $index_name )
array ZipArchive::statIndex( int $index  [, int $flags ])
array ZipArchive::statName( string $name  [, int $flags ])
array apache_get_modules( void )
array apache_request_headers( void )
array apache_response_headers( void )
array apc_cache_info([ string $cache_type = ""  [, bool $limited = false ]])
array apc_sma_info([ bool $limited = false ])
array apcu_cache_info([ bool $limited = false ])
array apcu_sma_info([ bool $limited = false ])
array apd_callstack( void )
array apd_dump_persistent_resources( void )
array apd_dump_regular_resources( void )
array apd_get_active_symbols( void )
array array_column( array $input , mixed $column_key  [, mixed $index_key = null ])
array array_diff_key( array $array1 , array $array2  [, array $... ])
array array_diff_uassoc( array $array1 , array $array2  [, array $...  ], callable $key_compare_func )
array array_diff_ukey( array $array1 , array $array2  [, array $...  ], callable $key_compare_func )
array array_fill( int $start_index , int $num , mixed $value )
array array_fill_keys( array $keys , mixed $value )
array array_filter( array $array  [, callable $callback  [, int $flag = 0 ]])
array array_flip( array $array )
array array_intersect_assoc( array $array1 , array $array2  [, array $... ])
array array_intersect_key( array $array1 , array $array2  [, array $... ])
array array_intersect_uassoc( array $array1 , array $array2  [, array $...  ], callable $key_compare_func )
array array_intersect_ukey( array $array1 , array $array2  [, array $...  ], callable $key_compare_func )
array array_map( callable $callback , array $array1  [, array $... ])
array array_merge( array $array1  [, array $... ])
array array_pad( array $array , int $size , mixed $value )
array array_replace( array $array1 , array $array2  [, array $... ])
array array_replace_recursive( array $array1 , array $array2  [, array $... ])
array array_reverse( array $array  [, bool $preserve_keys = false ])
array array_slice( array $array , int $offset  [, int $length = NULL  [, bool $preserve_keys = false ]])
array array_splice( array &$input , int $offset  [, int $length = 0  [, mixed $replacement = array() ]])
array array_udiff( array $array1 , array $array2  [, array $...  ], callable $value_compare_func )
array array_udiff_assoc( array $array1 , array $array2  [, array $...  ], callable $value_compare_func )
array array_udiff_uassoc( array $array1 , array $array2  [, array $...  ], callable $value_compare_func , callable $key_compare_func )
array array_uintersect( array $array1 , array $array2  [, array $...  ], callable $value_compare_func )
array array_uintersect_assoc( array $array1 , array $array2  [, array $...  ], callable $value_compare_func )
array array_uintersect_uassoc( array $array1 , array $array2  [, array $...  ], callable $value_compare_func , callable $key_compare_func )
array array_unique( array $array  [, int $sort_flags = SORT_STRING ])
array array_values( array $array )
array bson_decode( string $bson )
array bzerror( resource $bz )
array cairo_matrix_transform_distance( CairoMatrix $matrix , float $dx , float $dy )
array cairo_matrix_transform_point( CairoMatrix $matrix , float $dx , float $dy )
array cairo_pattern_get_color_stop_rgba( CairoGradientPattern $pattern , int $index )
array cairo_pattern_get_linear_points( CairoLinearGradient $pattern )
array cairo_pattern_get_radial_circles( CairoRadialGradient $pattern )
array cairo_pattern_get_rgba( CairoSolidPattern $pattern )
array cairo_ps_get_levels( void )
array cairo_scaled_font_extents( CairoScaledFont $scaledfont )
array cairo_scaled_font_glyph_extents( CairoScaledFont $scaledfont , array $glyphs )
array cairo_scaled_font_text_extents( CairoScaledFont $scaledfont , string $text )
array cairo_surface_get_device_offset( CairoSurface $surface )
array cal_from_jd( int $jd , int $calendar )
array cal_info([ int $calendar = -1 ])
array class_implements( mixed $class  [, bool $autoload = true ])
array class_parents( mixed $class  [, bool $autoload = true ])
array class_uses( mixed $class  [, bool $autoload = true ])
array classkit_import( string $filename )
array compact( mixed $varname1  [, mixed $... ])
array cubrid_col_get( resource $conn_identifier , string $oid , string $attr_name )
array cubrid_column_names( resource $req_identifier )
array cubrid_column_types ( resource $req_identifier )
array cubrid_fetch_array( resource $result   [, int $type = CUBRID_BOTH ])
array cubrid_fetch_assoc( resource $result  [, int $type ])
array cubrid_fetch_lengths( resource $result )
array cubrid_fetch_row( resource $result  [, int $type ])
array cubrid_get_db_parameter( resource $conn_identifier  )
array cubrid_list_dbs([ resource $conn_identifier  ])
array cubrid_lob_get( resource $conn_identifier  , string $sql  )
array cubrid_schema( resource $conn_identifier  , int $schema_type   [, string $class_name  [, string $attr_name  ]])
array curl_multi_info_read( resource $mh  [, int &$msgs_in_queue = NULL ])
array curl_version([ int $age = CURLVERSION_NOW ])
array cyrus_query( resource $connection , string $query )
array date_parse( string $date )
array date_parse_from_format( string $format , string $date )
array db2_fetch_array( resource $stmt  [, int $row_number = -1 ])
array db2_fetch_assoc( resource $stmt  [, int $row_number = -1 ])
array dba_handlers([ bool $full_info = false ])
array dba_list( void )
array dbase_get_record( int $dbase_identifier , int $record_number )
array dbase_get_record_with_names( int $dbase_identifier , int $record_number )
array dbplus_resolve( string $relation_name )
array debug_backtrace([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT  [, int $limit = 0 ]])
array dio_stat( resource $fd )
array enchant_broker_describe( resource $broker )
array enchant_dict_suggest( resource $dict , string $word )
array fam_next_event( resource $fam )
array fann_get_bias_array( resource $ann )
array fann_get_cascade_activation_functions( resource $ann )
array fann_get_cascade_activation_steepnesses( resource $ann )
array fann_get_connection_array( resource $ann )
array fann_get_layer_array( resource $ann )
array fann_run( resource $ann , array $input )
array fbsql_fetch_array( resource $result  [, int $result_type ])
array fbsql_fetch_assoc( resource $result )
array fbsql_fetch_lengths( resource $result )
array fbsql_fetch_row( resource $result )
array fbsql_get_autostart_info([ resource $link_identifier ])
array fdf_get_attachment( resource $fdf_document , string $fieldname , string $savepath )
array file( string $filename  [, int $flags = 0  [, resource $context ]])
array filter_list( void )
array fstat( resource $handle )
array ftp_nlist( resource $ftp_stream , string $directory )
array ftp_raw( resource $ftp_stream , string $command )
array func_get_args( void )
array gd_info( void )
array geoip_db_get_all_info( void )
array geoip_record_by_name( string $hostname )
array geoip_region_by_name( string $hostname )
array get_class_methods( mixed $class_name )
array get_class_vars( string $class_name )
array get_declared_classes( void )
array get_declared_interfaces( void )
array get_declared_traits( void )
array get_defined_constants([ bool $categorize = false ])
array get_defined_functions( void )
array get_defined_vars( void )
array get_extension_funcs( string $module_name )
array get_included_files( void )
array get_loaded_extensions([ bool $zend_extensions = false ])
array get_meta_tags( string $filename  [, bool $use_include_path = false ])
array get_object_vars( object $object )
array get_resources([ string $type ])
array getallheaders( void )
array getdate([ int $timestamp = time() ])
array getimagesizefromstring( string $imagedata  [, array &$imageinfo ])
array getopt( string $options  [, array $longopts ])
array getrusage([ int $who = 0 ])
array gmp_div_qr( GMP $n , GMP $d  [, int $round = GMP_ROUND_ZERO ])
array gmp_gcdext( GMP $a , GMP $b )
array gmp_rootrem( GMP $a , int $nth )
array gmp_sqrtrem( GMP $a )
array gnupg_decryptverify( resource $identifier , string $text , string &$plaintext )
array gnupg_import( resource $identifier , string $keydata )
array gnupg_keyinfo( resource $identifier , string $pattern )
array gnupg_verify( resource $identifier , string $signed_text , string $signature  [, string &$plaintext ])
array gopher_parsedir( string $dirent )
array gupnp_device_info_get( resource $root_device )
array gupnp_service_info_get( resource $proxy )
array gupnp_service_introspection_get_state_variable( resource $introspection , string $variable_name )
array gupnp_service_proxy_send_action( resource $proxy , string $action , array $in_params , array $out_params )
array gzfile( string $filename  [, int $use_include_path = 0 ])
array hash_algos( void )
array headers_list( void )
array hw_api::children( array $parameter )
array hw_api::dstanchors( array $parameter )
array hw_api::find( array $parameter )
array hw_api::info( array $parameter )
array hw_api::parents( array $parameter )
array hw_api::srcanchors( array $parameter )
array hw_api::srcsofdst( array $parameter )
array hw_api::userlist( array $parameter )
array hw_api_attribute::values( void )
array ibase_blob_info( resource $link_identifier , string $blob_id )
array ibase_fetch_assoc( resource $result  [, int $fetch_flag = 0 ])
array ibase_fetch_row( resource $result_identifier  [, int $fetch_flag = 0 ])
array ibase_param_info( resource $query , int $param_number )
array id3_get_genre_list( void )
array ifx_fetch_row( resource $result_id  [, mixed $position ])
array ifx_fieldproperties( resource $result_id )
array ifx_fieldtypes( resource $result_id )
array ifx_getsqlca( resource $result_id )
array imageaffinematrixconcat( array $m1 , array $m2 )
array imageaffinematrixget( int $type  [, mixed $options ])
array imagecolorsforindex( resource $image , int $index )
array imageftbbox( float $size , float $angle , string $fontfile , string $text  [, array $extrainfo ])
array imagepsbbox( string $text , resource $font , int $size )
array imap_alerts( void )
array imap_errors( void )
array imap_get_quota( resource $imap_stream , string $quota_root )
array imap_get_quotaroot( resource $imap_stream , string $quota_root )
array imap_getacl( resource $imap_stream , string $mailbox )
array imap_getmailboxes( resource $imap_stream , string $ref , string $pattern )
array imap_getsubscribed( resource $imap_stream , string $ref , string $pattern )
array imap_headers( resource $imap_stream )
array imap_list( resource $imap_stream , string $ref , string $pattern )
array imap_listscan( resource $imap_stream , string $ref , string $pattern , string $content )
array imap_lsub( resource $imap_stream , string $ref , string $pattern )
array imap_rfc822_parse_adrlist( string $address , string $default_host )
array imap_search( resource $imap_stream , string $criteria  [, int $options = SE_FREE  [, string $charset = NULL ]])
array imap_sort( resource $imap_stream , int $criteria , int $reverse  [, int $options = 0  [, string $search_criteria = NULL  [, string $charset = NULL ]]])
array imap_thread( resource $imap_stream  [, int $options = SE_FREE ])
array inclued_get_data( void )
array ingres_fetch_array( resource $result  [, int $result_type ])
array ingres_fetch_assoc( resource $result )
array ingres_fetch_row( resource $result )
array ini_get_all([ string $extension  [, bool $details = true ]])
array inotify_read( resource $inotify_instance )
array iptcparse( string $iptcblock )
array iterator_to_array( Traversable $iterator  [, bool $use_keys = true ])
array kadm5_get_policies( resource $handle )
array kadm5_get_principal( resource $handle , string $principal )
array kadm5_get_principals( resource $handle )
array ldap_get_attributes( resource $link_identifier , resource $result_entry_identifier )
array ldap_get_entries( resource $link_identifier , resource $result_identifier )
array ldap_get_values( resource $link_identifier , resource $result_entry_identifier , string $attribute )
array ldap_get_values_len( resource $link_identifier , resource $result_entry_identifier , string $attribute )
array libxml_get_errors( void )
array localtime([ int $timestamp = time()  [, bool $is_associative = false ]])
array lstat( string $filename )
array m_responsekeys( resource $conn , int $identifier )
array mailparse_msg_get_part_data( resource $mimemail )
array mailparse_msg_get_structure( resource $mimemail )
array mailparse_rfc822_parse_addresses( string $addresses )
array mailparse_uudecode_all( resource $fp )
array maxdb_fetch_assoc( resource $result )
array maxdb_fetch_lengths( resource $result )
array mb_encoding_aliases( string $encoding )
array mb_ereg_search_pos([ string $pattern  [, string $option = "ms" ]])
array mb_ereg_search_regs([ string $pattern  [, string $option = "ms" ]])
array mb_list_encodings( void )
array mcrypt_enc_get_supported_key_sizes( resource $td )
array mcrypt_list_algorithms([ string $lib_dir = ini_get("mcrypt.algorithms_dir") ])
array mcrypt_list_modes([ string $lib_dir = ini_get("mcrypt.modes_dir") ])
array mcrypt_module_get_supported_key_sizes( string $algorithm  [, string $lib_dir ])
array msession_find( string $name , string $value )
array msession_get_array( string $session )
array msession_list( void )
array msession_listvar( string $name )
array msg_stat_queue( resource $queue )
array msql_fetch_array( resource $result  [, int $result_type ])
array msql_fetch_row( resource $result  )
array mssql_fetch_assoc( resource $result_id )
array mssql_fetch_row( resource $result )
array mysql_fetch_array( resource $result  [, int $result_type = MYSQL_BOTH ])
array mysql_fetch_assoc( resource $result )
array mysql_fetch_lengths( resource $result )
array mysqli_error_list( mysqli $link )
array mysqli_fetch_lengths( mysqli_result $result )
array mysqli_get_cache_stats( void )
array mysqli_get_client_stats( void )
array mysqli_get_links_stats( void )
array mysqli_result::fetch_assoc( void )
array mysqli_result::fetch_fields( void )
array mysqli_stmt_error_list( mysqli_stmt $stmt )
array mysqlnd_memcache_get_config( mixed $connection )
array mysqlnd_ms_dump_servers( mixed $connection )
array mysqlnd_ms_fabric_select_global( mixed $connection , mixed $table_name )
array mysqlnd_ms_fabric_select_shard( mixed $connection , mixed $table_name , mixed $shard_key )
array mysqlnd_ms_get_last_used_connection( mixed $connection )
array mysqlnd_ms_get_stats( void )
array mysqlnd_qc_get_available_handlers( void )
array mysqlnd_qc_get_cache_info( void )
array mysqlnd_qc_get_core_stats( void )
array mysqlnd_qc_get_normalized_query_trace_log( void )
array mysqlnd_qc_get_query_trace_log( void )
array newt_checkbox_tree_find_item( resource $checkboxtree , mixed $data )
array newt_checkbox_tree_get_multi_selection( resource $checkboxtree , string $seqnum )
array newt_checkbox_tree_get_selection( resource $checkboxtree )
array newt_listbox_get_selection( resource $listbox )
array nsapi_request_headers( void )
array nsapi_response_headers( void )
array ob_get_status([ bool $full_status = FALSE ])
array ob_list_handlers( void )
array oci_error([ resource $resource ])
array oci_fetch_array( resource $statement  [, int $mode ])
array oci_fetch_assoc( resource $statement )
array oci_fetch_row( resource $statement )
array odbc_data_source( resource $connection_id , int $fetch_type )
array odbc_fetch_array( resource $result  [, int $rownumber ])
array opcache_get_configuration( void )
array opcache_get_status([ boolean $get_scripts = TRUE ])
array openssl_csr_get_subject( mixed $csr  [, bool $use_shortnames = true ])
array openssl_get_cert_locations( void )
array openssl_get_cipher_methods([ bool $aliases = false ])
array openssl_get_md_methods([ bool $aliases = false ])
array openssl_pkey_get_details( resource $key )
array openssl_x509_parse( mixed $x509cert  [, bool $shortnames = true ])
array parse_ini_file( string $filename  [, bool $process_sections = false  [, int $scanner_mode = INI_SCANNER_NORMAL ]])
array parse_ini_string( string $ini  [, bool $process_sections = false  [, int $scanner_mode = INI_SCANNER_NORMAL ]])
array parsekit_compile_file( string $filename  [, array &$errors  [, int $options = PARSEKIT_QUIET ]])
array parsekit_compile_string( string $phpcode  [, array &$errors  [, int $options = PARSEKIT_QUIET ]])
array parsekit_func_arginfo( mixed $function )
array password_get_info( string $hash )
array pg_convert( resource $connection , string $table_name , array $assoc_array  [, int $options = 0 ])
array pg_copy_to( resource $connection , string $table_name  [, string $delimiter  [, string $null_as ]])
array pg_fetch_all( resource $result )
array pg_fetch_all_columns( resource $result  [, int $column = 0 ])
array pg_fetch_array( resource $result  [, int $row  [, int $result_type = PGSQL_BOTH ]])
array pg_fetch_row( resource $result  [, int $row   ])
array pg_get_notify( resource $connection  [, int $result_type ])
array pg_meta_data( resource $connection , string $table_name  [, bool $extended ])
array pg_version([ resource $connection ])
array posix_getgrgid( int $gid )
array posix_getgrnam( string $name )
array posix_getgroups( void )
array posix_getpwuid( int $uid )
array posix_getrlimit( void )
array posix_times( void )
array posix_uname( void )
array preg_grep( string $pattern , array $input  [, int $flags = 0 ])
array preg_split( string $pattern , string $subject  [, int $limit = -1  [, int $flags = 0 ]])
array proc_get_status( resource $process )
array ps_hyphenate( resource $psdoc , string $text )
array ps_string_geometry( resource $psdoc , string $text  [, int $fontid = 0  [, float $size = 0.0 ]])
array pspell_suggest( int $dictionary_link , string $word )
array px_get_field( resource $pxdoc , int $fieldno )
array px_get_info( resource $pxdoc )
array px_get_record( resource $pxdoc , int $num  [, int $mode = 0 ])
array px_get_schema( resource $pxdoc  [, int $mode = 0 ])
array px_retrieve_record( resource $pxdoc , int $num  [, int $mode = 0 ])
array radius_get_vendor_attr( string $data )
array readline_list_history( void )
array realpath_cache_get( void )
array rrd_fetch( string $filename , array $options )
array rrd_graph( string $filename , array $options )
array rrd_info( string $filename )
array rrd_lastupdate( string $filename )
array rrd_xport( array $options )
array runkit_superglobals( void )
array session_get_cookie_params( void )
array session_pgsql_get_error([ bool $with_error_message = false ])
array session_pgsql_status( void )
array snmp2_real_walk( string $host , string $community , string $object_id  [, string $timeout = 1000000  [, string $retries = 5 ]])
array snmp2_walk( string $host , string $community , string $object_id  [, string $timeout = 1000000  [, string $retries = 5 ]])
array snmp3_real_walk( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id  [, string $timeout = 1000000  [, string $retries = 5  ]])
array snmp3_walk( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id  [, string $timeout = 1000000  [, string $retries = 5 ]])
array snmprealwalk( string $host , string $community , string $object_id  [, int $timeout = 1000000  [, int $retries = 5 ]])
array snmpwalk( string $hostname , string $community , string $object_id  [, int $timeout = 1000000  [, int $retries = 5 ]])
array snmpwalkoid( string $hostname , string $community , string $object_id  [, int $timeout = 1000000  [, int $retries = 5 ]])
array spl_autoload_functions( void )
array spl_classes( void )
array split( string $pattern , string $string  [, int $limit = -1 ])
array spliti( string $pattern , string $string  [, int $limit = -1 ])
array sqlite_array_query( resource $dbhandle , string $query  [, int $result_type = SQLITE_BOTH  [, bool $decode_binary = true ]])
array sqlite_current( resource $result  [, int $result_type = SQLITE_BOTH  [, bool $decode_binary = true ]])
array sqlite_fetch_all( resource $result  [, int $result_type = SQLITE_BOTH  [, bool $decode_binary = true ]])
array sqlite_fetch_array( resource $result  [, int $result_type = SQLITE_BOTH  [, bool $decode_binary = true ]])
array sqlite_fetch_column_types( string $table_name , resource $dbhandle  [, int $result_type = SQLITE_ASSOC ])
array sqlite_single_query( resource $db , string $query  [, bool $first_row_only  [, bool $decode_binary ]])
array sqlsrv_client_info( resource $conn )
array sqlsrv_fetch_array( resource $stmt  [, int $fetchType  [, int $row  [, int $offset ]]])
array sqlsrv_server_info( resource $conn )
array ssh2_methods_negotiated( resource $session )
array ssh2_publickey_list( resource $pkey )
array ssh2_sftp_lstat( resource $sftp , string $path )
array ssh2_sftp_stat( resource $sftp , string $path )
array stat( string $filename )
array stats_rand_get_seeds( void )
array stats_rand_phrase_to_seeds( string $phrase )
array str_getcsv( string $input  [, string $delimiter = ","  [, string $enclosure = '"'  [, string $escape = "\\" ]]])
array stream_context_get_options( resource $stream_or_context )
array stream_context_get_params( resource $stream_or_context )
array stream_get_filters( void )
array stream_get_meta_data( resource $stream )
array stream_get_transports( void )
array stream_get_wrappers( void )
array stream_socket_pair( int $domain , int $type , int $protocol )
array strptime ( string $date  , string $format  )
array svn_blame( string $repository_url  [, int $revision_no = SVN_REVISION_HEAD ])
array svn_commit( string $log , array $targets  [, bool $recursive = true ])
array svn_diff( string $path1 , int $rev1 , string $path2 , int $rev2 )
array svn_fs_dir_entries( resource $fsroot , string $path )
array svn_log( string $repos_url  [, int $start_revision  [, int $end_revision  [, int $limit = 0  [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY ]]]])
array svn_ls( string $repos_url  [, int $revision_no = SVN_REVISION_HEAD  [, bool $recurse = false  [, bool $peg = false ]]])
array svn_status( string $path  [, int $flags = 0 ])
array sybase_fetch_array( resource $result )
array sybase_fetch_assoc( resource $result )
array sybase_fetch_row( resource $result )
array sys_getloadavg( void )
array tidy::getConfig( void )
array token_get_all( string $source  [, int $flags = 0 ])
array trader_acos( array $real )
array trader_ad( array $high , array $low , array $close , array $volume )
array trader_add( array $real0 , array $real1 )
array trader_adosc( array $high , array $low , array $close , array $volume  [, integer $fastPeriod  [, integer $slowPeriod ]])
array trader_adx( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_adxr( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_apo( array $real  [, integer $fastPeriod  [, integer $slowPeriod  [, integer $mAType ]]])
array trader_aroon( array $high , array $low  [, integer $timePeriod ])
array trader_aroonosc( array $high , array $low  [, integer $timePeriod ])
array trader_asin( array $real )
array trader_atan( array $real )
array trader_atr( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_avgprice( array $open , array $high , array $low , array $close )
array trader_bbands( array $real  [, integer $timePeriod  [, float $nbDevUp  [, float $nbDevDn  [, integer $mAType ]]]])
array trader_beta( array $real0 , array $real1  [, integer $timePeriod ])
array trader_bop( array $open , array $high , array $low , array $close )
array trader_cci( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_cdl2crows( array $open , array $high , array $low , array $close )
array trader_cdl3blackcrows( array $open , array $high , array $low , array $close )
array trader_cdl3inside( array $open , array $high , array $low , array $close )
array trader_cdl3linestrike( array $open , array $high , array $low , array $close )
array trader_cdl3outside( array $open , array $high , array $low , array $close )
array trader_cdl3starsinsouth( array $open , array $high , array $low , array $close )
array trader_cdl3whitesoldiers( array $open , array $high , array $low , array $close )
array trader_cdlabandonedbaby( array $open , array $high , array $low , array $close  [, float $penetration ])
array trader_cdladvanceblock( array $open , array $high , array $low , array $close )
array trader_cdlbelthold( array $open , array $high , array $low , array $close )
array trader_cdlbreakaway( array $open , array $high , array $low , array $close )
array trader_cdlclosingmarubozu( array $open , array $high , array $low , array $close )
array trader_cdlconcealbabyswall( array $open , array $high , array $low , array $close )
array trader_cdlcounterattack( array $open , array $high , array $low , array $close )
array trader_cdldarkcloudcover( array $open , array $high , array $low , array $close  [, float $penetration ])
array trader_cdldoji( array $open , array $high , array $low , array $close )
array trader_cdldojistar( array $open , array $high , array $low , array $close )
array trader_cdldragonflydoji( array $open , array $high , array $low , array $close )
array trader_cdlengulfing( array $open , array $high , array $low , array $close )
array trader_cdleveningdojistar( array $open , array $high , array $low , array $close  [, float $penetration ])
array trader_cdleveningstar( array $open , array $high , array $low , array $close  [, float $penetration ])
array trader_cdlgapsidesidewhite( array $open , array $high , array $low , array $close )
array trader_cdlgravestonedoji( array $open , array $high , array $low , array $close )
array trader_cdlhammer( array $open , array $high , array $low , array $close )
array trader_cdlhangingman( array $open , array $high , array $low , array $close )
array trader_cdlharami( array $open , array $high , array $low , array $close )
array trader_cdlharamicross( array $open , array $high , array $low , array $close )
array trader_cdlhighwave( array $open , array $high , array $low , array $close )
array trader_cdlhikkake( array $open , array $high , array $low , array $close )
array trader_cdlhikkakemod( array $open , array $high , array $low , array $close )
array trader_cdlhomingpigeon( array $open , array $high , array $low , array $close )
array trader_cdlidentical3crows( array $open , array $high , array $low , array $close )
array trader_cdlinneck( array $open , array $high , array $low , array $close )
array trader_cdlinvertedhammer( array $open , array $high , array $low , array $close )
array trader_cdlkicking( array $open , array $high , array $low , array $close )
array trader_cdlkickingbylength( array $open , array $high , array $low , array $close )
array trader_cdlladderbottom( array $open , array $high , array $low , array $close )
array trader_cdllongleggeddoji( array $open , array $high , array $low , array $close )
array trader_cdllongline( array $open , array $high , array $low , array $close )
array trader_cdlmarubozu( array $open , array $high , array $low , array $close )
array trader_cdlmatchinglow( array $open , array $high , array $low , array $close )
array trader_cdlmathold( array $open , array $high , array $low , array $close  [, float $penetration ])
array trader_cdlmorningdojistar( array $open , array $high , array $low , array $close  [, float $penetration ])
array trader_cdlmorningstar( array $open , array $high , array $low , array $close  [, float $penetration ])
array trader_cdlonneck( array $open , array $high , array $low , array $close )
array trader_cdlpiercing( array $open , array $high , array $low , array $close )
array trader_cdlrickshawman( array $open , array $high , array $low , array $close )
array trader_cdlrisefall3methods( array $open , array $high , array $low , array $close )
array trader_cdlseparatinglines( array $open , array $high , array $low , array $close )
array trader_cdlshootingstar( array $open , array $high , array $low , array $close )
array trader_cdlshortline( array $open , array $high , array $low , array $close )
array trader_cdlspinningtop( array $open , array $high , array $low , array $close )
array trader_cdlstalledpattern( array $open , array $high , array $low , array $close )
array trader_cdlsticksandwich( array $open , array $high , array $low , array $close )
array trader_cdltakuri( array $open , array $high , array $low , array $close )
array trader_cdltasukigap( array $open , array $high , array $low , array $close )
array trader_cdlthrusting( array $open , array $high , array $low , array $close )
array trader_cdltristar( array $open , array $high , array $low , array $close )
array trader_cdlunique3river( array $open , array $high , array $low , array $close )
array trader_cdlupsidegap2crows( array $open , array $high , array $low , array $close )
array trader_cdlxsidegap3methods( array $open , array $high , array $low , array $close )
array trader_ceil( array $real )
array trader_cmo( array $real  [, integer $timePeriod ])
array trader_correl( array $real0 , array $real1  [, integer $timePeriod ])
array trader_cos( array $real )
array trader_cosh( array $real )
array trader_dema( array $real  [, integer $timePeriod ])
array trader_div( array $real0 , array $real1 )
array trader_dx( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_ema( array $real  [, integer $timePeriod ])
array trader_exp( array $real )
array trader_floor( array $real )
array trader_ht_dcperiod( array $real )
array trader_ht_dcphase( array $real )
array trader_ht_phasor( array $real )
array trader_ht_sine( array $real )
array trader_ht_trendline( array $real )
array trader_ht_trendmode( array $real )
array trader_kama( array $real  [, integer $timePeriod ])
array trader_linearreg( array $real  [, integer $timePeriod ])
array trader_linearreg_angle( array $real  [, integer $timePeriod ])
array trader_linearreg_intercept( array $real  [, integer $timePeriod ])
array trader_linearreg_slope( array $real  [, integer $timePeriod ])
array trader_ln( array $real )
array trader_log10( array $real )
array trader_ma( array $real  [, integer $timePeriod  [, integer $mAType ]])
array trader_macd( array $real  [, integer $fastPeriod  [, integer $slowPeriod  [, integer $signalPeriod ]]])
array trader_macdext( array $real  [, integer $fastPeriod  [, integer $fastMAType  [, integer $slowPeriod  [, integer $slowMAType  [, integer $signalPeriod  [, integer $signalMAType ]]]]]])
array trader_macdfix( array $real  [, integer $signalPeriod ])
array trader_mama( array $real  [, float $fastLimit  [, float $slowLimit ]])
array trader_mavp( array $real , array $periods  [, integer $minPeriod  [, integer $maxPeriod  [, integer $mAType ]]])
array trader_max( array $real  [, integer $timePeriod ])
array trader_maxindex( array $real  [, integer $timePeriod ])
array trader_medprice( array $high , array $low )
array trader_mfi( array $high , array $low , array $close , array $volume  [, integer $timePeriod ])
array trader_midpoint( array $real  [, integer $timePeriod ])
array trader_midprice( array $high , array $low  [, integer $timePeriod ])
array trader_min( array $real  [, integer $timePeriod ])
array trader_minindex( array $real  [, integer $timePeriod ])
array trader_minmax( array $real  [, integer $timePeriod ])
array trader_minmaxindex( array $real  [, integer $timePeriod ])
array trader_minus_di( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_minus_dm( array $high , array $low  [, integer $timePeriod ])
array trader_mom( array $real  [, integer $timePeriod ])
array trader_mult( array $real0 , array $real1 )
array trader_natr( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_obv( array $real , array $volume )
array trader_plus_di( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_plus_dm( array $high , array $low  [, integer $timePeriod ])
array trader_ppo( array $real  [, integer $fastPeriod  [, integer $slowPeriod  [, integer $mAType ]]])
array trader_roc( array $real  [, integer $timePeriod ])
array trader_rocp( array $real  [, integer $timePeriod ])
array trader_rocr( array $real  [, integer $timePeriod ])
array trader_rocr100( array $real  [, integer $timePeriod ])
array trader_rsi( array $real  [, integer $timePeriod ])
array trader_sar( array $high , array $low  [, float $acceleration  [, float $maximum ]])
array trader_sarext( array $high , array $low  [, float $startValue  [, float $offsetOnReverse  [, float $accelerationInitLong  [, float $accelerationLong  [, float $accelerationMaxLong  [, float $accelerationInitShort  [, float $accelerationShort  [, float $accelerationMaxShort ]]]]]]]])
array trader_sin( array $real )
array trader_sinh( array $real )
array trader_sma( array $real  [, integer $timePeriod ])
array trader_sqrt( array $real )
array trader_stddev( array $real  [, integer $timePeriod  [, float $nbDev ]])
array trader_stoch( array $high , array $low , array $close  [, integer $fastK_Period  [, integer $slowK_Period  [, integer $slowK_MAType  [, integer $slowD_Period  [, integer $slowD_MAType ]]]]])
array trader_stochf( array $high , array $low , array $close  [, integer $fastK_Period  [, integer $fastD_Period  [, integer $fastD_MAType ]]])
array trader_stochrsi( array $real  [, integer $timePeriod  [, integer $fastK_Period  [, integer $fastD_Period  [, integer $fastD_MAType ]]]])
array trader_sub( array $real0 , array $real1 )
array trader_sum( array $real  [, integer $timePeriod ])
array trader_t3( array $real  [, integer $timePeriod  [, float $vFactor ]])
array trader_tan( array $real )
array trader_tanh( array $real )
array trader_tema( array $real  [, integer $timePeriod ])
array trader_trange( array $high , array $low , array $close )
array trader_trima( array $real  [, integer $timePeriod ])
array trader_trix( array $real  [, integer $timePeriod ])
array trader_tsf( array $real  [, integer $timePeriod ])
array trader_typprice( array $high , array $low , array $close )
array trader_ultosc( array $high , array $low , array $close  [, integer $timePeriod1  [, integer $timePeriod2  [, integer $timePeriod3 ]]])
array trader_var( array $real  [, integer $timePeriod  [, float $nbDev ]])
array trader_wclprice( array $high , array $low , array $close )
array trader_willr( array $high , array $low , array $close  [, integer $timePeriod ])
array trader_wma( array $real  [, integer $timePeriod ])
array udm_cat_list( resource $agent , string $category )
array udm_cat_path( resource $agent , string $category )
array unpack( string $format , string $data )
array vpopmail_alias_get( string $alias , string $domain )
array vpopmail_alias_get_all( string $domain )
array win32_ps_list_procs( void )
array win32_ps_stat_mem( void )
array win32_ps_stat_proc([ int $pid = 0 ])
array wincache_fcache_fileinfo([ bool $summaryonly = false ])
array wincache_fcache_meminfo( void )
array wincache_ocache_fileinfo([ bool $summaryonly = false ])
array wincache_ocache_meminfo( void )
array wincache_rplist_fileinfo([ bool $summaryonly = false ])
array wincache_rplist_meminfo( void )
array wincache_scache_info([ bool $summaryonly = false ])
array wincache_scache_meminfo( void )
array wincache_ucache_info([ bool $summaryonly = false  [, string $key = NULL ]])
array wincache_ucache_meminfo( void )
array xattr_list( string $filename  [, int $flags = 0 ])
array xhprof_disable( void )
array xhprof_sample_disable( void )
array xmlrpc_parse_method_descriptions( string $xml )
array yaz_es_result( resource $id )
array yaz_scan_result( resource $id  [, array &$result ])
array yp_cat( string $domain , string $map )
array yp_first( string $domain , string $map )
array yp_next( string $domain , string $map , string $key )
array|object MongoDB\BSON\toPHP( string $bson  [, array $typeMap = array() ])
bool HaruAnnotation::setBorderStyle( float $width , int $dash_on , int $dash_off )
bool HaruAnnotation::setHighlightMode( int $mode )
bool HaruAnnotation::setIcon( int $icon )
bool HaruAnnotation::setOpened( bool $opened )
bool HaruDestination::setFit( void )
bool HaruDestination::setFitB( void )
bool HaruDestination::setFitBH( float $top )
bool HaruDestination::setFitBV( float $left )
bool HaruDestination::setFitH( float $top )
bool HaruDestination::setFitR( float $left , float $bottom , float $right , float $top )
bool HaruDestination::setFitV( float $left )
bool HaruDestination::setXYZ( float $left , float $top , float $zoom )
bool HaruDoc::addPageLabel( int $first_page , int $style , int $first_num  [, string $prefix = "" ])
bool HaruDoc::output( void )
bool HaruDoc::resetError( void )
bool HaruDoc::resetStream( void )
bool HaruDoc::save( string $file )
bool HaruDoc::saveToStream( void )
bool HaruDoc::setCompressionMode( int $mode )
bool HaruDoc::setCurrentEncoder( string $encoding )
bool HaruDoc::setEncryptionMode( int $mode  [, int $key_len = 5 ])
bool HaruDoc::setInfoAttr( int $type , string $info )
bool HaruDoc::setInfoDateAttr( int $type , int $year , int $month , int $day , int $hour , int $min , int $sec , string $ind , int $off_hour , int $off_min )
bool HaruDoc::setOpenAction( object $destination )
bool HaruDoc::setPageLayout( int $layout )
bool HaruDoc::setPageMode( int $mode )
bool HaruDoc::setPagesConfiguration( int $page_per_pages )
bool HaruDoc::setPassword( string $owner_password , string $user_password )
bool HaruDoc::setPermission( int $permission )
bool HaruDoc::useCNSEncodings( void )
bool HaruDoc::useCNSFonts( void )
bool HaruDoc::useCNTEncodings( void )
bool HaruDoc::useCNTFonts( void )
bool HaruDoc::useJPEncodings( void )
bool HaruDoc::useJPFonts( void )
bool HaruDoc::useKREncodings( void )
bool HaruDoc::useKRFonts( void )
bool HaruImage::setColorMask( int $rmin , int $rmax , int $gmin , int $gmax , int $bmin , int $bmax )
bool HaruImage::setMaskImage( object $mask_image )
bool HaruOutline::setDestination( object $destination )
bool HaruOutline::setOpened( bool $opened )
bool HaruPage::arc( float $x , float $y , float $ray , float $ang1 , float $ang2 )
bool HaruPage::beginText( void )
bool HaruPage::circle( float $x , float $y , float $ray )
bool HaruPage::closePath( void )
bool HaruPage::concat( float $a , float $b , float $c , float $d , float $x , float $y )
bool HaruPage::curveTo( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )
bool HaruPage::curveTo2( float $x2 , float $y2 , float $x3 , float $y3 )
bool HaruPage::curveTo3( float $x1 , float $y1 , float $x3 , float $y3 )
bool HaruPage::drawImage( object $image , float $x , float $y , float $width , float $height )
bool HaruPage::ellipse( float $x , float $y , float $xray , float $yray )
bool HaruPage::endPath( void )
bool HaruPage::endText( void )
bool HaruPage::eoFillStroke([ bool $close_path = false ])
bool HaruPage::eofill( void )
bool HaruPage::fill( void )
bool HaruPage::fillStroke([ bool $close_path = false ])
bool HaruPage::lineTo( float $x , float $y )
bool HaruPage::moveTextPos( float $x , float $y  [, bool $set_leading = false ])
bool HaruPage::moveTo( float $x , float $y )
bool HaruPage::moveToNextLine( void )
bool HaruPage::rectangle( float $x , float $y , float $width , float $height )
bool HaruPage::setCMYKFill( float $c , float $m , float $y , float $k )
bool HaruPage::setCMYKStroke( float $c , float $m , float $y , float $k )
bool HaruPage::setCharSpace( float $char_space )
bool HaruPage::setDash( array $pattern , int $phase )
bool HaruPage::setFlatness( float $flatness )
bool HaruPage::setFontAndSize( object $font , float $size )
bool HaruPage::setGrayFill( float $value )
bool HaruPage::setGrayStroke( float $value )
bool HaruPage::setHeight( float $height )
bool HaruPage::setHorizontalScaling( float $scaling )
bool HaruPage::setLineCap( int $cap )
bool HaruPage::setLineJoin( int $join )
bool HaruPage::setLineWidth( float $width )
bool HaruPage::setMiterLimit( float $limit )
bool HaruPage::setRGBFill( float $r , float $g , float $b )
bool HaruPage::setRGBStroke( float $r , float $g , float $b )
bool HaruPage::setRotate( int $angle )
bool HaruPage::setSize( int $size , int $direction )
bool HaruPage::setSlideShow( int $type , float $disp_time , float $trans_time )
bool HaruPage::setTextLeading( float $text_leading )
bool HaruPage::setTextMatrix( float $a , float $b , float $c , float $d , float $x , float $y )
bool HaruPage::setTextRenderingMode( int $mode )
bool HaruPage::setTextRise( float $rise )
bool HaruPage::setWidth( float $width )
bool HaruPage::setWordSpace( float $word_space )
bool HaruPage::showText( string $text )
bool HaruPage::showTextNextLine( string $text  [, float $word_space = 0  [, float $char_space = 0 ]])
bool HaruPage::stroke([ bool $close_path = false ])
bool HaruPage::textOut( float $x , float $y , string $text )
bool HaruPage::textRect( float $left , float $top , float $right , float $bottom , string $text  [, int $align = HaruPage::TALIGN_LEFT ])
bool Imagick::adaptiveBlurImage( float $radius , float $sigma  [, int $channel = Imagick::CHANNEL_DEFAULT ])
bool Imagick::adaptiveResizeImage( int $columns , int $rows  [, bool $bestfit = false ])
bool Imagick::adaptiveSharpenImage( float $radius , float $sigma  [, int $channel = Imagick::CHANNEL_DEFAULT ])
bool Imagick::adaptiveThresholdImage( int $width , int $height , int $offset )
bool Imagick::addImage( Imagick $source )
bool Imagick::addNoiseImage( int $noise_type  [, int $channel = Imagick::CHANNEL_DEFAULT ])
bool Imagick::affineTransformImage( ImagickDraw $matrix )
bool Imagick::animateImages( string $x_server )
bool Imagick::annotateImage( ImagickDraw $draw_settings , float $x , float $y , float $angle , string $text )
bool Imagick::blackThresholdImage( mixed $threshold )
bool Imagick::blurImage( float $radius , float $sigma  [, int $channel ])
bool Imagick::borderImage( mixed $bordercolor , int $width , int $height )
bool Imagick::charcoalImage( float $radius , float $sigma )
bool Imagick::chopImage( int $width , int $height , int $x , int $y )
bool Imagick::clear( void )
bool Imagick::clipImage( void )
bool Imagick::clipPathImage( string $pathname , bool $inside )
bool Imagick::clutImage( Imagick $lookup_table  [, float $channel = Imagick::CHANNEL_DEFAULT ])
bool Imagick::colorFloodfillImage( mixed $fill , float $fuzz , mixed $bordercolor , int $x , int $y )
bool Imagick::colorizeImage( mixed $colorize , mixed $opacity )
bool Imagick::commentImage( string $comment )
bool Imagick::compositeImage( Imagick $composite_object , int $composite , int $x , int $y  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::contrastImage( bool $sharpen )
bool Imagick::contrastStretchImage( float $black_point , float $white_point  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::convolveImage( array $kernel  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::cropImage( int $width , int $height , int $x , int $y )
bool Imagick::cropThumbnailImage( int $width , int $height )
bool Imagick::cycleColormapImage( int $displace )
bool Imagick::decipherImage( string $passphrase )
bool Imagick::deleteImageArtifact( string $artifact )
bool Imagick::despeckleImage( void )
bool Imagick::destroy( void )
bool Imagick::displayImage( string $servername )
bool Imagick::displayImages( string $servername )
bool Imagick::distortImage( int $method , array $arguments , bool $bestfit )
bool Imagick::drawImage( ImagickDraw $draw )
bool Imagick::edgeImage( float $radius )
bool Imagick::embossImage( float $radius , float $sigma )
bool Imagick::encipherImage( string $passphrase )
bool Imagick::enhanceImage( void )
bool Imagick::equalizeImage( void )
bool Imagick::evaluateImage( int $op , float $constant  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::extentImage( int $width , int $height , int $x , int $y )
bool Imagick::floodFillPaintImage( mixed $fill , float $fuzz , mixed $target , int $x , int $y , bool $invert  [, int $channel = Imagick::CHANNEL_DEFAULT ])
bool Imagick::flopImage( void )
bool Imagick::frameImage( mixed $matte_color , int $width , int $height , int $inner_bevel , int $outer_bevel )
bool Imagick::gammaImage( float $gamma  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::gaussianBlurImage( float $radius , float $sigma  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::getImageMatte( void )
bool Imagick::hasNextImage( void )
bool Imagick::hasPreviousImage( void )
bool Imagick::implodeImage( float $radius )
bool Imagick::labelImage( string $label )
bool Imagick::levelImage( float $blackPoint , float $gamma , float $whitePoint  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::linearStretchImage( float $blackPoint , float $whitePoint )
bool Imagick::liquidRescaleImage( int $width , int $height , float $delta_x , float $rigidity )
bool Imagick::magnifyImage( void )
bool Imagick::mapImage ( Imagick $map , bool $dither )
bool Imagick::matteFloodfillImage( float $alpha , float $fuzz , mixed $bordercolor , int $x , int $y )
bool Imagick::medianFilterImage( float $radius )
bool Imagick::minifyImage( void )
bool Imagick::modulateImage( float $brightness , float $saturation , float $hue )
bool Imagick::motionBlurImage( float $radius , float $sigma , float $angle  [, int $channel = Imagick::CHANNEL_DEFAULT   ])
bool Imagick::negateImage( bool $gray  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::newImage( int $cols , int $rows , mixed $background  [, string $format ])
bool Imagick::newPseudoImage( int $columns , int $rows , string $pseudoString )
bool Imagick::nextImage( void )
bool Imagick::normalizeImage([ int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::oilPaintImage( float $radius )
bool Imagick::opaquePaintImage( mixed $target , mixed $fill , float $fuzz , bool $invert  [, int $channel = Imagick::CHANNEL_DEFAULT ])
bool Imagick::optimizeImageLayers( void )
bool Imagick::orderedPosterizeImage( string $threshold_map  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::paintFloodfillImage( mixed $fill , float $fuzz , mixed $bordercolor , int $x , int $y  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::paintOpaqueImage( mixed $target , mixed $fill , float $fuzz  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::paintTransparentImage( mixed $target , float $alpha , float $fuzz )
bool Imagick::pingImage( string $filename )
bool Imagick::pingImageBlob( string $image )
bool Imagick::pingImageFile( resource $filehandle  [, string $fileName ])
bool Imagick::polaroidImage( ImagickDraw $properties , float $angle )
bool Imagick::posterizeImage( int $levels , bool $dither )
bool Imagick::previewImages( int $preview )
bool Imagick::previousImage( void )
bool Imagick::quantizeImage ( int $numberColors , int $colorspace , int $treedepth , bool $dither , bool $measureError )
bool Imagick::quantizeImages ( int $numberColors , int $colorspace , int $treedepth , bool $dither , bool $measureError )
bool Imagick::radialBlurImage( float $angle  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::raiseImage( int $width , int $height , int $x , int $y , bool $raise )
bool Imagick::randomThresholdImage( float $low , float $high  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::readImage( string $filename )
bool Imagick::readImageBlob( string $image  [, string $filename ])
bool Imagick::readImageFile( resource $filehandle  [, string $fileName = null ])
bool Imagick::recolorImage( array $matrix )
bool Imagick::reduceNoiseImage( float $radius )
bool Imagick::removeImage( void )
bool Imagick::render( void )
bool Imagick::resampleImage( float $x_resolution , float $y_resolution , int $filter , float $blur )
bool Imagick::resetImagePage( string $page )
bool Imagick::resizeImage( int $columns , int $rows , int $filter , float $blur  [, bool $bestfit = false ])
bool Imagick::rollImage( int $x , int $y )
bool Imagick::roundCorners( float $x_rounding , float $y_rounding  [, float $stroke_width = 10   [, float $displace = 5   [, float $size_correction = -6   ]]])
bool Imagick::sampleImage( int $columns , int $rows )
bool Imagick::scaleImage( int $cols , int $rows  [, bool $bestfit = false ])
bool Imagick::separateImageChannel( int $channel )
bool Imagick::sepiaToneImage( float $threshold )
bool Imagick::setBackgroundColor( mixed $background )
bool Imagick::setColorspace( int $COLORSPACE )
bool Imagick::setCompression( int $compression )
bool Imagick::setCompressionQuality( int $quality )
bool Imagick::setFilename( string $filename )
bool Imagick::setFirstIterator( void )
bool Imagick::setFont( string $font )
bool Imagick::setFormat( string $format )
bool Imagick::setGravity( int $gravity )
bool Imagick::setImage( Imagick $replace )
bool Imagick::setImageAlphaChannel( int $mode )
bool Imagick::setImageArtifact( string $artifact , string $value )
bool Imagick::setImageBackgroundColor( mixed $background )
bool Imagick::setImageBias( float $bias )
bool Imagick::setImageBluePrimary( float $x , float $y )
bool Imagick::setImageBorderColor( mixed $border )
bool Imagick::setImageChannelDepth( int $channel , int $depth )
bool Imagick::setImageClipMask( Imagick $clip_mask )
bool Imagick::setImageColormapColor( int $index , ImagickPixel $color )
bool Imagick::setImageColorspace( int $colorspace )
bool Imagick::setImageCompose( int $compose )
bool Imagick::setImageCompression( int $compression )
bool Imagick::setImageCompressionQuality( int $quality )
bool Imagick::setImageDelay( int $delay )
bool Imagick::setImageDepth( int $depth )
bool Imagick::setImageDispose( int $dispose )
bool Imagick::setImageExtent( int $columns , int $rows )
bool Imagick::setImageFilename( string $filename )
bool Imagick::setImageFormat( string $format )
bool Imagick::setImageGamma( float $gamma )
bool Imagick::setImageGravity( int $gravity )
bool Imagick::setImageGreenPrimary( float $x , float $y )
bool Imagick::setImageIndex( int $index )
bool Imagick::setImageInterlaceScheme( int $interlace_scheme )
bool Imagick::setImageInterpolateMethod( int $method )
bool Imagick::setImageIterations( int $iterations )
bool Imagick::setImageMatte( bool $matte )
bool Imagick::setImageMatteColor( mixed $matte )
bool Imagick::setImageOpacity( float $opacity )
bool Imagick::setImageOrientation( int $orientation )
bool Imagick::setImagePage( int $width , int $height , int $x , int $y )
bool Imagick::setImageProfile( string $name , string $profile )
bool Imagick::setImageProperty( string $name , string $value )
bool Imagick::setImageRedPrimary( float $x , float $y )
bool Imagick::setImageRenderingIntent( int $rendering_intent )
bool Imagick::setImageResolution( float $x_resolution , float $y_resolution )
bool Imagick::setImageScene( int $scene )
bool Imagick::setImageTicksPerSecond( int $ticks_per_second )
bool Imagick::setImageType( int $image_type )
bool Imagick::setImageUnits( int $units )
bool Imagick::setImageVirtualPixelMethod( int $method )
bool Imagick::setImageWhitePoint( float $x , float $y )
bool Imagick::setInterlaceScheme( int $interlace_scheme )
bool Imagick::setIteratorIndex( int $index )
bool Imagick::setLastIterator( void )
bool Imagick::setOption( string $key , string $value )
bool Imagick::setPage( int $width , int $height , int $x , int $y )
bool Imagick::setPointSize( float $point_size )
bool Imagick::setResolution( float $x_resolution , float $y_resolution )
bool Imagick::setResourceLimit( int $type , int $limit )
bool Imagick::setSamplingFactors( array $factors )
bool Imagick::setSize( int $columns , int $rows )
bool Imagick::setSizeOffset( int $columns , int $rows , int $offset )
bool Imagick::setType( int $image_type )
bool Imagick::shadeImage( bool $gray , float $azimuth , float $elevation )
bool Imagick::shadowImage( float $opacity , float $sigma , int $x , int $y )
bool Imagick::sharpenImage( float $radius , float $sigma  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::shaveImage( int $columns , int $rows )
bool Imagick::shearImage( mixed $background , float $x_shear , float $y_shear )
bool Imagick::sketchImage( float $radius , float $sigma , float $angle )
bool Imagick::solarizeImage( int $threshold )
bool Imagick::spliceImage( int $width , int $height , int $x , int $y )
bool Imagick::spreadImage( float $radius )
bool Imagick::stereoImage( Imagick $offset_wand )
bool Imagick::stripImage( void )
bool Imagick::swirlImage( float $degrees )
bool Imagick::textureImage( Imagick $texture_wand )
bool Imagick::thresholdImage( float $threshold  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::tintImage( mixed $tint , mixed $opacity )
bool Imagick::transformImageColorspace( int $colorspace )
bool Imagick::transparentPaintImage( mixed $target , float $alpha , float $fuzz , bool $invert )
bool Imagick::transposeImage( void )
bool Imagick::transverseImage( void )
bool Imagick::trimImage( float $fuzz )
bool Imagick::uniqueImageColors( void )
bool Imagick::unsharpMaskImage( float $radius , float $sigma , float $amount , float $threshold  [, int $channel = Imagick::CHANNEL_ALL ])
bool Imagick::valid( void )
bool Imagick::vignetteImage( float $blackPoint , float $whitePoint , int $x , int $y )
bool Imagick::waveImage( float $amplitude , float $length )
bool Imagick::whiteThresholdImage( mixed $threshold )
bool Imagick::writeImage([ string $filename = NULL ])
bool Imagick::writeImageFile( resource $filehandle )
bool Imagick::writeImages( string $filename , bool $adjoin )
bool Imagick::writeImagesFile( resource $filehandle )
bool ImagickDraw::affine( array $affine )
bool ImagickDraw::annotation( float $x , float $y , string $text )
bool ImagickDraw::arc( float $sx , float $sy , float $ex , float $ey , float $sd , float $ed )
bool ImagickDraw::bezier( array $coordinates )
bool ImagickDraw::circle( float $ox , float $oy , float $px , float $py )
bool ImagickDraw::clear( void )
bool ImagickDraw::color( float $x , float $y , int $paintMethod )
bool ImagickDraw::comment( string $comment )
bool ImagickDraw::composite( int $compose , float $x , float $y , float $width , float $height , Imagick $compositeWand )
bool ImagickDraw::destroy( void )
bool ImagickDraw::ellipse( float $ox , float $oy , float $rx , float $ry , float $start , float $end )
bool ImagickDraw::getStrokeAntialias( void )
bool ImagickDraw::getTextAntialias( void )
bool ImagickDraw::line( float $sx , float $sy , float $ex , float $ey )
bool ImagickDraw::matte( float $x , float $y , int $paintMethod )
bool ImagickDraw::pathClose( void )
bool ImagickDraw::pathCurveToAbsolute( float $x1 , float $y1 , float $x2 , float $y2 , float $x , float $y )
bool ImagickDraw::pathCurveToQuadraticBezierAbsolute( float $x1 , float $y1 , float $x , float $y )
bool ImagickDraw::pathCurveToQuadraticBezierRelative( float $x1 , float $y1 , float $x , float $y )
bool ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute( float $x , float $y )
bool ImagickDraw::pathCurveToQuadraticBezierSmoothRelative( float $x , float $y )
bool ImagickDraw::pathCurveToRelative( float $x1 , float $y1 , float $x2 , float $y2 , float $x , float $y )
bool ImagickDraw::pathCurveToSmoothAbsolute( float $x2 , float $y2 , float $x , float $y )
bool ImagickDraw::pathCurveToSmoothRelative( float $x2 , float $y2 , float $x , float $y )
bool ImagickDraw::pathEllipticArcAbsolute( float $rx , float $ry , float $x_axis_rotation , bool $large_arc_flag , bool $sweep_flag , float $x , float $y )
bool ImagickDraw::pathEllipticArcRelative( float $rx , float $ry , float $x_axis_rotation , bool $large_arc_flag , bool $sweep_flag , float $x , float $y )
bool ImagickDraw::pathFinish( void )
bool ImagickDraw::pathLineToAbsolute( float $x , float $y )
bool ImagickDraw::pathLineToHorizontalAbsolute( float $x )
bool ImagickDraw::pathLineToHorizontalRelative( float $x )
bool ImagickDraw::pathLineToRelative( float $x , float $y )
bool ImagickDraw::pathLineToVerticalAbsolute( float $y )
bool ImagickDraw::pathLineToVerticalRelative( float $y )
bool ImagickDraw::pathMoveToAbsolute( float $x , float $y )
bool ImagickDraw::pathMoveToRelative( float $x , float $y )
bool ImagickDraw::pathStart( void )
bool ImagickDraw::point( float $x , float $y )
bool ImagickDraw::polygon( array $coordinates )
bool ImagickDraw::polyline( array $coordinates )
bool ImagickDraw::pop( void )
bool ImagickDraw::popClipPath( void )
bool ImagickDraw::popDefs( void )
bool ImagickDraw::popPattern( void )
bool ImagickDraw::push( void )
bool ImagickDraw::pushClipPath( string $clip_mask_id )
bool ImagickDraw::pushDefs( void )
bool ImagickDraw::pushPattern( string $pattern_id , float $x , float $y , float $width , float $height )
bool ImagickDraw::rectangle( float $x1 , float $y1 , float $x2 , float $y2 )
bool ImagickDraw::render( void )
bool ImagickDraw::rotate( float $degrees )
bool ImagickDraw::roundRectangle( float $x1 , float $y1 , float $x2 , float $y2 , float $rx , float $ry )
bool ImagickDraw::scale( float $x , float $y )
bool ImagickDraw::setClipPath( string $clip_mask )
bool ImagickDraw::setClipRule( int $fill_rule )
bool ImagickDraw::setClipUnits( int $clip_units )
bool ImagickDraw::setFillAlpha( float $opacity )
bool ImagickDraw::setFillColor( ImagickPixel $fill_pixel )
bool ImagickDraw::setFillOpacity( float $fillOpacity )
bool ImagickDraw::setFillPatternURL( string $fill_url )
bool ImagickDraw::setFillRule( int $fill_rule )
bool ImagickDraw::setFont( string $font_name )
bool ImagickDraw::setFontFamily( string $font_family )
bool ImagickDraw::setFontSize( float $pointsize )
bool ImagickDraw::setFontStretch( int $fontStretch )
bool ImagickDraw::setFontStyle( int $style )
bool ImagickDraw::setFontWeight( int $font_weight )
bool ImagickDraw::setStrokeAlpha( float $opacity )
bool ImagickDraw::setStrokeAntialias( bool $stroke_antialias )
bool ImagickDraw::setStrokeColor( ImagickPixel $stroke_pixel )
bool ImagickDraw::setStrokeDashArray( array $dashArray )
bool ImagickDraw::setStrokeDashOffset( float $dash_offset )
bool ImagickDraw::setStrokeLineCap( int $linecap )
bool ImagickDraw::setStrokeLineJoin( int $linejoin )
bool ImagickDraw::setStrokeMiterLimit( int $miterlimit )
bool ImagickDraw::setStrokeOpacity( float $stroke_opacity )
bool ImagickDraw::setStrokePatternURL( string $stroke_url )
bool ImagickDraw::setStrokeWidth( float $stroke_width )
bool ImagickDraw::setTextAlignment( int $alignment )
bool ImagickDraw::setTextAntialias( bool $antiAlias )
bool ImagickDraw::setTextDecoration( int $decoration )
bool ImagickDraw::setTextEncoding( string $encoding )
bool ImagickDraw::setTextUnderColor( ImagickPixel $under_color )
bool ImagickDraw::setVectorGraphics( string $xml )
bool ImagickDraw::setViewbox( int $x1 , int $y1 , int $x2 , int $y2 )
bool ImagickDraw::skewX( float $degrees )
bool ImagickDraw::skewY( float $degrees )
bool ImagickDraw::translate( float $x , float $y )
bool ImagickPixel::clear( void )
bool ImagickPixel::destroy( void )
bool ImagickPixel::isPixelSimilar( ImagickPixel $color , float $fuzz )
bool ImagickPixel::isSimilar( ImagickPixel $color , float $fuzz )
bool ImagickPixel::setColor( string $color )
bool ImagickPixel::setColorValue( int $color , float $value )
bool ImagickPixel::setHSL( float $hue , float $saturation , float $luminosity )
bool ImagickPixelIterator::clear( void )
bool ImagickPixelIterator::destroy( void )
bool ImagickPixelIterator::newPixelIterator( Imagick $wand )
bool ImagickPixelIterator::newPixelRegionIterator( Imagick $wand , int $x , int $y , int $columns , int $rows )
bool ImagickPixelIterator::resetIterator( void )
bool ImagickPixelIterator::setIteratorFirstRow( void )
bool ImagickPixelIterator::setIteratorLastRow( void )
bool ImagickPixelIterator::setIteratorRow( int $row )
bool ImagickPixelIterator::syncIterator( void )
bool Memcache::add( string $key , mixed $var  [, int $flag  [, int $expire ]])
bool Memcache::addServer( string $host  [, int $port = 11211  [, bool $persistent  [, int $weight  [, int $timeout  [, int $retry_interval  [, bool $status  [, callable $failure_callback  [, int $timeoutms ]]]]]]]])
bool Memcache::close( void )
bool Memcache::connect( string $host  [, int $port  [, int $timeout ]])
bool Memcache::delete( string $key  [, int $timeout = 0 ])
bool Memcache::flush( void )
bool Memcache::replace( string $key , mixed $var  [, int $flag  [, int $expire ]])
bool Memcache::set( string $key , mixed $var  [, int $flag  [, int $expire ]])
bool Memcache::setCompressThreshold( int $threshold  [, float $min_savings ])
bool Memcache::setServerParams( string $host  [, int $port = 11211  [, int $timeout  [, int $retry_interval = false  [, bool $status  [, callable $failure_callback ]]]]])
bool OCI-Collection::append( mixed $value )
bool OCI-Collection::assign( OCI-Collection $from )
bool OCI-Collection::assignElem( int $index , mixed $value )
bool OCI-Collection::free( void )
bool OCI-Collection::trim( int $num )
bool OCI-Lob::append( OCI-Lob $lob_from )
bool OCI-Lob::close( void )
bool OCI-Lob::eof( void )
bool OCI-Lob::export( string $filename  [, int $start  [, int $length ]])
bool OCI-Lob::flush([ int $flag ])
bool OCI-Lob::free( void )
bool OCI-Lob::getBuffering( void )
bool OCI-Lob::import( string $filename )
bool OCI-Lob::rewind( void )
bool OCI-Lob::save( string $data  [, int $offset ])
bool OCI-Lob::seek( int $offset  [, int $whence = OCI_SEEK_SET ])
bool OCI-Lob::setBuffering( bool $on_off )
bool OCI-Lob::truncate([ int $length = 0 ])
bool OCI-Lob::writeTemporary( string $data  [, int $lob_type = OCI_TEMP_CLOB ])
bool PDF_activate_item( resource $pdfdoc , int $id )
bool PDF_add_launchlink( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename )
bool PDF_add_locallink( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , int $page , string $dest )
bool PDF_add_nameddest( resource $pdfdoc , string $name , string $optlist )
bool PDF_add_note( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )
bool PDF_add_pdflink( resource $pdfdoc , float $bottom_left_x , float $bottom_left_y , float $up_right_x , float $up_right_y , string $filename , int $page , string $dest )
bool PDF_add_thumbnail( resource $pdfdoc , int $image )
bool PDF_add_weblink( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , string $url )
bool PDF_arc( resource $p , float $x , float $y , float $r , float $alpha , float $beta )
bool PDF_arcn( resource $p , float $x , float $y , float $r , float $alpha , float $beta )
bool PDF_attach_file( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename , string $description , string $author , string $mimetype , string $icon )
bool PDF_begin_font( resource $pdfdoc , string $filename , float $a , float $b , float $c , float $d , float $e , float $f , string $optlist )
bool PDF_begin_glyph( resource $pdfdoc , string $glyphname , float $wx , float $llx , float $lly , float $urx , float $ury )
bool PDF_begin_layer( resource $pdfdoc , int $layer )
bool PDF_begin_page( resource $pdfdoc , float $width , float $height )
bool PDF_begin_page_ext( resource $pdfdoc , float $width , float $height , string $optlist )
bool PDF_circle( resource $pdfdoc , float $x , float $y , float $r )
bool PDF_clip( resource $p )
bool PDF_close( resource $p )
bool PDF_close_image( resource $p , int $image )
bool PDF_close_pdi( resource $p , int $doc )
bool PDF_close_pdi_page( resource $p , int $page )
bool PDF_closepath( resource $p )
bool PDF_closepath_fill_stroke( resource $p )
bool PDF_closepath_stroke( resource $p )
bool PDF_concat( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )
bool PDF_continue_text( resource $p , string $text )
bool PDF_create_annotation( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $type , string $optlist )
bool PDF_create_field( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $name , string $type , string $optlist )
bool PDF_create_fieldgroup( resource $pdfdoc , string $name , string $optlist )
bool PDF_create_pvf( resource $pdfdoc , string $filename , string $data , string $optlist )
bool PDF_curveto( resource $p , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )
bool PDF_delete ( resource $pdfdoc )
bool PDF_delete_table ( resource $pdfdoc , int $table , string $optlist )
bool PDF_delete_textflow ( resource $pdfdoc , int $textflow )
bool PDF_encoding_set_char ( resource $pdfdoc , string $encoding , int $slot , string $glyphname , int $uv )
bool PDF_end_document ( resource $pdfdoc , string $optlist )
bool PDF_end_font ( resource $pdfdoc )
bool PDF_end_glyph ( resource $pdfdoc )
bool PDF_end_item ( resource $pdfdoc , int $id )
bool PDF_end_layer ( resource $pdfdoc )
bool PDF_end_page ( resource $p )
bool PDF_end_page_ext ( resource $pdfdoc , string $optlist )
bool PDF_end_pattern ( resource $p )
bool PDF_end_template ( resource $p )
bool PDF_endpath( resource $p )
bool PDF_fill ( resource $p )
bool PDF_fill_stroke ( resource $p )
bool PDF_fit_image ( resource $pdfdoc , int $image , float $x , float $y , string $optlist )
bool PDF_fit_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , string $optlist )
bool PDF_fit_textline ( resource $pdfdoc , string $text , float $x , float $y , string $optlist )
bool PDF_initgraphics ( resource $p )
bool PDF_lineto ( resource $p , float $x , float $y )
bool PDF_moveto ( resource $p , float $x , float $y )
bool PDF_open_file ( resource $p , string $filename )
bool PDF_place_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , float $sx , float $sy )
bool PDF_rect ( resource $p , float $x , float $y , float $width , float $height )
bool PDF_restore ( resource $p )
bool PDF_resume_page ( resource $pdfdoc , string $optlist )
bool PDF_rotate ( resource $p , float $phi )
bool PDF_save ( resource $p )
bool PDF_scale ( resource $p , float $sx , float $sy )
bool PDF_set_border_color ( resource $p , float $red , float $green , float $blue )
bool PDF_set_border_dash ( resource $pdfdoc , float $black , float $white )
bool PDF_set_border_style ( resource $pdfdoc , string $style , float $width )
bool PDF_set_gstate ( resource $pdfdoc , int $gstate )
bool PDF_set_layer_dependency ( resource $pdfdoc , string $type , string $optlist )
bool PDF_set_parameter ( resource $p , string $key , string $value )
bool PDF_set_text_pos ( resource $p , float $x , float $y )
bool PDF_set_value ( resource $p , string $key , float $value )
bool PDF_setdash( resource $pdfdoc , float $b , float $w )
bool PDF_setdashpattern( resource $pdfdoc , string $optlist )
bool PDF_setflat ( resource $pdfdoc , float $flatness )
bool PDF_setfont( resource $pdfdoc , int $font , float $fontsize )
bool PDF_setgray ( resource $p , float $g )
bool PDF_setgray_fill ( resource $p , float $g )
bool PDF_setgray_stroke ( resource $p , float $g )
bool PDF_setlinecap ( resource $p , int $linecap )
bool PDF_setlinejoin ( resource $p , int $value )
bool PDF_setlinewidth ( resource $p , float $width )
bool PDF_setmatrix ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )
bool PDF_setmiterlimit ( resource $pdfdoc , float $miter )
bool PDF_setrgbcolor ( resource $p , float $red , float $green , float $blue )
bool PDF_setrgbcolor_fill ( resource $p , float $red , float $green , float $blue )
bool PDF_setrgbcolor_stroke ( resource $p , float $red , float $green , float $blue )
bool PDF_shfill ( resource $pdfdoc , int $shading )
bool PDF_show ( resource $pdfdoc , string $text )
bool PDF_show_xy ( resource $p , string $text , float $x , float $y )
bool PDF_skew ( resource $p , float $alpha , float $beta )
bool PDF_stroke ( resource $p )
bool PDF_suspend_page ( resource $pdfdoc , string $optlist )
bool PDF_translate ( resource $p , float $tx , float $ty )
bool PharData::addEmptyDir( string $dirname )
bool PharData::addFromString( string $localname , string $contents )
bool PharData::compressFiles( int $compression )
bool PharData::copy( string $oldfile , string $newfile )
bool PharData::decompressFiles( void )
bool PharData::delMetadata( void )
bool PharData::delete( string $entry )
bool PharData::extractTo( string $pathto  [, string|array $files  [, bool $overwrite = false ]])
bool PharData::isWritable( void )
bool PharData::offsetUnset( string $offset )
bool PharData::setAlias( string $alias )
bool PharData::setDefaultStub([ string $index  [, string $webindex ]])
bool PharData::setStub( string $stub  [, int $len = -1 ])
bool SAMConnection::commit ( void )
bool SAMConnection::connect( string $protocol  [, array $properties ])
bool SAMConnection::disconnect ( void )
bool SAMConnection::isConnected( void )
bool SAMConnection::rollback ( void )
bool SAMConnection::unsubscribe( string $subscriptionId  [, string $targetTopic ])
bool SDO_DAS_ChangeSummary::isLogging( void )
bool SDO_DAS_Setting::isSet( void )
bool SDO_Model_Property::isContainment( void )
bool SDO_Model_Property::isMany( void )
bool SDO_Model_Type::isAbstractType( void )
bool SDO_Model_Type::isDataType( void )
bool SDO_Model_Type::isInstance( SDO_DataObject $data_object )
bool SDO_Model_Type::isOpenType( void )
bool SDO_Model_Type::isSequencedType( void )
bool XMLWriter::endAttribute( void )
bool XMLWriter::endCData( void )
bool XMLWriter::endComment( void )
bool XMLWriter::endDTD( void )
bool XMLWriter::endDTDAttlist( void )
bool XMLWriter::endDTDElement( void )
bool XMLWriter::endDTDEntity( void )
bool XMLWriter::endDocument( void )
bool XMLWriter::endElement( void )
bool XMLWriter::endPI( void )
bool XMLWriter::fullEndElement( void )
bool XMLWriter::openMemory( void )
bool XMLWriter::openURI( string $uri )
bool XMLWriter::setIndent( bool $indent )
bool XMLWriter::setIndentString( string $indentString )
bool XMLWriter::startAttribute( string $name )
bool XMLWriter::startAttributeNS( string $prefix , string $name , string $uri )
bool XMLWriter::startCData( void )
bool XMLWriter::startComment( void )
bool XMLWriter::startDTD( string $qualifiedName  [, string $publicId  [, string $systemId ]])
bool XMLWriter::startDTDAttlist( string $name )
bool XMLWriter::startDTDElement( string $qualifiedName )
bool XMLWriter::startDTDEntity( string $name , bool $isparam )
bool XMLWriter::startDocument([ string $version = 1.0  [, string $encoding = NULL  [, string $standalone ]]])
bool XMLWriter::startElement( string $name )
bool XMLWriter::startElementNS( string $prefix , string $name , string $uri )
bool XMLWriter::startPI( string $target )
bool XMLWriter::text( string $content )
bool XMLWriter::writeAttribute( string $name , string $value )
bool XMLWriter::writeAttributeNS( string $prefix , string $name , string $uri , string $content )
bool XMLWriter::writeCData( string $content )
bool XMLWriter::writeComment( string $content )
bool XMLWriter::writeDTD( string $name  [, string $publicId  [, string $systemId  [, string $subset ]]])
bool XMLWriter::writeDTDAttlist( string $name , string $content )
bool XMLWriter::writeDTDElement( string $name , string $content )
bool XMLWriter::writeDTDEntity( string $name , string $content , bool $pe , string $pubid , string $sysid , string $ndataid )
bool XMLWriter::writeElement( string $name  [, string $content ])
bool XMLWriter::writeElementNS( string $prefix , string $name , string $uri  [, string $content ])
bool XMLWriter::writePI( string $target , string $content )
bool XMLWriter::writeRaw( string $content )
bool XSLTProcessor::hasExsltSupport( void )
bool XSLTProcessor::removeParameter( string $namespaceURI , string $localName )
bool XSLTProcessor::setParameter( string $namespace , string $name , string $value )
bool XSLTProcessor::setProfiling( string $filename )
bool ZipArchive::GetExternalAttributesIndex( int $index , int &$opsys , int &$attr  [, int $flags ])
bool ZipArchive::addEmptyDir( string $dirname )
bool ZipArchive::addFromString( string $localname , string $contents )
bool ZipArchive::addGlob( string $pattern  [, int $flags = 0  [, array $options = array() ]])
bool ZipArchive::addPattern( string $pattern  [, string $path = "."  [, array $options = array() ]])
bool ZipArchive::close( void )
bool ZipArchive::deleteIndex( int $index )
bool ZipArchive::deleteName( string $name )
bool ZipArchive::extractTo( string $destination  [, mixed $entries ])
bool ZipArchive::getExternalAttributesName( string $name , int &$opsys , int &$attr  [, int $flags ])
bool ZipArchive::renameIndex( int $index , string $newname )
bool ZipArchive::renameName( string $name , string $newname )
bool ZipArchive::setArchiveComment( string $comment )
bool ZipArchive::setCommentIndex( int $index , string $comment )
bool ZipArchive::setCommentName( string $name , string $comment )
bool ZipArchive::setCompressionIndex( int $index , int $comp_method  [, int $comp_flags = 0 ])
bool ZipArchive::setCompressionName( string $name , int $comp_method  [, int $comp_flags = 0 ])
bool ZipArchive::setExternalAttributesIndex( int $index , int $opsys , int $attr  [, int $flags ])
bool ZipArchive::setExternalAttributesName( string $name , int $opsys , int $attr  [, int $flags ])
bool ZipArchive::unchangeAll( void )
bool ZipArchive::unchangeArchive( void )
bool ZipArchive::unchangeIndex( int $index )
bool ZipArchive::unchangeName( string $name )
bool apache_child_terminate( void )
bool apache_reset_timeout( void )
bool apache_setenv( string $variable , string $value  [, bool $walk_to_top = false ])
bool apc_add( string $key , mixed $var  [, int $ttl = 0 ])
bool apc_bin_load( string $data  [, int $flags = 0 ])
bool apc_bin_loadfile( string $filename  [, resource $context = NULL  [, int $flags = 0 ]])
bool apc_cas( string $key , int $old , int $new )
bool apc_clear_cache([ string $cache_type = "" ])
bool apc_define_constants( string $key , array $constants  [, bool $case_sensitive = true ])
bool apc_load_constants( string $key  [, bool $case_sensitive = true ])
bool apcu_add( string $key , mixed $var  [, int $ttl = 0 ])
bool apcu_cas( string $key , int $old , int $new )
bool apcu_clear_cache( void )
bool apcu_store( string $key , mixed $var  [, int $ttl = 0 ])
bool apd_breakpoint( int $debug_level )
bool apd_continue( int $debug_level )
bool apd_echo( string $output )
bool apd_set_session_trace_socket( string $tcp_server , int $socket_type , int $port , int $debug_level )
bool array_key_exists( mixed $key , array $array )
bool array_walk_recursive( array &$array , callable $callback  [, mixed $userdata = NULL ])
bool arsort( array &$array  [, int $sort_flags = SORT_REGULAR ])
bool bbcode_add_element( resource $bbcode_container , string $tag_name , array $tag_rules )
bool bbcode_add_smiley( resource $bbcode_container , string $smiley , string $replace_by )
bool bbcode_destroy( resource $bbcode_container )
bool bbcode_set_arg_parser( resource $bbcode_container , resource $bbcode_arg_parser )
bool bbcode_set_flags( resource $bbcode_container , int $flags  [, int $mode = BBCODE_SET_FLAGS_SET ])
bool bcompiler_load( string $filename )
bool bcompiler_load_exe( string $filename )
bool bcompiler_parse_class( string $class , string $callback )
bool bcompiler_read( resource $filehandle )
bool bcompiler_write_class( resource $filehandle , string $className  [, string $extends ])
bool bcompiler_write_constant( resource $filehandle , string $constantName )
bool bcompiler_write_exe_footer( resource $filehandle , int $startpos )
bool bcompiler_write_file( resource $filehandle , string $filename )
bool bcompiler_write_footer( resource $filehandle )
bool bcompiler_write_function( resource $filehandle , string $functionName )
bool bcompiler_write_functions_from_file( resource $filehandle , string $fileName )
bool bcompiler_write_header( resource $filehandle  [, string $write_ver ])
bool bcompiler_write_included_filename( resource $filehandle , string $filename )
bool bcscale( int $scale )
bool bzflush( resource $bz )
bool cairo_font_options_equal( CairoFontOptions $options , CairoFontOptions $other )
bool cairo_ps_surface_get_eps( CairoPsSurface $surface )
bool chdb_create( string $pathname , array $data )
bool chdir( string $directory )
bool checkdate( int $month , int $day , int $year )
bool chgrp( string $filename , mixed $group )
bool chown( string $filename , mixed $user )
bool chroot( string $directory )
bool class_alias( string $original , string $alias  [, bool $autoload = TRUE ])
bool class_exists( string $class_name  [, bool $autoload = true ])
bool classkit_method_add( string $classname , string $methodname , string $args , string $code  [, int $flags = CLASSKIT_ACC_PUBLIC ])
bool classkit_method_copy( string $dClass , string $dMethod , string $sClass  [, string $sMethod ])
bool classkit_method_redefine( string $classname , string $methodname , string $args , string $code  [, int $flags = CLASSKIT_ACC_PUBLIC ])
bool classkit_method_remove( string $classname , string $methodname )
bool classkit_method_rename( string $classname , string $methodname , string $newname )
bool cli_set_process_title( string $title )
bool closelog( void )
bool com_event_sink( variant $comobject , object $sinkobject  [, mixed $sinkinterface ])
bool com_load_typelib( string $typelib_name  [, bool $case_insensitive = true ])
bool com_message_pump([ int $timeoutms = 0 ])
bool com_print_typeinfo( object $comobject  [, string $dispinterface  [, bool $wantsink = false ]])
bool crack_check( resource $dictionary , string $password )
bool crack_closedict([ resource $dictionary ])
bool ctype_alnum( string $text )
bool ctype_alpha( string $text )
bool ctype_cntrl( string $text )
bool ctype_digit( string $text )
bool ctype_graph( string $text )
bool ctype_lower( string $text )
bool ctype_print( string $text )
bool ctype_punct( string $text )
bool ctype_space( string $text )
bool ctype_upper( string $text )
bool ctype_xdigit( string $text )
bool cubrid_bind( resource $req_identifier , int $bind_index , mixed $bind_value  [, string $bind_value_type ])
bool cubrid_close([ resource $conn_identifier  ])
bool cubrid_close_prepare( resource $req_identifier )
bool cubrid_close_request( resource $req_identifier )
bool cubrid_commit( resource $conn_identifier)
bool cubrid_data_seek( resource $result , int $row_number )
bool cubrid_disconnect([ resource $conn_identifier ])
bool cubrid_drop( resource $conn_identifier  , string $oid  )
bool cubrid_field_seek( resource $result  [, int $field_offset = 0 ])
bool cubrid_free_result( resource $req_identifier  )
bool cubrid_get_autocommit( resource $conn_identifier )
bool cubrid_lob2_bind( resource $req_identifier , int $bind_index , mixed $bind_value  [, string $bind_value_type ])
bool cubrid_lob2_close( resource $lob_identifier )
bool cubrid_lob2_export( resource $lob_identifier , string $file_name )
bool cubrid_lob2_import( resource $lob_identifier , string $file_name )
bool cubrid_lob2_seek( resource $lob_identifier , int $offset  [, int $origin = CUBRID_CURSOR_CURRENT ])
bool cubrid_lob2_seek64( resource $lob_identifier , string $offset  [, int $origin = CUBRID_CURSOR_CURRENT ])
bool cubrid_lob2_write( resource $lob_identifier , string $buf )
bool cubrid_lob_close( array $lob_identifier_array  )
bool cubrid_lob_export( resource $conn_identifier  , resource $lob_identifier  , string $path_name  )
bool cubrid_lob_send( resource $conn_identifier  , resource $lob_identifier  )
bool cubrid_lock_read( resource $conn_identifier  , string $oid  )
bool cubrid_lock_write( resource $conn_identifier  , string $oid  )
bool cubrid_next_result( resource $result  )
bool cubrid_ping([ resource $conn_identifier ])
bool cubrid_rollback( resource $conn_identifier  )
bool cubrid_seq_drop( resource $conn_identifier  , string $oid  , string $attr_name  , int $index  )
bool cubrid_seq_insert( resource $conn_identifier  , string $oid  , string $attr_name  , int $index  , string $seq_element  )
bool cubrid_seq_put( resource $conn_identifier  , string $oid  , string $attr_name  , int $index  , string $seq_element  )
bool cubrid_set_add( resource $conn_identifier  , string $oid  , string $attr_name  , string $set_element )
bool cubrid_set_autocommit( resource $conn_identifier , bool $mode  )
bool cubrid_set_db_parameter( resource $conn_identifier  , int $param_type  , int $param_value  )
bool cubrid_set_drop( resource $conn_identifier  , string $oid  , string $attr_name  , string $set_element )
bool cubrid_set_query_timeout( resource $req_identifier , int $timeout  )
bool curl_multi_setopt( resource $mh , int $option , mixed $value )
bool curl_setopt_array( resource $ch , array $options )
bool curl_share_setopt( resource $sh , int $option , string $value )
bool cyrus_bind( resource $connection , array $callbacks )
bool cyrus_close( resource $connection )
bool cyrus_unbind( resource $connection , string $trigger_name )
bool date_default_timezone_set( string $timezone_identifier )
bool db2_bind_param( resource $stmt , int $parameter-number , string $variable-name  [, int $parameter-type  [, int $data-type = 0  [, int $precision = -1  [, int $scale = 0 ]]]])
bool db2_close( resource $connection )
bool db2_commit( resource $connection )
bool db2_execute( resource $stmt  [, array $parameters ])
bool db2_fetch_row( resource $stmt  [, int $row_number ])
bool db2_free_result( resource $stmt )
bool db2_free_stmt( resource $stmt )
bool db2_pclose( resource $resource    )
bool db2_rollback( resource $connection )
bool db2_set_option  ( resource $resource     , array $options  , int $type  )
bool dba_delete( string $key , resource $handle )
bool dba_exists( string $key , resource $handle )
bool dba_insert( string $key , string $value , resource $handle )
bool dba_optimize( resource $handle )
bool dba_sync( resource $handle )
bool dbase_add_record( int $dbase_identifier , array $record )
bool dbase_close( int $dbase_identifier )
bool dbase_delete_record( int $dbase_identifier , int $record_number )
bool dbase_pack( int $dbase_identifier )
bool dbase_replace_record( int $dbase_identifier , array $record , int $record_number )
bool dbx_sort( object $result , string $user_compare_function )
bool defined( string $name )
bool dio_tcsetattr( resource $fd , array $options )
bool dio_truncate( resource $fd , int $offset )
bool dl( string $library )
bool eio_event_loop( void )
bool enchant_broker_dict_exists( resource $broker , string $tag )
bool enchant_broker_free( resource $broker )
bool enchant_broker_free_dict( resource $dict )
bool enchant_broker_get_dict_path( resource $broker , int $dict_type )
bool enchant_broker_set_dict_path( resource $broker , int $dict_type , string $value )
bool enchant_broker_set_ordering( resource $broker , string $tag , string $ordering )
bool enchant_dict_check( resource $dict , string $word )
bool enchant_dict_is_in_session( resource $dict , string $word )
bool enchant_dict_quick_check( resource $dict , string $word  [, array &$suggestions ])
bool event_base_loopbreak( resource $event_base )
bool event_base_loopexit( resource $event_base  [, int $timeout = -1 ])
bool event_base_priority_init( resource $event_base , int $npriorities )
bool event_base_reinit( resource $event_base )
bool event_base_set( resource $event , resource $event_base )
bool event_buffer_base_set( resource $bevent , resource $event_base )
bool event_buffer_disable( resource $bevent , int $events )
bool event_buffer_enable( resource $bevent , int $events )
bool event_buffer_priority_set( resource $bevent , int $priority )
bool event_buffer_set_callback( resource $event , mixed $readcb , mixed $writecb , mixed $errorcb  [, mixed $arg ])
bool event_buffer_write( resource $bevent , string $data  [, int $data_size = -1 ])
bool event_priority_set( resource $event , int $priority )
bool event_timer_set( resource $event , callable $callback  [, mixed $arg ])
bool extension_loaded( string $name )
bool fam_cancel_monitor( resource $fam , resource $fam_monitor )
bool fam_resume_monitor( resource $fam , resource $fam_monitor )
bool fam_suspend_monitor( resource $fam , resource $fam_monitor )
bool fann_cascadetrain_on_file( resource $ann , string $filename , int $max_neurons , int $neurons_between_reports , float $desired_error )
bool fann_clear_scaling_params( resource $ann )
bool fann_descale_input( resource $ann , array $input_vector )
bool fann_descale_output( resource $ann , array $output_vector )
bool fann_descale_train( resource $ann , resource $train_data )
bool fann_destroy( resource $ann )
bool fann_destroy_train( resource $train_data )
bool fann_randomize_weights( resource $ann , float $min_weight , float $max_weight )
bool fann_reset_MSE( string $ann )
bool fann_save( resource $ann , string $configuration_file )
bool fann_save_train( resource $data , string $file_name )
bool fann_scale_input( resource $ann , array $input_vector )
bool fann_scale_input_train_data( resource $train_data , float $new_min , float $new_max )
bool fann_scale_output( resource $ann , array $output_vector )
bool fann_scale_output_train_data( resource $train_data , float $new_min , float $new_max )
bool fann_scale_train( resource $ann , resource $train_data )
bool fann_scale_train_data( resource $train_data , float $new_min , float $new_max )
bool fann_set_activation_function( resource $ann , int $activation_function , int $layer , int $neuron )
bool fann_set_activation_function_hidden( resource $ann , int $activation_function )
bool fann_set_activation_function_layer( resource $ann , int $activation_function , int $layer )
bool fann_set_activation_function_output( resource $ann , int $activation_function )
bool fann_set_activation_steepness( resource $ann , float $activation_steepness , int $layer , int $neuron )
bool fann_set_activation_steepness_hidden( resource $ann , float $activation_steepness )
bool fann_set_activation_steepness_layer( resource $ann , float $activation_steepness , int $layer )
bool fann_set_activation_steepness_output( resource $ann , float $activation_steepness )
bool fann_set_bit_fail_limit( resource $ann , float $bit_fail_limit )
bool fann_set_callback( resource $ann , collable $callback )
bool fann_set_cascade_activation_functions( resource $ann , array $cascade_activation_functions )
bool fann_set_cascade_activation_steepnesses( resource $ann , array $cascade_activation_steepnesses_count )
bool fann_set_cascade_candidate_change_fraction( resource $ann , float $cascade_candidate_change_fraction )
bool fann_set_cascade_candidate_limit( resource $ann , float $cascade_candidate_limit )
bool fann_set_cascade_candidate_stagnation_epochs( resource $ann , int $cascade_candidate_stagnation_epochs )
bool fann_set_cascade_max_cand_epochs( resource $ann , int $cascade_max_cand_epochs )
bool fann_set_cascade_max_out_epochs( resource $ann , int $cascade_max_out_epochs )
bool fann_set_cascade_min_cand_epochs( resource $ann , int $cascade_min_cand_epochs )
bool fann_set_cascade_min_out_epochs( resource $ann , int $cascade_min_out_epochs )
bool fann_set_cascade_num_candidate_groups( resource $ann , int $cascade_num_candidate_groups )
bool fann_set_cascade_output_change_fraction( resource $ann , float $cascade_output_change_fraction )
bool fann_set_cascade_output_stagnation_epochs( resource $ann , int $cascade_output_stagnation_epochs )
bool fann_set_cascade_weight_multiplier( resource $ann , float $cascade_weight_multiplier )
bool fann_set_input_scaling_params( resource $ann , resource $train_data , float $new_input_min , float $new_input_max )
bool fann_set_learning_momentum( resource $ann , float $learning_momentum )
bool fann_set_learning_rate( resource $ann , float $learning_rate )
bool fann_set_output_scaling_params( resource $ann , resource $train_data , float $new_output_min , float $new_output_max )
bool fann_set_quickprop_decay( resource $ann , float $quickprop_decay )
bool fann_set_quickprop_mu( resource $ann , float $quickprop_mu )
bool fann_set_rprop_decrease_factor( resource $ann , float $rprop_decrease_factor )
bool fann_set_rprop_delta_max( resource $ann , float $rprop_delta_max )
bool fann_set_rprop_delta_min( resource $ann , float $rprop_delta_min )
bool fann_set_rprop_delta_zero( resource $ann , float $rprop_delta_zero )
bool fann_set_rprop_increase_factor( resource $ann , float $rprop_increase_factor )
bool fann_set_sarprop_step_error_shift( resource $ann , float $sarprop_step_error_shift )
bool fann_set_sarprop_step_error_threshold_factor( resource $ann , float $sarprop_step_error_threshold_factor )
bool fann_set_sarprop_temperature( resource $ann , float $sarprop_temperature )
bool fann_set_sarprop_weight_decay_shift( resource $ann , float $sarprop_weight_decay_shift )
bool fann_set_scaling_params( resource $ann , resource $train_data , float $new_input_min , float $new_input_max , float $new_output_min , float $new_output_max )
bool fann_set_train_error_function( resource $ann , int $error_function )
bool fann_set_train_stop_function( resource $ann , int $stop_function )
bool fann_set_training_algorithm( resource $ann , int $training_algorithm )
bool fann_set_weight( resource $ann , int $from_neuron , int $to_neuron , float $weight )
bool fann_set_weight_array( resource $ann , array $connections )
bool fann_shuffle_train_data( resource $train_data )
bool fann_test( resource $ann , array $input , array $desired_output )
bool fann_train( resource $ann , array $input , array $desired_output )
bool fann_train_on_data( resource $ann , resource $data , int $max_epochs , int $epochs_between_reports , float $desired_error )
bool fann_train_on_file( resource $ann , string $filename , int $max_epochs , int $epochs_between_reports , float $desired_error )
bool fbsql_autocommit( resource $link_identifier  [, bool $OnOff ])
bool fbsql_change_user( string $user , string $password  [, string $database  [, resource $link_identifier ]])
bool fbsql_close([ resource $link_identifier ])
bool fbsql_commit([ resource $link_identifier ])
bool fbsql_create_db( string $database_name  [, resource $link_identifier  [, string $database_options ]])
bool fbsql_data_seek( resource $result , int $row_number )
bool fbsql_drop_db( string $database_name  [, resource $link_identifier ])
bool fbsql_field_seek( resource $result  [, int $field_offset ])
bool fbsql_free_result( resource $result )
bool fbsql_next_result( resource $result )
bool fbsql_rollback([ resource $link_identifier ])
bool fbsql_select_db([ string $database_name  [, resource $link_identifier ]])
bool fbsql_set_lob_mode( resource $result , int $lob_mode )
bool fbsql_set_password( resource $link_identifier , string $user , string $password , string $old_password )
bool fbsql_start_db( string $database_name  [, resource $link_identifier  [, string $database_options ]])
bool fbsql_stop_db( string $database_name  [, resource $link_identifier ])
bool fbsql_warnings([ bool $OnOff ])
bool fclose( resource $handle )
bool fdf_add_template( resource $fdf_document , int $newpage , string $filename , string $template , int $rename )
bool fdf_enum_values( resource $fdf_document , callable $function  [, mixed $userdata ])
bool fdf_get_ap( resource $fdf_document , string $field , int $face , string $filename )
bool fdf_remove_item( resource $fdf_document , string $fieldname , int $item )
bool fdf_save( resource $fdf_document  [, string $filename ])
bool fdf_set_ap( resource $fdf_document , string $field_name , int $face , string $filename , int $page_number )
bool fdf_set_encoding( resource $fdf_document , string $encoding )
bool fdf_set_file( resource $fdf_document , string $url  [, string $target_frame ])
bool fdf_set_flags( resource $fdf_document , string $fieldname , int $whichFlags , int $newFlags )
bool fdf_set_javascript_action( resource $fdf_document , string $fieldname , int $trigger , string $script )
bool fdf_set_on_import_javascript( resource $fdf_document , string $script , bool $before_data_import )
bool fdf_set_opt( resource $fdf_document , string $fieldname , int $element , string $str1 , string $str2 )
bool fdf_set_status( resource $fdf_document , string $status )
bool fdf_set_submit_form_action( resource $fdf_document , string $fieldname , int $trigger , string $script , int $flags )
bool fdf_set_target_frame( resource $fdf_document , string $frame_name )
bool fdf_set_value( resource $fdf_document , string $fieldname , mixed $value  [, int $isName ])
bool fdf_set_version( resource $fdf_document , string $version )
bool feof( resource $handle )
bool fflush( resource $handle )
bool file_exists( string $filename )
bool filepro( string $directory )
bool filter_has_var( int $type , string $variable_name )
bool finfo_close( resource $finfo )
bool ftp_alloc( resource $ftp_stream , int $filesize  [, string &$result ])
bool ftp_cdup( resource $ftp_stream )
bool ftp_chdir( resource $ftp_stream , string $directory )
bool ftp_close( resource $ftp_stream )
bool ftp_delete( resource $ftp_stream , string $path )
bool ftp_exec( resource $ftp_stream , string $command )
bool ftp_fget( resource $ftp_stream , resource $handle , string $remote_file , int $mode  [, int $resumepos = 0 ])
bool ftp_fput( resource $ftp_stream , string $remote_file , resource $handle , int $mode  [, int $startpos = 0 ])
bool ftp_login( resource $ftp_stream , string $username , string $password )
bool ftp_pasv( resource $ftp_stream , bool $pasv )
bool ftp_put( resource $ftp_stream , string $remote_file , string $local_file , int $mode  [, int $startpos = 0 ])
bool ftp_rename( resource $ftp_stream , string $oldname , string $newname )
bool ftp_rmdir( resource $ftp_stream , string $directory )
bool ftp_set_option( resource $ftp_stream , int $option , mixed $value )
bool ftruncate( resource $handle , int $size )
bool function_exists( string $function_name )
bool gc_enabled( void )
bool geoip_db_avail( int $database )
bool get_magic_quotes_gpc( void )
bool getmxrr( string $hostname , array &$mxhosts  [, array &$weight ])
bool gmp_perfect_square( GMP $a )
bool gmp_testbit( GMP $a , int $index )
bool gnupg_addencryptkey( resource $identifier , string $fingerprint )
bool gnupg_addsignkey( resource $identifier , string $fingerprint  [, string $passphrase ])
bool gnupg_cleardecryptkeys( resource $identifier )
bool gnupg_clearencryptkeys( resource $identifier )
bool gnupg_clearsignkeys( resource $identifier )
bool gnupg_setarmor( resource $identifier , int $armor )
bool gnupg_setsignmode( resource $identifier , int $signmode )
bool gupnp_context_host_path( resource $context , string $local_path , string $server_path )
bool gupnp_context_timeout_add( resource $context , int $timeout , mixed $callback  [, mixed $arg ])
bool gupnp_context_unhost_path( resource $context , string $server_path )
bool gupnp_control_point_browse_start( resource $cpoint )
bool gupnp_control_point_browse_stop( resource $cpoint )
bool gupnp_control_point_callback_set( resource $cpoint , int $signal , mixed $callback  [, mixed $arg ])
bool gupnp_device_action_callback_set( resource $root_device , int $signal , string $action_name , mixed $callback  [, mixed $arg ])
bool gupnp_root_device_get_available( resource $root_device )
bool gupnp_root_device_set_available( resource $root_device , bool $available )
bool gupnp_root_device_start( resource $root_device )
bool gupnp_root_device_stop( resource $root_device )
bool gupnp_service_action_return( resource $action )
bool gupnp_service_action_return_error( resource $action , int $error_code  [, string $error_description ])
bool gupnp_service_action_set( resource $action , string $name , int $type , mixed $value )
bool gupnp_service_freeze_notify( resource $service )
bool gupnp_service_notify( resource $service , string $name , int $type , mixed $value )
bool gupnp_service_proxy_action_set( resource $proxy , string $action , string $name , mixed $value , int $type )
bool gupnp_service_proxy_add_notify( resource $proxy , string $value , int $type , mixed $callback  [, mixed $arg ])
bool gupnp_service_proxy_callback_set( resource $proxy , int $signal , mixed $callback  [, mixed $arg ])
bool gupnp_service_proxy_get_subscribed( resource $proxy )
bool gupnp_service_proxy_remove_notify( resource $proxy , string $value )
bool gupnp_service_proxy_set_subscribed( resource $proxy , bool $subscribed )
bool gupnp_service_thaw_notify( resource $service )
bool gzclose( resource $zp )
bool gzrewind( resource $zp )
bool hash_equals( string $known_string , string $user_string )
bool hash_update( resource $context , string $data )
bool hash_update_file( resource $hcontext , string $filename  [, resource $scontext = NULL ])
bool header_register_callback( callable $callback )
bool headers_sent([ string &$file  [, int &$line ]])
bool hw_api::checkin( array $parameter )
bool hw_api::checkout( array $parameter )
bool hw_api::identify( array $parameter )
bool hw_api::link( array $parameter )
bool hw_api::lock( array $parameter )
bool hw_api::move( array $parameter )
bool hw_api::remove( array $parameter )
bool hw_api::unlock( array $parameter )
bool hw_api_object::assign( array $parameter )
bool hw_api_object::attreditable( array $parameter )
bool hw_api_object::insert( HW_API_Attribute $attribute )
bool hw_api_object::remove( string $name )
bool ibase_add_user( resource $service_handle , string $user_name , string $password  [, string $first_name  [, string $middle_name  [, string $last_name ]]])
bool ibase_blob_cancel( resource $blob_handle )
bool ibase_blob_echo( string $blob_id )
bool ibase_close([ resource $connection_id = NULL ])
bool ibase_commit([ resource $link_or_trans_identifier = NULL ])
bool ibase_commit_ret([ resource $link_or_trans_identifier = NULL ])
bool ibase_delete_user( resource $service_handle , string $user_name )
bool ibase_drop_db([ resource $connection = NULL ])
bool ibase_free_event_handler( resource $event )
bool ibase_free_query( resource $query )
bool ibase_free_result( resource $result_identifier )
bool ibase_maintain_db( resource $service_handle , string $db , int $action  [, int $argument = 0 ])
bool ibase_modify_user( resource $service_handle , string $user_name , string $password  [, string $first_name  [, string $middle_name  [, string $last_name ]]])
bool ibase_name_result( resource $result , string $name )
bool ibase_rollback([ resource $link_or_trans_identifier = NULL ])
bool ibase_rollback_ret([ resource $link_or_trans_identifier = NULL ])
bool ibase_service_detach( resource $service_handle )
bool iconv_set_encoding( string $type , string $charset )
bool id3_remove_tag( string $filename  [, int $version = ID3_V1_0 ])
bool id3_set_tag( string $filename , array $tag  [, int $version = ID3_V1_0 ])
bool ifx_blobinfile_mode( int $mode )
bool ifx_byteasvarchar( int $mode )
bool ifx_close([ resource $link_identifier ])
bool ifx_do( resource $result_id )
bool ifx_free_blob( int $bid )
bool ifx_free_char( int $bid )
bool ifx_free_result( resource $result_id )
bool ifx_nullformat( int $mode )
bool ifx_textasvarchar( int $mode )
bool ifx_update_blob( int $bid , string $content )
bool ifx_update_char( int $bid , string $content )
bool ifxus_close_slob( int $bid )
bool ifxus_free_slob( int $bid )
bool image2wbmp( resource $image  [, string $filename  [, int $threshold ]])
bool imageantialias( resource $image , bool $enabled )
bool imagechar( resource $image , int $font , int $x , int $y , string $c , int $color )
bool imagecharup( resource $image , int $font , int $x , int $y , string $c , int $color )
bool imagecolordeallocate( resource $image , int $color )
bool imagecolormatch( resource $image1 , resource $image2 )
bool imageconvolution( resource $image , array $matrix , float $div , float $offset )
bool imagecopymergegray( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )
bool imagecopyresampled( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )
bool imagedashedline( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )
bool imagedestroy( resource $image )
bool imageellipse( resource $image , int $cx , int $cy , int $width , int $height , int $color )
bool imagefill( resource $image , int $x , int $y , int $color )
bool imagefilledellipse( resource $image , int $cx , int $cy , int $width , int $height , int $color )
bool imagefilledpolygon( resource $image , array $points , int $num_points , int $color )
bool imagefilltoborder( resource $image , int $x , int $y , int $border , int $color )
bool imagefilter( resource $image , int $filtertype  [, int $arg1  [, int $arg2  [, int $arg3  [, int $arg4 ]]]])
bool imageflip( resource $image , int $mode )
bool imagegammacorrect( resource $image , float $inputgamma , float $outputgamma )
bool imagegd( resource $image  [, string $filename ])
bool imagegd2( resource $image  [, string $filename  [, int $chunk_size  [, int $type = IMG_GD2_RAW ]]])
bool imagegif( resource $image  [, string $filename ])
bool imageistruecolor( resource $image )
bool imagelayereffect( resource $image , int $effect )
bool imagepalettetotruecolor( resource $src )
bool imagepng( resource $image  [, string $filename  [, int $quality  [, int $filters ]]])
bool imagepolygon( resource $image , array $points , int $num_points , int $color )
bool imagepsencodefont( resource $font_index , string $encodingfile )
bool imagepsfreefont( resource $font_index )
bool imagepsslantfont( resource $font_index , float $slant )
bool imagerectangle( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )
bool imagesavealpha( resource $image , bool $saveflag )
bool imagesetbrush( resource $image , resource $brush )
bool imagesetinterpolation( resource $image  [, int $method = IMG_BILINEAR_FIXED ])
bool imagesetpixel( resource $image , int $x , int $y , int $color )
bool imagesetstyle( resource $image , array $style )
bool imagesetthickness( resource $image , int $thickness )
bool imagesettile( resource $image , resource $tile )
bool imagestringup( resource $image , int $font , int $x , int $y , string $string , int $color )
bool imagetruecolortopalette( resource $image , bool $dither , int $ncolors )
bool imagewbmp( resource $image  [, string $filename  [, int $foreground ]])
bool imagewebp( resource $image , string $filename )
bool imagexbm( resource $image , string $filename  [, int $foreground ])
bool imap_append( resource $imap_stream , string $mailbox , string $message  [, string $options = NULL  [, string $internal_date = NULL ]])
bool imap_clearflag_full( resource $imap_stream , string $sequence , string $flag  [, int $options = 0 ])
bool imap_close( resource $imap_stream  [, int $flag = 0 ])
bool imap_delete( resource $imap_stream , int $msg_number  [, int $options = 0 ])
bool imap_deletemailbox( resource $imap_stream , string $mailbox )
bool imap_expunge( resource $imap_stream )
bool imap_gc( resource $imap_stream , int $caches )
bool imap_mail( string $to , string $subject , string $message  [, string $additional_headers = NULL  [, string $cc = NULL  [, string $bcc = NULL  [, string $rpath = NULL ]]]])
bool imap_mail_copy( resource $imap_stream , string $msglist , string $mailbox  [, int $options = 0 ])
bool imap_ping( resource $imap_stream )
bool imap_renamemailbox( resource $imap_stream , string $old_mbox , string $new_mbox )
bool imap_reopen( resource $imap_stream , string $mailbox  [, int $options = 0  [, int $n_retries = 0 ]])
bool imap_savebody( resource $imap_stream , mixed $file , int $msg_number  [, string $part_number = ""  [, int $options = 0 ]])
bool imap_set_quota( resource $imap_stream , string $quota_root , int $quota_limit )
bool imap_setacl( resource $imap_stream , string $mailbox , string $id , string $rights )
bool imap_setflag_full( resource $imap_stream , string $sequence , string $flag  [, int $options = NIL ])
bool imap_subscribe( resource $imap_stream , string $mailbox )
bool imap_undelete( resource $imap_stream , int $msg_number  [, int $flags = 0 ])
bool imap_unsubscribe( resource $imap_stream , string $mailbox )
bool import_request_variables( string $types  [, string $prefix ])
bool in_array( mixed $needle , array $haystack  [, bool $strict = FALSE ])
bool ingres_autocommit( resource $link )
bool ingres_autocommit_state( resource $link )
bool ingres_close( resource $link )
bool ingres_commit( resource $link )
bool ingres_execute( resource $result  [, array $params  [, string $types ]])
bool ingres_field_nullable( resource $result , int $index )
bool ingres_free_result( resource $result )
bool ingres_next_error([ resource $link ])
bool ingres_result_seek( resource $result , int $position )
bool ingres_rollback( resource $link )
bool inotify_rm_watch( resource $inotify_instance , int $watch_descriptor )
bool interface_exists( string $interface_name  [, bool $autoload = true ])
bool intl_is_failure( int $error_code )
bool is_a( object $object , string $class_name  [, bool $allow_string = FALSE ])
bool is_array ( mixed $var )
bool is_bool( mixed $var )
bool is_callable( mixed $var  [, bool $syntax_only = false  [, string &$callable_name ]])
bool is_dir( string $filename )
bool is_executable( string $filename )
bool is_finite ( float $val )
bool is_float ( mixed $var )
bool is_infinite ( float $val )
bool is_link( string $filename )
bool is_nan( float $val )
bool is_null( mixed $var )
bool is_numeric( mixed $var )
bool is_object ( mixed $var )
bool is_readable( string $filename )
bool is_resource( mixed $var )
bool is_scalar( mixed $var )
bool is_soap_fault( mixed $object )
bool is_string( mixed $var )
bool is_subclass_of( mixed $object , string $class_name  [, bool $allow_string = TRUE ])
bool is_tainted( string $string )
bool is_uploaded_file( string $filename )
bool is_writable( string $filename )
bool isset( mixed $var  [, mixed $... ])
bool jpeg2wbmp( string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )
bool kadm5_chpass_principal( resource $handle , string $principal , string $password )
bool kadm5_create_principal( resource $handle , string $principal  [, string $password  [, array $options ]])
bool kadm5_delete_principal( resource $handle , string $principal )
bool kadm5_destroy( resource $handle )
bool kadm5_flush( resource $handle )
bool kadm5_modify_principal( resource $handle , string $principal , array $options )
bool ksort( array &$array  [, int $sort_flags = SORT_REGULAR ])
bool lchgrp( string $filename , mixed $group )
bool lchown( string $filename , mixed $user )
bool ldap_control_paged_result_response( resource $link , resource $result  [, string &$cookie  [, int &$estimated ]])
bool ldap_delete( resource $link_identifier , string $dn )
bool ldap_free_result( resource $result_identifier )
bool ldap_get_option( resource $link_identifier , int $option , mixed &$retval )
bool ldap_mod_del( resource $link_identifier , string $dn , array $entry )
bool ldap_mod_replace( resource $link_identifier , string $dn , array $entry )
bool ldap_modify( resource $link_identifier , string $dn , array $entry )
bool ldap_modify_batch( resource $link_identifier , string $dn , array $entry )
bool ldap_parse_reference( resource $link , resource $entry , array &$referrals )
bool ldap_parse_result( resource $link , resource $result , int &$errcode  [, string &$matcheddn  [, string &$errmsg  [, array &$referrals ]]])
bool ldap_rename( resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn )
bool ldap_sasl_bind( resource $link  [, string $binddn = NULL  [, string $password = NULL  [, string $sasl_mech = NULL  [, string $sasl_realm = NULL  [, string $sasl_authc_id = NULL  [, string $sasl_authz_id = NULL  [, string $props = NULL ]]]]]]])
bool ldap_set_option( resource $link_identifier , int $option , mixed $newval )
bool ldap_set_rebind_proc( resource $link , callable $callback )
bool ldap_sort( resource $link , resource $result , string $sortfilter )
bool ldap_unbind( resource $link_identifier )
bool libxml_disable_entity_loader([ bool $disable = true ])
bool libxml_use_internal_errors([ bool $use_errors = false ])
bool m_deletetrans( resource $conn , int $identifier )
bool m_destroyconn( resource $conn )
bool m_maxconntimeout( resource $conn , int $secs )
bool m_verifyconnection( resource $conn , int $tf )
bool m_verifysslcert( resource $conn , int $tf )
bool mailparse_msg_free( resource $mimemail )
bool mailparse_msg_parse( resource $mimemail , string $data )
bool mailparse_stream_encode( resource $sourcefp , resource $destfp , string $encoding    )
bool maxdb_autocommit( resource $link , bool $mode )
bool maxdb_change_user( resource $link , string $user , string $password , string $database )
bool maxdb_close( resource $link )
bool maxdb_commit( resource $link )
bool maxdb_data_seek( resource $result , int $offset )
bool maxdb_disable_reads_from_master( resource $link )
bool maxdb_disable_rpl_parse( resource $link )
bool maxdb_dump_debug_info( resource $link )
bool maxdb_enable_reads_from_master( resource $link )
bool maxdb_enable_rpl_parse( resource $link )
bool maxdb_field_seek( resource $result , int $fieldnr )
bool maxdb_kill( resource $link , int $processid )
bool maxdb_master_query( resource $link , string $query )
bool maxdb_more_results( resource $link )
bool maxdb_multi_query( resource $link , string $query )
bool maxdb_next_result( resource $link )
bool maxdb_options( resource $link , int $option , mixed $value )
bool maxdb_ping( resource $link )
bool maxdb_real_connect( resource $link  [, string $hostname  [, string $username  [, string $passwd  [, string $dbname  [, int $port = 0  [, string $socket ]]]]]])
bool maxdb_real_query( resource $link , string $query )
bool maxdb_report( int $flags )
bool maxdb_rollback( resource $link )
bool maxdb_rpl_probe( resource $link )
bool maxdb_select_db( resource $link , string $dbname )
bool maxdb_send_query( resource $link , string $query )
bool maxdb_server_init([ array $server  [, array $groups ]])
bool maxdb_ssl_set( resource $link , string $key , string $cert , string $ca , string $capath , string $cipher )
bool maxdb_stmt_bind_param( resource $stmt , string $types , mixed &$var1  [, mixed &$... ])
bool maxdb_stmt_bind_result( resource $stmt , mixed &$var1  [, mixed &$... ])
bool maxdb_stmt_close( resource $stmt )
bool maxdb_stmt_close_long_data( resource $stmt , int $param_nr )
bool maxdb_stmt_data_seek( resource $statement , int $offset )
bool maxdb_stmt_execute( resource $stmt )
bool maxdb_stmt_fetch( resource $stmt )
bool maxdb_stmt_prepare( resource $stmt , string $query )
bool maxdb_stmt_reset( resource $stmt )
bool maxdb_stmt_send_long_data( resource $stmt , int $param_nr , string $data )
bool maxdb_stmt_store_result( resource $stmt )
bool maxdb_thread_safe( void )
bool mb_check_encoding([ string $var = NULL  [, string $encoding = mb_internal_encoding() ]])
bool mb_ereg_match( string $pattern , string $string  [, string $option = "msr" ])
bool mb_ereg_search_init( string $string  [, string $pattern  [, string $option = "msr" ]])
bool mb_ereg_search_setpos( int $position )
bool mb_send_mail( string $to , string $subject , string $message  [, string $additional_headers = NULL  [, string $additional_parameter = NULL ]])
bool mcrypt_enc_is_block_algorithm( resource $td )
bool mcrypt_enc_is_block_algorithm_mode( resource $td )
bool mcrypt_enc_is_block_mode( resource $td )
bool mcrypt_generic_deinit( resource $td )
bool mcrypt_generic_end( resource $td )
bool mcrypt_module_close( resource $td )
bool mcrypt_module_is_block_algorithm( string $algorithm  [, string $lib_dir ])
bool mcrypt_module_is_block_algorithm_mode( string $mode  [, string $lib_dir ])
bool mcrypt_module_is_block_mode( string $mode  [, string $lib_dir ])
bool mcrypt_module_self_test( string $algorithm  [, string $lib_dir ])
bool memcache_debug( bool $on_off )
bool method_exists( mixed $object , string $method_name )
bool mkdir( string $pathname  [, int $mode = 0777  [, bool $recursive = false  [, resource $context ]]])
bool move_uploaded_file( string $filename , string $destination )
bool msession_connect( string $host , string $port )
bool msession_create( string $session  [, string $classname  [, string $data ]])
bool msession_destroy( string $name )
bool msession_set( string $session , string $name , string $value )
bool msession_set_data( string $session , string $value )
bool msg_queue_exists( int $key )
bool msg_receive( resource $queue , int $desiredmsgtype , int &$msgtype , int $maxsize , mixed &$message  [, bool $unserialize = true  [, int $flags = 0  [, int &$errorcode ]]])
bool msg_remove_queue( resource $queue )
bool msg_send( resource $queue , int $msgtype , mixed $message  [, bool $serialize = true  [, bool $blocking = true  [, int &$errorcode ]]])
bool msg_set_queue( resource $queue , array $data )
bool msql_close([ resource $link_identifier ])
bool msql_create_db ( string $database_name  [, resource $link_identifier  ])
bool msql_data_seek( resource $result , int $row_number )
bool msql_drop_db( string $database_name  [, resource $link_identifier ])
bool msql_field_seek( resource $result , int $field_offset )
bool msql_free_result( resource $result )
bool msql_select_db( string $database_name  [, resource $link_identifier ])
bool mssql_bind( resource $stmt , string $param_name , mixed &$var , int $type  [, bool $is_output = false  [, bool $is_null = false  [, int $maxlen = -1 ]]])
bool mssql_close([ resource $link_identifier ])
bool mssql_data_seek( resource $result_identifier , int $row_number )
bool mssql_field_seek( resource $result , int $field_offset )
bool mssql_free_result( resource $result )
bool mssql_free_statement( resource $stmt )
bool mssql_next_result( resource $result_id )
bool mssql_select_db( string $database_name  [, resource $link_identifier ])
bool mysql_close([ resource $link_identifier = NULL ])
bool mysql_create_db( string $database_name  [, resource $link_identifier = NULL ])
bool mysql_drop_db( string $database_name  [, resource $link_identifier = NULL ])
bool mysql_field_seek( resource $result , int $field_offset )
bool mysql_free_result( resource $result )
bool mysql_ping([ resource $link_identifier = NULL ])
bool mysql_select_db( string $database_name  [, resource $link_identifier = NULL ])
bool mysqli::change_user( string $user , string $password , string $database )
bool mysqli::close( void )
bool mysqli::commit([ int $flags  [, string $name ]])
bool mysqli::debug( string $message )
bool mysqli::dump_debug_info( void )
bool mysqli::get_connection_stats( void )
bool mysqli::kill( int $processid )
bool mysqli::more_results( void )
bool mysqli::multi_query( string $query )
bool mysqli::next_result( void )
bool mysqli::options( int $option , mixed $value )
bool mysqli::ping( void )
bool mysqli::real_connect([ string $host  [, string $username  [, string $passwd  [, string $dbname  [, int $port  [, string $socket  [, int $flags ]]]]]]])
bool mysqli::real_query ( string $query )
bool mysqli::rollback([ int $flags  [, string $name ]])
bool mysqli::select_db( string $dbname )
bool mysqli::send_query( string $query )
bool mysqli::set_charset( string $charset )
bool mysqli::set_local_infile_handler( mysqli $link , callable $read_func )
bool mysqli::ssl_set( string $key , string $cert , string $ca , string $capath , string $cipher )
bool mysqli_disable_rpl_parse( mysqli $link )
bool mysqli_driver::embedded_server_start( bool $start , array $arguments , array $groups )
bool mysqli_enable_reads_from_master( mysqli $link )
bool mysqli_enable_rpl_parse( mysqli $link )
bool mysqli_master_query( mysqli $link , string $query )
bool mysqli_report( int $flags )
bool mysqli_result::data_seek( int $offset )
bool mysqli_result::field_seek( int $fieldnr )
bool mysqli_rpl_probe( mysqli $link )
bool mysqli_slave_query( mysqli $link , string $query )
bool mysqli_stmt::attr_set( int $attr , int $mode )
bool mysqli_stmt::bind_param( string $types , mixed &$var1  [, mixed &$... ])
bool mysqli_stmt::bind_result( mixed &$var1  [, mixed &$... ])
bool mysqli_stmt::close( void )
bool mysqli_stmt::execute( void )
bool mysqli_stmt::fetch( void )
bool mysqli_stmt::reset( void )
bool mysqli_stmt::send_long_data( int $param_nr , string $data )
bool mysqli_stmt::store_result( void )
bool mysqli_thread_safe( void )
bool mysqlnd_memcache_set( mixed $mysql_connection  [, Memcached $memcache_connection  [, string $pattern  [, callback $callback ]]])
bool mysqlnd_ms_match_wild( string $table_name , string $wildcard )
bool mysqlnd_ms_set_qos( mixed $connection , int $service_level  [, int $service_level_option  [, mixed $option_value ]])
bool mysqlnd_ms_set_user_pick_server( string $function )
bool mysqlnd_qc_clear_cache( void )
bool mysqlnd_qc_set_cache_condition( int $condition_type , mixed $condition , mixed $condition_option )
bool mysqlnd_qc_set_storage_handler( string $handler )
bool mysqlnd_qc_set_user_handlers( string $get_hash , string $find_query_in_cache , string $return_to_cache , string $add_query_to_cache_if_not_exists , string $query_is_select , string $update_query_run_time_stats , string $get_stats , string $clear_cache )
bool mysqlnd_uh_set_connection_proxy( MysqlndUhConnection &$connection_proxy  [, mysqli &$mysqli_connection ])
bool mysqlnd_uh_set_statement_proxy( MysqlndUhStatement &$statement_proxy )
bool natsort( array &$array )
bool ncurses_can_change_color( void )
bool ncurses_cbreak( void )
bool ncurses_clear( void )
bool ncurses_clrtobot( void )
bool ncurses_clrtoeol( void )
bool ncurses_def_prog_mode( void )
bool ncurses_def_shell_mode( void )
bool ncurses_del_panel( resource $panel )
bool ncurses_delch( void )
bool ncurses_deleteln( void )
bool ncurses_delwin( resource $window )
bool ncurses_doupdate( void )
bool ncurses_echo( void )
bool ncurses_erase( void )
bool ncurses_flash( void )
bool ncurses_flushinp( void )
bool ncurses_getmouse( array &$mevent )
bool ncurses_has_colors( void )
bool ncurses_has_ic( void )
bool ncurses_has_il( void )
bool ncurses_isendwin( void )
bool ncurses_mouse_trafo( int &$y , int &$x , bool $toscreen )
bool ncurses_nl( void )
bool ncurses_nocbreak( void )
bool ncurses_noecho( void )
bool ncurses_nonl( void )
bool ncurses_noraw( void )
bool ncurses_raw( void )
bool ncurses_resetty( void )
bool ncurses_savetty( void )
bool ncurses_slk_clear( void )
bool ncurses_slk_init( int $format )
bool ncurses_slk_noutrefresh( void )
bool ncurses_slk_set( int $labelnr , string $label , int $format )
bool ncurses_termattrs( void )
bool ncurses_ungetmouse( array $mevent )
bool ncurses_use_default_colors( void )
bool ncurses_wmouse_trafo( resource $window , int &$y , int &$x , bool $toscreen )
bool nsapi_virtual( string $uri )
bool ob_end_clean( void )
bool ob_end_flush( void )
bool oci_bind_array_by_name( resource $statement , string $name , array &$var_array , int $max_table_length  [, int $max_item_length = -1  [, int $type = SQLT_AFC ]])
bool oci_bind_by_name( resource $statement , string $bv_name , mixed &$variable  [, int $maxlength = -1  [, int $type = SQLT_CHR ]])
bool oci_cancel( resource $statement )
bool oci_close( resource $connection )
bool oci_commit( resource $connection )
bool oci_define_by_name( resource $statement , string $column_name , mixed &$variable  [, int $type = SQLT_CHR ])
bool oci_fetch( resource $statement )
bool oci_field_is_null( resource $statement , mixed $field )
bool oci_free_descriptor( resource $descriptor )
bool oci_free_statement( resource $statement )
bool oci_lob_copy( OCI-Lob $lob_to , OCI-Lob $lob_from  [, int $length = 0 ])
bool oci_lob_is_equal( OCI-Lob $lob1 , OCI-Lob $lob2 )
bool oci_password_change( resource $connection , string $username , string $old_password , string $new_password )
bool oci_rollback( resource $connection )
bool oci_set_action( resource $connection , string $action_name )
bool oci_set_client_identifier( resource $connection , string $client_identifier )
bool oci_set_client_info( resource $connection , string $client_info )
bool oci_set_edition( string $edition )
bool oci_set_module_name( resource $connection , string $module_name )
bool oci_set_prefetch( resource $statement , int $rows )
bool odbc_binmode( resource $result_id , int $mode )
bool odbc_commit( resource $connection_id )
bool odbc_execute( resource $result_id  [, array $parameters_array ])
bool odbc_fetch_row( resource $result_id  [, int $row_number ])
bool odbc_free_result( resource $result_id )
bool odbc_longreadlen( resource $result_id , int $length )
bool odbc_next_result( resource $result_id )
bool odbc_rollback( resource $connection_id )
bool openal_buffer_data( resource $buffer , int $format , string $data , int $freq )
bool openal_buffer_destroy( resource $buffer )
bool openal_buffer_loadwav( resource $buffer , string $wavfile )
bool openal_context_current( resource $context )
bool openal_context_destroy( resource $context )
bool openal_context_process( resource $context )
bool openal_context_suspend( resource $context )
bool openal_device_close( resource $device )
bool openal_listener_set( int $property , mixed $setting )
bool openal_source_destroy( resource $source )
bool openal_source_pause( resource $source )
bool openal_source_play( resource $source )
bool openal_source_rewind( resource $source )
bool openal_source_set( resource $source , int $property , mixed $setting )
bool openal_source_stop( resource $source )
bool openlog( string $ident , int $option , int $facility )
bool openssl_csr_export( resource $csr , string &$out  [, bool $notext = true ])
bool openssl_csr_export_to_file( resource $csr , string $outfilename  [, bool $notext = true ])
bool openssl_open( string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id  [, string $method ])
bool openssl_pkcs12_export( mixed $x509 , string &$out , mixed $priv_key , string $pass  [, array $args ])
bool openssl_pkcs12_export_to_file( mixed $x509 , string $filename , mixed $priv_key , string $pass  [, array $args ])
bool openssl_pkcs12_read( string $pkcs12 , array &$certs , string $pass )
bool openssl_pkcs7_decrypt( string $infilename , string $outfilename , mixed $recipcert  [, mixed $recipkey ])
bool openssl_pkcs7_encrypt( string $infile , string $outfile , mixed $recipcerts , array $headers  [, int $flags = 0  [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]])
bool openssl_pkey_export_to_file( mixed $key , string $outfilename  [, string $passphrase  [, array $configargs ]])
bool openssl_private_decrypt( string $data , string &$decrypted , mixed $key  [, int $padding = OPENSSL_PKCS1_PADDING ])
bool openssl_public_decrypt( string $data , string &$decrypted , mixed $key  [, int $padding = OPENSSL_PKCS1_PADDING ])
bool openssl_public_encrypt( string $data , string &$crypted , mixed $key  [, int $padding = OPENSSL_PKCS1_PADDING ])
bool openssl_sign( string $data , string &$signature , mixed $priv_key_id  [, mixed $signature_alg = OPENSSL_ALGO_SHA1 ])
bool openssl_x509_check_private_key( mixed $cert , mixed $key )
bool openssl_x509_export( mixed $x509 , string &$output  [, bool $notext = TRUE ])
bool openssl_x509_export_to_file( mixed $x509 , string $outfilename  [, bool $notext = TRUE ])
bool output_add_rewrite_var( string $name , string $value )
bool output_reset_rewrite_vars( void )
bool pcntl_exec( string $path  [, array $args  [, array $envs ]])
bool pcntl_setpriority( int $priority  [, int $pid = getmypid()  [, int $process_identifier = PRIO_PROCESS ]])
bool pcntl_signal( int $signo , callable|int $handler  [, bool $restart_syscalls = true ])
bool pcntl_signal_dispatch( void )
bool pcntl_sigprocmask( int $how , array $set  [, array &$oldset ])
bool pcntl_wifexited( int $status )
bool pcntl_wifsignaled( int $status )
bool pcntl_wifstopped( int $status )
bool pg_cancel_query( resource $connection )
bool pg_close([ resource $connection ])
bool pg_connection_busy( resource $connection )
bool pg_connection_reset( resource $connection )
bool pg_consume_input( resource $connection )
bool pg_end_copy([ resource $connection ])
bool pg_free_result( resource $result )
bool pg_lo_close( resource $large_object )
bool pg_lo_export([ resource $connection  ], int $oid , string $pathname )
bool pg_lo_seek( resource $large_object , int $offset  [, int $whence = PGSQL_SEEK_CUR ])
bool pg_lo_truncate( resource $large_object , int $size )
bool pg_lo_unlink( resource $connection , int $oid )
bool pg_ping([ resource $connection ])
bool pg_put_line([ resource $connection  ], string $data )
bool pg_result_seek( resource $result , int $offset )
bool pg_send_execute( resource $connection , string $stmtname , array $params )
bool pg_send_prepare( resource $connection , string $stmtname , string $query )
bool pg_send_query( resource $connection , string $query )
bool pg_send_query_params( resource $connection , string $query , array $params )
bool pg_trace( string $pathname  [, string $mode = "w"  [, resource $connection ]])
bool pg_untrace([ resource $connection ])
bool php_check_syntax( string $filename  [, string &$error_message ])
bool phpcredits([ int $flag = CREDITS_ALL ])
bool png2wbmp( string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )
bool posix_initgroups( string $name , int $base_group_id )
bool posix_isatty( mixed $fd )
bool posix_kill( int $pid , int $sig )
bool posix_mkfifo( string $pathname , int $mode )
bool posix_mknod( string $pathname , int $mode  [, int $major = 0  [, int $minor = 0 ]])
bool posix_setegid( int $gid )
bool posix_seteuid( int $uid )
bool posix_setgid( int $gid )
bool posix_setpgid( int $pid , int $pgid )
bool posix_setrlimit( int $resource , int $softlimit , int $hardlimit )
bool proc_nice( int $increment )
bool proc_terminate( resource $process  [, int $signal = 15 ])
bool property_exists( mixed $class , string $property )
bool ps_arc( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )
bool ps_arcn( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )
bool ps_begin_page( resource $psdoc , float $width , float $height )
bool ps_circle( resource $psdoc , float $x , float $y , float $radius )
bool ps_clip( resource $psdoc )
bool ps_close( resource $psdoc )
bool ps_closepath( resource $psdoc )
bool ps_closepath_stroke( resource $psdoc )
bool ps_continue_text( resource $psdoc , string $text )
bool ps_delete( resource $psdoc )
bool ps_end_page( resource $psdoc )
bool ps_end_pattern( resource $psdoc )
bool ps_end_template( resource $psdoc )
bool ps_fill( resource $psdoc )
bool ps_fill_stroke( resource $psdoc  )
bool ps_include_file( resource $psdoc , string $file )
bool ps_lineto( resource $psdoc , float $x , float $y )
bool ps_moveto( resource $psdoc , float $x , float $y )
bool ps_open_file( resource $psdoc  [, string $filename ])
bool ps_place_image( resource $psdoc , int $imageid , float $x , float $y , float $scale )
bool ps_rect( resource $psdoc , float $x , float $y , float $width , float $height )
bool ps_restore( resource $psdoc )
bool ps_rotate( resource $psdoc , float $rot )
bool ps_save( resource $psdoc )
bool ps_scale( resource $psdoc , float $x , float $y )
bool ps_set_border_color( resource $psdoc , float $red , float $green , float $blue )
bool ps_set_border_dash( resource $psdoc , float $black , float $white )
bool ps_set_border_style( resource $psdoc , string $style , float $width )
bool ps_set_info( resource $p , string $key , string $val )
bool ps_set_parameter( resource $psdoc , string $name , string $value )
bool ps_set_text_pos( resource $psdoc , float $x , float $y )
bool ps_set_value( resource $psdoc , string $name , float $value )
bool ps_setcolor( resource $psdoc , string $type , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 )
bool ps_setdash( resource $psdoc , float $on , float $off )
bool ps_setflat( resource $psdoc , float $value )
bool ps_setfont( resource $psdoc , int $fontid , float $size )
bool ps_setgray( resource $psdoc , float $gray )
bool ps_setlinecap( resource $psdoc , int $type )
bool ps_setlinejoin( resource $psdoc , int $type )
bool ps_setlinewidth( resource $psdoc , float $width )
bool ps_setmiterlimit( resource $psdoc , float $value )
bool ps_setoverprintmode( resource $psdoc , int $mode )
bool ps_setpolydash( resource $psdoc , float $arr )
bool ps_shfill( resource $psdoc , int $shadingid )
bool ps_show( resource $psdoc , string $text )
bool ps_show2( resource $psdoc , string $text , int $len )
bool ps_show_xy( resource $psdoc , string $text , float $x , float $y )
bool ps_show_xy2( resource $psdoc , string $text , int $len , float $xcoor , float $ycoor )
bool ps_stroke( resource $psdoc )
bool ps_symbol( resource $psdoc , int $ord )
bool ps_translate( resource $psdoc , float $x , float $y )
bool pspell_add_to_personal( int $dictionary_link , string $word )
bool pspell_add_to_session( int $dictionary_link , string $word )
bool pspell_check( int $dictionary_link , string $word )
bool pspell_clear_session( int $dictionary_link )
bool pspell_config_data_dir( int $conf , string $directory )
bool pspell_config_dict_dir( int $conf , string $directory )
bool pspell_config_ignore( int $dictionary_link , int $n )
bool pspell_config_mode( int $dictionary_link , int $mode )
bool pspell_config_personal( int $dictionary_link , string $file )
bool pspell_config_repl( int $dictionary_link , string $file )
bool pspell_config_runtogether( int $dictionary_link , bool $flag )
bool pspell_config_save_repl( int $dictionary_link , bool $flag )
bool pspell_save_wordlist( int $dictionary_link )
bool pspell_store_replacement( int $dictionary_link , string $misspelled , string $correct )
bool putenv( string $setting )
bool px_close( resource $pxdoc )
bool px_create_fp( resource $pxdoc , resource $file , array $fielddesc )
bool px_delete( resource $pxdoc )
bool px_delete_record( resource $pxdoc , int $num )
bool px_open_fp( resource $pxdoc , resource $file )
bool px_put_record( resource $pxdoc , array $record  [, int $recpos = -1 ])
bool px_set_blob_file( resource $pxdoc , string $filename )
bool px_set_parameter( resource $pxdoc , string $name , string $value )
bool px_set_targetencoding( resource $pxdoc , string $encoding )
bool px_set_value( resource $pxdoc , string $name , float $value )
bool px_update_record( resource $pxdoc , array $data , int $num )
bool radius_add_server( resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries )
bool radius_close( resource $radius_handle )
bool radius_config( resource $radius_handle , string $file )
bool radius_create_request( resource $radius_handle, int $type   )
bool radius_put_addr( resource $radius_handle , int $type    , string $addr        [, int $options = 0  [, int $tag ]])
bool radius_put_attr( resource $radius_handle , int $type    , string $value        [, int $options = 0  [, int $tag ]])
bool radius_put_int( resource $radius_handle , int $type    , int $value        [, int $options = 0  [, int $tag ]])
bool radius_put_string( resource $radius_handle , int $type    , string $value        [, int $options = 0  [, int $tag ]])
bool radius_put_vendor_addr( resource $radius_handle , int $vendor       , int $type    , string $addr       )
bool radius_put_vendor_attr( resource $radius_handle , int $vendor , int $type , string $value  [, int $options = 0  [, int $tag ]])
bool radius_put_vendor_int( resource $radius_handle , int $vendor       , int $type    , int $value        [, int $options = 0  [, int $tag ]])
bool radius_put_vendor_string( resource $radius_handle , int $vendor       , int $type    , string $value        [, int $options = 0  [, int $tag ]])
bool readline_add_history( string $line )
bool readline_callback_handler_install( string $prompt , callable $callback )
bool readline_callback_handler_remove( void )
bool readline_clear_history( void )
bool readline_completion_function( callable $function )
bool readline_read_history([ string $filename ])
bool readline_write_history([ string $filename ])
bool recode_file( string $request , resource $input , resource $output )
bool register_tick_function( callable $function  [, mixed $arg  [, mixed $... ]])
bool rename_function( string $original_name , string $new_name )
bool restore_error_handler( void )
bool restore_exception_handler( void )
bool rewind( resource $handle )
bool rmdir( string $dirname  [, resource $context ])
bool rpm_close( resource $rpmr )
bool rpm_is_valid( string $filename )
bool rrd_create( string $filename , array $options )
bool rrd_restore( string $xml_file , string $rrd_file  [, array $options ])
bool rrd_tune( string $filename , array $options )
bool rrd_update( string $filename , array $options )
bool rsort( array &$array  [, int $sort_flags = SORT_REGULAR ])
bool runkit_class_adopt( string $classname , string $parentname )
bool runkit_class_emancipate( string $classname )
bool runkit_constant_add( string $constname , mixed $value )
bool runkit_constant_redefine( string $constname , mixed $newvalue )
bool runkit_constant_remove( string $constname )
bool runkit_function_add( string $funcname , string $arglist , string $code )
bool runkit_function_redefine( string $funcname , string $arglist , string $code )
bool runkit_function_remove( string $funcname )
bool runkit_function_rename( string $funcname , string $newname )
bool runkit_import( string $filename  [, int $flags = RUNKIT_IMPORT_CLASS_METHODS ])
bool runkit_lint( string $code )
bool runkit_lint_file( string $filename )
bool runkit_method_add( string $classname , string $methodname , string $args , string $code  [, int $flags = RUNKIT_ACC_PUBLIC ])
bool runkit_method_copy( string $dClass , string $dMethod , string $sClass  [, string $sMethod ])
bool runkit_method_redefine( string $classname , string $methodname , string $args , string $code  [, int $flags = RUNKIT_ACC_PUBLIC ])
bool runkit_method_remove( string $classname , string $methodname )
bool runkit_method_rename( string $classname , string $methodname , string $newname )
bool runkit_return_value_used( void )
bool sem_acquire( resource $sem_identifier  [, bool $nowait = false ])
bool sem_release( resource $sem_identifier )
bool sem_remove( resource $sem_identifier )
bool session_destroy( void )
bool session_is_registered( string $name )
bool session_pgsql_add_error( int $error_level  [, string $error_message ])
bool session_pgsql_reset( void )
bool session_pgsql_set_field( string $value )
bool session_register( mixed $name  [, mixed $... ])
bool session_unregister( string $name )
bool set_magic_quotes_runtime( bool $new_setting )
bool set_time_limit( int $seconds )
bool setcookie( string $name  [, string $value = ""  [, int $expire = 0  [, string $path = ""  [, string $domain = ""  [, bool $secure = false  [, bool $httponly = false ]]]]]])
bool setrawcookie( string $name  [, string $value  [, int $expire = 0  [, string $path  [, string $domain  [, bool $secure = false  [, bool $httponly = false ]]]]]])
bool setthreadtitle( string $title )
bool settype( mixed &$var , string $type )
bool shm_detach( resource $shm_identifier )
bool shm_has_var( resource $shm_identifier , int $variable_key )
bool shm_put_var( resource $shm_identifier , int $variable_key , mixed $variable )
bool shm_remove( resource $shm_identifier )
bool shm_remove_var( resource $shm_identifier , int $variable_key )
bool shmop_delete( int $shmid )
bool shuffle( array &$array )
bool snmp2_set( string $host , string $community , string $object_id , string $type , string $value  [, string $timeout = 1000000  [, string $retries = 5 ]])
bool snmp3_set( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id , string $type , string $value  [, int $timeout = 1000000  [, int $retries = 5 ]])
bool snmp_get_quick_print( void )
bool snmp_read_mib( string $filename )
bool snmp_set_enum_print( int $enum_print )
bool snmp_set_oid_output_format( int $oid_format = SNMP_OID_OUTPUT_MODULE )
bool snmp_set_quick_print( bool $quick_print )
bool snmp_set_valueretrieval( int $method = SNMP_VALUE_LIBRARY )
bool snmpset( string $host , string $community , string $object_id , string $type , mixed $value  [, int $timeout = 1000000  [, int $retries = 5 ]])
bool socket_bind( resource $socket , string $address  [, int $port = 0 ])
bool socket_connect( resource $socket , string $address  [, int $port = 0 ])
bool socket_create_pair( int $domain , int $type , int $protocol , array &$fd )
bool socket_getpeername( resource $socket , string &$address  [, int &$port ])
bool socket_getsockname( resource $socket , string &$addr  [, int &$port ])
bool socket_listen( resource $socket  [, int $backlog = 0 ])
bool socket_set_block( resource $socket )
bool socket_set_nonblock( resource $socket )
bool socket_set_option( resource $socket , int $level , int $optname , mixed $optval )
bool socket_shutdown( resource $socket  [, int $how = 2 ])
bool spl_autoload_register([ callable $autoload_function  [, bool $throw = true  [, bool $prepend = false ]]])
bool spl_autoload_unregister( mixed $autoload_function )
bool sqlite_exec( resource $dbhandle , string $query  [, string &$error_msg ])
bool sqlite_has_more( resource $result )
bool sqlite_has_prev( resource $result )
bool sqlite_next( resource $result )
bool sqlite_prev( resource $result )
bool sqlite_rewind( resource $result )
bool sqlite_seek( resource $result , int $rownum )
bool sqlite_valid( resource $result )
bool sqlsrv_begin_transaction( resource $conn )
bool sqlsrv_cancel( resource $stmt )
bool sqlsrv_close( resource $conn )
bool sqlsrv_commit( resource $conn )
bool sqlsrv_configure( string $setting , mixed $value )
bool sqlsrv_execute( resource $stmt )
bool sqlsrv_free_stmt( resource $stmt )
bool sqlsrv_has_rows( resource $stmt )
bool sqlsrv_rollback( resource $conn )
bool sqlsrv_send_stream_data( resource $stmt )
bool ssh2_auth_agent( resource $session , string $username )
bool ssh2_auth_hostbased_file( resource $session , string $username , string $hostname , string $pubkeyfile , string $privkeyfile  [, string $passphrase  [, string $local_username ]])
bool ssh2_auth_password( resource $session , string $username , string $password )
bool ssh2_auth_pubkey_file( resource $session , string $username , string $pubkeyfile , string $privkeyfile  [, string $passphrase ])
bool ssh2_publickey_add( resource $pkey , string $algoname , string $blob  [, bool $overwrite = false  [, array $attributes ]])
bool ssh2_publickey_remove( resource $pkey , string $algoname , string $blob )
bool ssh2_scp_recv( resource $session , string $remote_file , string $local_file )
bool ssh2_scp_send( resource $session , string $local_file , string $remote_file  [, int $create_mode = 0644 ])
bool ssh2_sftp_chmod( resource $sftp , string $filename , int $mode )
bool ssh2_sftp_mkdir( resource $sftp , string $dirname  [, int $mode = 0777  [, bool $recursive = false ]])
bool ssh2_sftp_rename( resource $sftp , string $from , string $to )
bool ssh2_sftp_rmdir( resource $sftp , string $dirname )
bool ssh2_sftp_symlink( resource $sftp , string $target , string $link )
bool ssh2_sftp_unlink( resource $sftp , string $filename )
bool stream_context_set_option( resource $stream_or_context , string $wrapper , string $option , mixed $value )
bool stream_context_set_params( resource $stream_or_context , array $params )
bool stream_encoding( resource $stream  [, string $encoding ])
bool stream_filter_register( string $filtername , string $classname )
bool stream_filter_remove( resource $stream_filter )
bool stream_is_local( mixed $stream_or_url )
bool stream_set_blocking( resource $stream , bool $mode )
bool stream_set_timeout( resource $stream , int $seconds  [, int $microseconds = 0 ])
bool stream_socket_shutdown( resource $stream , int $how )
bool stream_supports_lock( resource $stream )
bool stream_wrapper_register( string $protocol , string $classname  [, int $flags = 0 ])
bool stream_wrapper_restore( string $protocol )
bool stream_wrapper_unregister( string $protocol )
bool svn_add( string $path  [, bool $recursive = true  [, bool $force = false ]])
bool svn_checkout( string $repos , string $targetpath  [, int $revision  [, int $flags = 0 ]])
bool svn_cleanup( string $workingdir )
bool svn_delete( string $path  [, bool $force = false ])
bool svn_export( string $frompath , string $topath  [, bool $working_copy = true  [, int $revision_no = -1 ]])
bool svn_fs_abort_txn( resource $txn )
bool svn_fs_change_node_prop( resource $root , string $path , string $name , string $value )
bool svn_fs_contents_changed( resource $root1 , string $path1 , resource $root2 , string $path2 )
bool svn_fs_copy( resource $from_root , string $from_path , resource $to_root , string $to_path )
bool svn_fs_delete( resource $root , string $path )
bool svn_fs_is_dir( resource $root , string $path )
bool svn_fs_is_file( resource $root , string $path )
bool svn_fs_make_dir( resource $root , string $path )
bool svn_fs_make_file( resource $root , string $path )
bool svn_fs_props_changed( resource $root1 , string $path1 , resource $root2 , string $path2 )
bool svn_import( string $path , string $url , bool $nonrecursive )
bool svn_mkdir( string $path  [, string $log_message ])
bool svn_repos_hotcopy( string $repospath , string $destpath , bool $cleanlogs )
bool svn_repos_recover( string $path )
bool svn_revert( string $path  [, bool $recursive = false ])
bool sybase_close([ resource $link_identifier ])
bool sybase_data_seek( resource $result_identifier , int $row_number )
bool sybase_field_seek( resource $result , int $field_offset )
bool sybase_free_result( resource $result )
bool sybase_select_db( string $database_name  [, resource $link_identifier ])
bool sybase_set_message_handler( callable $handler  [, resource $link_identifier ])
bool syslog( int $priority , string $message )
bool taint( string &$string  [, string $... ])
bool tcpwrap_check( string $daemon , string $address  [, string $user  [, bool $nodns = false ]])
bool tidy::cleanRepair( void )
bool tidy::diagnose( void )
bool tidy::isXhtml( void )
bool tidy::isXml( void )
bool tidy::parseFile( string $filename  [, mixed $config  [, string $encoding  [, bool $use_include_path = false ]]])
bool tidy::parseString( string $input  [, mixed $config  [, string $encoding ]])
bool tidyNode::hasChildren( void )
bool tidyNode::hasSiblings( void )
bool tidyNode::isAsp( void )
bool tidyNode::isComment( void )
bool tidyNode::isHtml( void )
bool tidyNode::isJste( void )
bool tidyNode::isPhp( void )
bool tidyNode::isText( void )
bool tidy_reset_config( void )
bool tidy_save_config( string $filename )
bool tidy_set_encoding( string $encoding )
bool tidy_setopt( string $option , mixed $value )
bool time_sleep_until( float $timestamp )
bool touch( string $filename  [, int $time = time()  [, int $atime ]])
bool trait_exists( string $traitname  [, bool $autoload ])
bool trigger_error( string $error_msg  [, int $error_type = E_USER_NOTICE ])
bool udm_add_search_limit( resource $agent , int $var , string $val )
bool udm_check_charset( resource $agent , string $charset )
bool udm_clear_search_limits( resource $agent )
bool udm_free_ispell_data( int $agent )
bool udm_free_res( resource $res )
bool udm_load_ispell_data( resource $agent , int $var , string $val1 , string $val2 , int $flag )
bool udm_set_agent_param( resource $agent , int $var , string $val )
bool unlink( string $filename  [, resource $context ])
bool untaint( string &$string  [, string $... ])
bool use_soap_error_handler([ bool $handler = true ])
bool virtual( string $filename )
bool vpopmail_add_alias_domain( string $domain , string $aliasdomain )
bool vpopmail_add_alias_domain_ex( string $olddomain , string $newdomain )
bool vpopmail_add_domain( string $domain , string $dir , int $uid , int $gid )
bool vpopmail_add_domain_ex( string $domain , string $passwd  [, string $quota  [, string $bounce  [, bool $apop ]]])
bool vpopmail_add_user( string $user , string $domain , string $password  [, string $gecos  [, bool $apop ]])
bool vpopmail_alias_add( string $user , string $domain , string $alias )
bool vpopmail_alias_del( string $user , string $domain )
bool vpopmail_alias_del_domain( string $domain )
bool vpopmail_auth_user( string $user , string $domain , string $password  [, string $apop ])
bool vpopmail_del_domain( string $domain )
bool vpopmail_del_domain_ex( string $domain )
bool vpopmail_del_user( string $user , string $domain )
bool vpopmail_passwd( string $user , string $domain , string $password  [, bool $apop ])
bool vpopmail_set_user_quota( string $user , string $domain , string $quota )
bool wddx_add_vars( resource $packet_id , mixed $var_name  [, mixed $... ])
bool win32_set_service_status( int $status  [, int $checkpoint = 0 ])
bool wincache_refresh_if_changed([ array $files = NULL ])
bool wincache_ucache_add( string $key , mixed $value  [, int $ttl = 0 ])
bool wincache_ucache_cas( string $key , int $old_value , int $new_value )
bool wincache_ucache_clear( void )
bool wincache_ucache_delete( mixed $key )
bool wincache_ucache_exists( string $key )
bool wincache_ucache_set( mixed $key , mixed $value  [, int $ttl = 0 ])
bool xattr_remove( string $filename , string $name  [, int $flags = 0 ])
bool xattr_set( string $filename , string $name , string $value  [, int $flags = 0 ])
bool xattr_supported( string $filename  [, int $flags = 0 ])
bool xdiff_file_bdiff( string $old_file , string $new_file , string $dest )
bool xdiff_file_bpatch( string $file , string $patch , string $dest )
bool xdiff_file_diff( string $old_file , string $new_file , string $dest  [, int $context = 3  [, bool $minimal = false ]])
bool xdiff_file_diff_binary( string $old_file , string $new_file , string $dest )
bool xdiff_file_patch_binary( string $file , string $patch , string $dest )
bool xdiff_file_rabdiff( string $old_file , string $new_file , string $dest )
bool xml_parser_free( resource $parser )
bool xml_parser_set_option( resource $parser , int $option , mixed $value )
bool xml_set_default_handler( resource $parser , callable $handler )
bool xml_set_end_namespace_decl_handler( resource $parser , callable $handler )
bool xml_set_external_entity_ref_handler( resource $parser , callable $handler )
bool xml_set_notation_decl_handler( resource $parser , callable $handler )
bool xml_set_object( resource $parser , object &$object )
bool xml_set_processing_instruction_handler( resource $parser , callable $handler )
bool xml_set_start_namespace_decl_handler( resource $parser , callable $handler )
bool xml_set_unparsed_entity_decl_handler( resource $parser , callable $handler )
bool xmlrpc_is_fault( array $arg )
bool xmlrpc_server_register_introspection_callback( resource $server , string $function )
bool xmlrpc_server_register_method( resource $server , string $method_name , string $function )
bool xmlrpc_set_type( string &$value , string $type )
bool yaml_emit_file( string $filename , mixed $data  [, int $encoding = YAML_ANY_ENCODING  [, int $linebreak = YAML_ANY_BREAK  [, array $callbacks ]]])
bool yaz_ccl_parse( resource $id , string $query , array &$result )
bool yaz_close( resource $id )
bool yaz_database( resource $id , string $databases )
bool yaz_element( resource $id , string $elementset )
bool yaz_present( resource $id )
bool yaz_search( resource $id , string $type , string $query )
bool zip_entry_close( resource $zip_entry )
bool zip_entry_open   ( resource $zip , resource $zip_entry  [, string $mode ])
boolean boolval( mixed $var )
boolean fastcgi_finish_request( void )
boolean opcache_compile_file( string $file )
boolean opcache_invalidate( string $script  [, boolean $force = FALSE ])
boolean opcache_is_script_cached( string $file )
boolean opcache_reset( void )
boolean password_needs_rehash( string $hash , integer $algo  [, array $options ])
boolean password_verify( string $password , string $hash )
callable set_exception_handler( callable $exception_handler )
final private MongoDB\Driver\Cursor::__construct( void )
final private MongoDB\Driver\CursorId::__construct( void )
final private MongoDB\Driver\Server::__construct( void )
final private Yaf_Controller_Abstract::__construct( void )
final private void Error::__clone( void )
final private void Exception::__clone( void )
final private void ReflectionExtension::__clone( void )
final private void ReflectionFunctionAbstract::__clone( void )
final private void ReflectionParameter::__clone( void )
final private void ReflectionProperty::__clone( void )
final private void ReflectionZendExtension::__clone( void )
final private void Yaf_Controller_Abstract::__clone( void )
final public DateTime MongoDB\BSON\UTCDateTime::toDateTime( void )
final public EvCheck EvLoop::check( string $callback  [, string $data  [, string $priority  ]])
final public EvChild EvLoop::child( string $pid , string $trace , string $callback  [, string $data  [, string $priority  ]])
final public EvEmbed EvLoop::embed( string $other  [, string $callback  [, string $data  [, string $priority  ]]])
final public EvFork EvLoop::fork( callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public EvIdle EvLoop::idle( callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public EvIo EvLoop::io( mixed $fd , int $events , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public EvPeriodic EvLoop::periodic( double $offset , double $interval , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public EvPrepare EvLoop::prepare( callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public EvSignal EvLoop::signal( int $signum , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public EvStat EvLoop::stat( string $path , double $interval , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public EvTimer EvLoop::timer( double $after , double $repeat , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public Exception Exception::getPrevious( void )
final public MongoDB\BSON\Binary::__construct( string $data , integer $type )
final public MongoDB\BSON\Javascript::__construct( string $code  [, array|object $scope ])
final public MongoDB\BSON\MaxKey::__construct( void )
final public MongoDB\BSON\MinKey::__construct( void )
final public MongoDB\BSON\ObjectID::__construct([ string $id ])
final public MongoDB\BSON\Regex::__construct( string $pattern , string $flags )
final public MongoDB\BSON\Timestamp::__construct( integer $increment , integer $timestamp )
final public MongoDB\BSON\UTCDateTime::__construct( integer $milliseconds )
final public MongoDB\Driver\Command::__construct( array|object $document )
final public MongoDB\Driver\Cursor MongoDB\Driver\Manager::executeCommand( string $db , MongoDB\Driver\Command $command  [, MongoDB\Driver\ReadPreference $readPreference ])
final public MongoDB\Driver\Cursor MongoDB\Driver\Manager::executeQuery( string $namespace , MongoDB\Driver\Query $query  [, MongoDB\Driver\ReadPreference $readPreference ])
final public MongoDB\Driver\Cursor MongoDB\Driver\Server::executeCommand( string $db , MongoDB\Driver\Command $command  [, MongoDB\Driver\ReadPreference $readPreference ])
final public MongoDB\Driver\CursorId MongoDB\Driver\Cursor::getId( void )
final public MongoDB\Driver\Manager::__construct( string $uri  [, array $options  [, array $driverOptions ]])
final public MongoDB\Driver\Query::__construct( array|object $filter  [, array $queryOptions ])
final public MongoDB\Driver\ReadConcern::__construct([ string $level ])
final public MongoDB\Driver\ReadPreference::__construct( string $mode  [, array $tagSets ])
final public MongoDB\Driver\Server MongoDB\Driver\Cursor::getServer( void )
final public MongoDB\Driver\Server MongoDB\Driver\Manager::selectServer( MongoDB\Driver\ReadPreference $readPreference )
final public MongoDB\Driver\WriteConcern::__construct( string $w  [, integer $wtimeout  [, boolean $journal ]])
final public MongoDB\Driver\WriteResult MongoDB\Driver\Exception\WriteException::getWriteResult( void )
final public MongoDB\Driver\WriteResult MongoDB\Driver\Manager::executeBulkWrite( string $namespace , MongoDB\Driver\BulkWrite $bulk  [, MongoDB\Driver\WriteConcern $writeConcern ])
final public MongoDB\Driver\WriteResult MongoDB\Driver\Server::executeBulkWrite( string $namespace , MongoDB\Driver\BulkWrite $bulk  [, MongoDB\Driver\WriteConcern $writeConcern ])
final public ReturnType MongoDB\BSON\Regex::getFlags( void )
final public ReturnType MongoDB\Driver\WriteConcernError::getCode( void )
final public ReturnType MongoDB\Driver\WriteConcernError::getInfo( void )
final public ReturnType MongoDB\Driver\WriteConcernError::getMessage( void )
final public ReturnType MongoDB\Driver\WriteError::getCode( void )
final public ReturnType MongoDB\Driver\WriteError::getIndex( void )
final public ReturnType MongoDB\Driver\WriteError::getMessage( void )
final public ReturnType MongoDB\Driver\WriteResult::getDeletedCount( void )
final public ReturnType MongoDB\Driver\WriteResult::getInfo( void )
final public ReturnType MongoDB\Driver\WriteResult::getInsertedCount( void )
final public ReturnType MongoDB\Driver\WriteResult::getMatchedCount( void )
final public ReturnType MongoDB\Driver\WriteResult::getModifiedCount( void )
final public ReturnType MongoDB\Driver\WriteResult::getServer( void )
final public ReturnType MongoDB\Driver\WriteResult::getUpsertedCount( void )
final public ReturnType MongoDB\Driver\WriteResult::getUpsertedIds( void )
final public ReturnType MongoDB\Driver\WriteResult::getWriteConcernError( void )
final public ReturnType MongoDB\Driver\WriteResult::getWriteErrors( void )
final public SolrParams SolrParams::add( string $name , string $value )
final public Throwable Error::getPrevious( void )
final public Yaf_View_Simple::__construct( string $template_dir  [, array $options ])
final public Yar_Client::__construct( string $url )
final public Yar_Server::__construct( Object $obj )
final public array Error::getTrace( void )
final public array Exception::getTrace( void )
final public array MongoDB\Driver\Cursor::toArray( void )
final public array MongoDB\Driver\Manager::getServers( void )
final public array MongoDB\Driver\ReadPreference::getTagSets( void )
final public array MongoDB\Driver\Server::getInfo( void )
final public array MongoDB\Driver\Server::getTags( void )
final public array MongoWriteBatch::execute( array $write_options )
final public array SolrParams::getParams( void )
final public array SolrParams::getPreparedParams( void )
final public bool MongoDB\Driver\Cursor::isDead( void )
final public bool MongoDB\Driver\Server::isArbiter( void )
final public bool MongoDB\Driver\Server::isHidden( void )
final public bool MongoDB\Driver\Server::isPassive( void )
final public bool MongoDB\Driver\Server::isPrimary( void )
final public bool MongoDB\Driver\Server::isSecondary( void )
final public bool OAuthProvider::addRequiredParameter( string $req_params )
final public bool OAuthProvider::removeRequiredParameter( string $req_params )
final public bool OAuthProvider::setParam( string $param_key  [, mixed $param_val ])
final public bool OAuthProvider::setRequestTokenPath( string $path )
final public bool|null MongoDB\Driver\WriteConcern::getJournal( void )
final public int Error::getLine( void )
final public int ErrorException::getSeverity( void )
final public int Exception::getLine( void )
final public int MongoDB\Driver\Server::getPort( void )
final public int MongoDB\Driver\Server::getType( void )
final public int MongoDB\Driver\WriteConcern::getWtimeout( void )
final public int V8JsException::getJsLineNumber( void )
final public integer MongoDB\BSON\Binary::getType( void )
final public integer MongoDB\Driver\ReadPreference::getMode( void )
final public mixed Error::getCode( void )
final public mixed Exception::getCode( void )
final public mixed SolrParams::get( string $param_name )
final public mixed SolrParams::getParam([ string $param_name ])
final public static EvIo EvIo::createStopped( mixed $fd , int $events , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public static EvPeriodic EvPeriodic::createStopped( double $offset , double $interval , callable $reschedule_cb , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public static EvPrepare EvPrepare::createStopped( callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public static EvSignal EvSignal::createStopped( int $signum , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public static EvTimer EvTimer::createStopped( double $after , double $repeat , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public static array Phar::getSupportedCompression( void )
final public static array Phar::getSupportedSignatures( void )
final public static bool Phar::canCompress([ int $type = 0 ])
final public static bool Phar::canWrite( void )
final public static bool Phar::isValidPharFilename( string $filename  [, bool $executable = true ])
final public static bool Phar::loadPhar( string $filename  [, string $alias ])
final public static bool Phar::mapPhar([ string $alias  [, int $dataoffset = 0 ]])
final public static bool Phar::unlinkArchive( string $archive )
final public static boolean Cond::broadcast( long $condition )
final public static boolean Cond::destroy( long $condition )
final public static boolean Cond::signal( long $condition )
final public static boolean Cond::wait( long $condition , long $mutex  [, long $timeout  ])
final public static boolean Mutex::destroy ( long $mutex )
final public static boolean Mutex::lock( long $mutex )
final public static boolean Mutex::trylock( long $mutex )
final public static boolean Mutex::unlock( long $mutex  [, boolean $destroy  ])
final public static double Ev::now( void )
final public static double Ev::time( void )
final public static int Ev::backend( void )
final public static int Ev::depth( void )
final public static int Ev::iteration( void )
final public static long Cond::create( void )
final public static long Mutex::create([ boolean $lock  ])
final public static object EvCheck::createStopped( string $callback  [, string $data  [, string $priority  ]])
final public static object EvChild::createStopped( int $pid , bool $trace , callable $callback  [, mixed $data  [, int $priority  ]])
final public static object EvFork::createStopped( string $callback  [, string $data  [, string $priority  ]])
final public static object EvIdle::createStopped( string $callback  [, mixed $data  [, int $priority  ]])
final public static string OAuthProvider::generateToken( int $size  [, bool $strong = false ])
final public static string OAuthProvider::reportProblem( string $oauthexception  [, bool $send_headers = true ])
final public static string Phar::apiVersion( void )
final public static string Phar::createDefaultStub([ string $indexfile  [, string $webindexfile ]])
final public static string Phar::running([ bool $retphar = true ])
final public static void Ev::embeddableBackends( void )
final public static void Ev::feedSignal( int $signum )
final public static void Ev::feedSignalEvent( int $signum )
final public static void Ev::nowUpdate( void )
final public static void Ev::recommendedBackends( void )
final public static void Ev::resume( void )
final public static void Ev::run([ int $flags  ])
final public static void Ev::sleep( double $seconds )
final public static void Ev::stop([ int $how  ])
final public static void Ev::supportedBackends( void )
final public static void Ev::suspend( void )
final public static void Ev::verify( void )
final public static void EvEmbed::createStopped( object $other  [, callable $callback  [, mixed $data  [, int $priority  ]]])
final public static void EvStat::createStopped( string $path , double $interval , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
final public static void Phar::interceptFileFuncs( void )
final public static void Phar::mount( string $pharpath , string $externalpath )
final public static void Phar::mungServer( array $munglist )
final public static void Phar::webPhar([ string $alias  [, string $index = "index.php"  [, string $f404  [, array $mimetypes  [, callable $rewrites ]]]]])
final public string Error::getFile( void )
final public string Error::getMessage( void )
final public string Error::getTraceAsString( void )
final public string Exception::getFile( void )
final public string Exception::getMessage( void )
final public string Exception::getTraceAsString( void )
final public string MongoDB\BSON\Binary::getData( void )
final public string MongoDB\BSON\ObjectID::__toString( void )
final public string MongoDB\BSON\Regex::__toString( void )
final public string MongoDB\BSON\Regex::getPattern( void )
final public string MongoDB\BSON\Timestamp::__toString( void )
final public string MongoDB\BSON\UTCDateTime::__toString( void )
final public string MongoDB\Driver\CursorId::__toString( void )
final public string MongoDB\Driver\Server::getHost( void )
final public string MongoDB\Driver\Server::getLatency( void )
final public string SolrParams::serialize( void )
final public string SolrParams::toString([ bool $url_encode = false ])
final public string V8JsException::getJsFileName( void )
final public string V8JsException::getJsSourceLine( void )
final public string V8JsException::getJsTrace( void )
final public string|int|null MongoDB\Driver\WriteConcern::getW( void )
final public string|null MongoDB\Driver\ReadConcern::getLevel( void )
final public void MongoDB\Driver\Cursor::setTypeMap( array $typemap )
final public void SolrParams::set( string $name , string $value )
final public void SolrParams::unserialize( string $serialized )
float HaruPage::getCharSpace( void )
float HaruPage::getCurrentFontSize( void )
float HaruPage::getFlatness( void )
float HaruPage::getGrayFill( void )
float HaruPage::getGrayStroke( void )
float HaruPage::getHeight( void )
float HaruPage::getHorizontalScaling( void )
float HaruPage::getLineWidth( void )
float HaruPage::getMiterLimit( void )
float HaruPage::getTextLeading( void )
float HaruPage::getTextRise( void )
float HaruPage::getTextWidth( string $text )
float HaruPage::getWidth( void )
float HaruPage::getWordSpace( void )
float Imagick::getImageChannelDistortion( Imagick $reference , int $channel , int $metric )
float Imagick::getImageChannelDistortions( Imagick $reference , int $metric  [, int $channel = Imagick::CHANNEL_DEFAULT ])
float Imagick::getImageDistortion( MagickWand $reference , int $metric )
float Imagick::getImageGamma( void )
float Imagick::getImageTotalInkDensity( void )
float Imagick::getPointSize( void )
float ImagickDraw::getFillOpacity( void )
float ImagickDraw::getFontSize( void )
float ImagickDraw::getStrokeDashOffset( void )
float ImagickDraw::getStrokeOpacity( void )
float ImagickDraw::getStrokeWidth( void )
float ImagickPixel::getColorValue( int $color )
float PDF_get_pdi_value ( resource $p , string $key , int $doc , int $page , int $reserved )
float PDF_get_value ( resource $p , string $key , float $modifier )
float PDF_info_font( resource $pdfdoc , int $font , string $keyword , string $optlist )
float PDF_info_matchbox ( resource $pdfdoc , string $boxname , int $num , string $keyword )
float PDF_info_table ( resource $pdfdoc , int $table , string $keyword )
float PDF_info_textflow ( resource $pdfdoc , int $textflow , string $keyword )
float PDF_info_textline ( resource $pdfdoc , string $text , string $keyword , string $optlist )
float PDF_pcos_get_number ( resource $p , int $doc , string $path )
float PDF_stringwidth ( resource $p , string $text , int $font , float $fontsize )
float SWFBitmap::getHeight( void )
float SWFBitmap::getWidth( void )
float SWFDisplayItem::getRot( void )
float SWFDisplayItem::getX( void )
float SWFDisplayItem::getXScale( void )
float SWFDisplayItem::getXSkew( void )
float SWFDisplayItem::getY( void )
float SWFDisplayItem::getYScale( void )
float SWFDisplayItem::getYSkew( void )
float SWFFont::getAscent( void )
float SWFFont::getDescent( void )
float SWFFont::getLeading( void )
float SWFFont::getUTF8Width( string $string )
float SWFFont::getWidth( string $string )
float SWFText::getAscent( void )
float SWFText::getDescent( void )
float SWFText::getLeading( void )
float SWFText::getUTF8Width( string $string )
float SWFText::getWidth( string $string )
float acos ( float $arg )
float acosh ( float $arg )
float asin ( float $arg )
float atan ( float $arg )
float atanh ( float $arg )
float ceil ( float $value )
float cos ( float $arg )
float cosh ( float $arg )
float deg2rad ( float $number )
float disk_free_space( string $directory )
float exp ( float $arg )
float expm1( float $arg )
float fann_get_MSE( resource $ann )
float fann_get_activation_steepness( resource $ann , int $layer , int $neuron )
float fann_get_bit_fail_limit( resource $ann )
float fann_get_cascade_candidate_change_fraction( resource $ann )
float fann_get_cascade_candidate_limit( resource $ann )
float fann_get_cascade_candidate_stagnation_epochs( resource $ann )
float fann_get_cascade_output_change_fraction( resource $ann )
float fann_get_cascade_weight_multiplier( resource $ann )
float fann_get_connection_rate( resource $ann )
float fann_get_learning_momentum( resource $ann )
float fann_get_learning_rate( resource $ann )
float fann_get_quickprop_decay( resource $ann )
float fann_get_quickprop_mu( resource $ann )
float fann_get_rprop_decrease_factor( resource $ann )
float fann_get_rprop_delta_max( resource $ann )
float fann_get_rprop_delta_min( resource $ann )
float fann_get_rprop_increase_factor( resource $ann )
float fann_get_sarprop_step_error_shift( resource $ann )
float fann_get_sarprop_step_error_threshold_factor( resource $ann )
float fann_get_sarprop_temperature( resource $ann )
float fann_get_sarprop_weight_decay_shift( resource $ann )
float fann_test_data( resource $ann , resource $data )
float fann_train_epoch( resource $ann , resource $data )
float fmod ( float $x , float $y )
float hypot( float $x , float $y )
float lcg_value ( void )
float log ( float $arg  [, float $base = M_E  ])
float log10 ( float $arg )
float log1p( float $number )
float pi ( void )
float ps_get_value( resource $psdoc , string $name  [, float $modifier ])
float ps_stringwidth( resource $psdoc , string $text  [, int $fontid = 0  [, float $size = 0.0 ]])
float ps_symbol_width( resource $psdoc , int $ord  [, int $fontid = 0  [, float $size = 0.0 ]])
float px_get_value( resource $pxdoc , string $name )
float rad2deg ( float $number )
float round ( float $val  [, int $precision = 0  [, int $mode = PHP_ROUND_HALF_UP  ]])
float sin ( float $arg )
float sinh ( float $arg )
float sqrt ( float $arg )
float stats_absolute_deviation( array $a )
float stats_cdf_beta( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_binomial( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_cauchy( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_chisquare( float $par1 , float $par2 , int $which )
float stats_cdf_exponential( float $par1 , float $par2 , int $which )
float stats_cdf_f( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_gamma( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_laplace( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_logistic( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_negative_binomial( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_noncentral_chisquare( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_noncentral_f( float $par1 , float $par2 , float $par3 , float $par4 , int $which )
float stats_cdf_poisson( float $par1 , float $par2 , int $which )
float stats_cdf_t( float $par1 , float $par2 , int $which )
float stats_cdf_uniform( float $par1 , float $par2 , float $par3 , int $which )
float stats_cdf_weibull( float $par1 , float $par2 , float $par3 , int $which )
float stats_covariance( array $a , array $b )
float stats_den_uniform( float $x , float $a , float $b )
float stats_dens_beta( float $x , float $a , float $b )
float stats_dens_cauchy( float $x , float $ave , float $stdev )
float stats_dens_chisquare( float $x , float $dfr )
float stats_dens_exponential( float $x , float $scale )
float stats_dens_f( float $x , float $dfr1 , float $dfr2 )
float stats_dens_gamma( float $x , float $shape , float $scale )
float stats_dens_laplace( float $x , float $ave , float $stdev )
float stats_dens_logistic( float $x , float $ave , float $stdev )
float stats_dens_negative_binomial( float $x , float $n , float $pi )
float stats_dens_normal( float $x , float $ave , float $stdev )
float stats_dens_pmf_binomial( float $x , float $n , float $pi )
float stats_dens_pmf_hypergeometric( float $n1 , float $n2 , float $N1 , float $N2 )
float stats_dens_pmf_poisson( float $x , float $lb )
float stats_dens_t( float $x , float $dfr )
float stats_dens_weibull( float $x , float $a , float $b )
float stats_kurtosis( array $a )
float stats_rand_gen_beta( float $a , float $b )
float stats_rand_gen_chisquare( float $df )
float stats_rand_gen_exponential( float $av )
float stats_rand_gen_f( float $dfn , float $dfd )
float stats_rand_gen_funiform( float $low , float $high )
float stats_rand_gen_gamma( float $a , float $r )
float stats_rand_gen_noncenral_chisquare( float $df , float $xnonc )
float stats_rand_gen_noncentral_f( float $dfn , float $dfd , float $xnonc )
float stats_rand_gen_noncentral_t( float $df , float $xnonc )
float stats_rand_gen_normal( float $av , float $sd )
float stats_rand_gen_t( float $df )
float stats_rand_ranf( void )
float stats_skew( array $a )
float stats_standard_deviation( array $a  [, bool $sample = false ])
float stats_stat_binomial_coef( int $x , int $n )
float stats_stat_gennch( int $n )
float stats_stat_independent_t( array $arr1 , array $arr2 )
float stats_stat_innerproduct( array $arr1 , array $arr2 )
float stats_stat_noncentral_t( float $par1 , float $par2 , float $par3 , int $which )
float stats_stat_paired_t( array $arr1 , array $arr2 )
float stats_stat_percentile( float $df , float $xnonc )
float stats_stat_powersum( array $arr , float $power )
float stats_variance( array $a  [, bool $sample = false ])
float tanh ( float $arg )
hw_api_content hw_api::copy( array $parameter )
hw_api_object hw_api::dbstat( array $parameter )
hw_api_object hw_api::dcstat( array $parameter )
hw_api_object hw_api::dstofsrcanchor( array $parameter )
hw_api_object hw_api::ftstat( array $parameter )
hw_api_object hw_api::hwstat( array $parameter )
hw_api_object hw_api::insert( array $parameter )
hw_api_object hw_api::insertanchor( array $parameter )
hw_api_object hw_api::insertcollection( array $parameter )
hw_api_object hw_api::insertdocument( array $parameter )
hw_api_object hw_api::object( array $parameter )
hw_api_object hw_api::objectbyanchor( array $parameter )
hw_api_object hw_api::replace( array $parameter )
hw_api_object hw_api::setcommittedversion( array $parameter )
hw_api_object hw_api::user( array $parameter )
hw_api_object hwapi_object_new( array $parameter )
int HaruDoc::getPageLayout( void )
int HaruDoc::getPageMode( void )
int HaruDoc::getStreamSize( void )
int HaruEncoder::getByteType( string $text , int $index )
int HaruEncoder::getType( void )
int HaruEncoder::getUnicode( int $character )
int HaruEncoder::getWritingMode( void )
int HaruFont::getAscent( void )
int HaruFont::getCapHeight( void )
int HaruFont::getDescent( void )
int HaruFont::getUnicodeWidth( int $character )
int HaruFont::getXHeight( void )
int HaruFont::measureText( string $text , float $width , float $font_size , float $char_space , float $word_space  [, bool $word_wrap = false ])
int HaruImage::getBitsPerComponent( void )
int HaruImage::getHeight( void )
int HaruImage::getWidth( void )
int HaruPage::getFillingColorSpace( void )
int HaruPage::getGMode( void )
int HaruPage::getLineCap( void )
int HaruPage::getLineJoin( void )
int HaruPage::getStrokingColorSpace( void )
int HaruPage::getTextRenderingMode( void )
int HaruPage::measureText( string $text , float $width  [, bool $wordwrap = false ])
int Imagick::getColorspace( void )
int Imagick::getCompression( void )
int Imagick::getCompressionQuality( void )
int Imagick::getGravity( void )
int Imagick::getImageAlphaChannel( void )
int Imagick::getImageChannelDepth( int $channel )
int Imagick::getImageColors( void )
int Imagick::getImageColorspace( void )
int Imagick::getImageCompose( void )
int Imagick::getImageCompression( void )
int Imagick::getImageCompressionQuality( void )
int Imagick::getImageDelay( void )
int Imagick::getImageDepth( void )
int Imagick::getImageDispose( void )
int Imagick::getImageGravity( void )
int Imagick::getImageHeight( void )
int Imagick::getImageIndex( void )
int Imagick::getImageInterlaceScheme( void )
int Imagick::getImageInterpolateMethod( void )
int Imagick::getImageIterations( void )
int Imagick::getImageLength( void )
int Imagick::getImageOrientation( void )
int Imagick::getImageRenderingIntent( void )
int Imagick::getImageScene( void )
int Imagick::getImageSize( void )
int Imagick::getImageTicksPerSecond( void )
int Imagick::getImageType( void )
int Imagick::getImageUnits( void )
int Imagick::getImageVirtualPixelMethod( void )
int Imagick::getImageWidth( void )
int Imagick::getInterlaceScheme( void )
int Imagick::getIteratorIndex( void )
int Imagick::getNumberImages( void )
int Imagick::getResource( int $type )
int Imagick::getResourceLimit( int $type )
int Imagick::getSizeOffset( void )
int ImagickDraw::getClipRule( void )
int ImagickDraw::getClipUnits( void )
int ImagickDraw::getFillRule( void )
int ImagickDraw::getFontStyle( void )
int ImagickDraw::getFontWeight( void )
int ImagickDraw::getGravity( void )
int ImagickDraw::getStrokeLineCap( void )
int ImagickDraw::getStrokeLineJoin( void )
int ImagickDraw::getStrokeMiterLimit( void )
int ImagickDraw::getTextAlignment( void )
int ImagickDraw::getTextDecoration( void )
int ImagickPixel::getColorCount( void )
int ImagickPixelIterator::getIteratorRow( void )
int Memcache::decrement( string $key  [, int $value = 1 ])
int Memcache::getServerStatus( string $host  [, int $port = 11211 ])
int Memcache::increment( string $key  [, int $value = 1 ])
int OCI-Collection::max( void )
int OCI-Collection::size( void )
int OCI-Lob::erase([ int $offset  [, int $length ]])
int OCI-Lob::size( void )
int OCI-Lob::tell( void )
int OCI-Lob::write( string $data  [, int $length ])
int PDF_add_table_cell ( resource $pdfdoc , int $table , int $column , int $row , string $text , string $optlist )
int PDF_begin_document( resource $pdfdoc , string $filename , string $optlist )
int PDF_begin_item( resource $pdfdoc , string $tag , string $optlist )
int PDF_begin_pattern( resource $pdfdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )
int PDF_begin_template( resource $pdfdoc , float $width , float $height )
int PDF_begin_template_ext( resource $pdfdoc , float $width , float $height , string $optlist )
int PDF_create_3dview( resource $pdfdoc , string $username , string $optlist )
int PDF_create_action( resource $pdfdoc , string $type , string $optlist )
int PDF_create_bookmark( resource $pdfdoc , string $text , string $optlist )
int PDF_create_gstate( resource $pdfdoc , string $optlist )
int PDF_create_textflow( resource $pdfdoc , string $text , string $optlist )
int PDF_define_layer( resource $pdfdoc , string $name , string $optlist )
int PDF_delete_pvf ( resource $pdfdoc , string $filename )
int PDF_fill_imageblock ( resource $pdfdoc , int $page , string $blockname , int $image , string $optlist )
int PDF_fill_pdfblock ( resource $pdfdoc , int $page , string $blockname , int $contents , string $optlist )
int PDF_fill_textblock ( resource $pdfdoc , int $page , string $blockname , string $text , string $optlist )
int PDF_get_errnum ( resource $pdfdoc )
int PDF_get_majorversion ( void )
int PDF_get_minorversion ( void )
int PDF_load_3ddata ( resource $pdfdoc , string $filename , string $optlist )
int PDF_load_font ( resource $pdfdoc , string $fontname , string $encoding , string $optlist )
int PDF_load_iccprofile ( resource $pdfdoc , string $profilename , string $optlist )
int PDF_load_image ( resource $pdfdoc , string $imagetype , string $filename , string $optlist )
int PDF_makespotcolor ( resource $p , string $spotname )
int PDF_open_ccitt ( resource $pdfdoc , string $filename , int $width , int $height , int $BitReverse , int $k , int $Blackls1 )
int PDF_open_image ( resource $p , string $imagetype , string $source , string $data , int $length , int $width , int $height , int $components , int $bpc , string $params )
int PDF_open_image_file ( resource $p , string $imagetype , string $filename , string $stringparam , int $intparam )
int PDF_open_memory_image( resource $p , resource $image )
int PDF_open_pdi_document( resource $p , string $filename , string $optlist )
int PDF_open_pdi_page  ( resource $p   , int $doc   , int $pagenumber   , string $optlist   )
int PDF_process_pdi ( resource $pdfdoc , int $doc , int $page , string $optlist )
int PDF_shading ( resource $pdfdoc , string $shtype , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )
int PDF_shading_pattern ( resource $pdfdoc , int $shading , string $optlist )
int SDO_DAS_ChangeSummary::getChangeType( SDO_DataObject $dataObject )
int SDO_DAS_Setting::getListIndex( void )
int SDO_DAS_Setting::getPropertyIndex( void )
int SQLiteResult::key( void )
int SWFMovie::output([ int $compression ])
int SWFMovie::save( string $filename  [, int $compression = -1 ])
int SWFMovie::saveToFile( resource $x  [, int $compression = -1 ])
int SWFMovie::streamMP3( mixed $mp3file  [, float $skip = 0 ])
int SWFShape::drawCubic( float $bx , float $by , float $cx , float $cy , float $dx , float $dy )
int SWFShape::drawCubicTo( float $bx , float $by , float $cx , float $cy , float $dx , float $dy )
int SWFShape::drawCurve( float $controldx , float $controldy , float $anchordx , float $anchordy  [, float $targetdx  ], float $targetdy )
int SWFShape::drawCurveTo( float $controlx , float $controly , float $anchorx , float $anchory  [, float $targetx  ], float $targety )
int SWFVideoStream::getNumFrames( void )
int SwishResults::seekResult( int $position )
int XSLTProcessor::transformToURI( DOMDocument $doc , string $uri )
int ZipArchive::locateName( string $name  [, int $flags ])
int apc_bin_dumpfile( array $files , array $user_vars , string $filename  [, int $flags = 0  [, resource $context = NULL ]])
int apc_dec( string $key  [, int $step = 1  [, bool &$success ]])
int apc_inc( string $key  [, int $step = 1  [, bool &$success ]])
int apcu_dec( string $key  [, int $step = 1  [, bool &$success ]])
int apcu_inc( string $key  [, int $step = 1  [, bool &$success ]])
int array_push( array &$array , mixed $value1  [, mixed $... ])
int array_unshift( array &$array , mixed $value1  [, mixed $... ])
int bccomp( string $left_operand , string $right_operand  [, int $scale = 0 ])
int bzclose( resource $bz )
int bzerrno( resource $bz )
int bzwrite( resource $bz , string $data  [, int $length ])
int cairo_font_face_get_type( CairoFontFace $fontface )
int cairo_font_options_get_antialias( CairoFontOptions $options )
int cairo_font_options_get_hint_metrics( CairoFontOptions $options )
int cairo_font_options_get_hint_style( CairoFontOptions $options )
int cairo_font_options_get_subpixel_order( CairoFontOptions $options )
int cairo_font_options_hash( CairoFontOptions $options )
int cairo_font_options_status( CairoFontOptions $options )
int cairo_format_stride_for_width( int $format , int $width )
int cairo_image_surface_get_format( CairoImageSurface $surface )
int cairo_image_surface_get_height( CairoImageSurface $surface )
int cairo_image_surface_get_stride( CairoImageSurface $surface )
int cairo_image_surface_get_width( CairoImageSurface $surface )
int cairo_pattern_get_color_stop_count( CairoGradientPattern $pattern )
int cairo_pattern_get_extend( string $pattern )
int cairo_pattern_get_filter( CairoSurfacePattern $pattern )
int cairo_pattern_get_type( CairoPattern $pattern )
int cairo_pattern_status( CairoPattern $pattern )
int cairo_scaled_font_get_type( CairoScaledFont $scaledfont )
int cairo_scaled_font_status( CairoScaledFont $scaledfont )
int cairo_surface_get_content( CairoSurface $surface )
int cairo_surface_get_type( CairoSurface $surface )
int cairo_surface_status( CairoSurface $surface )
int cal_days_in_month( int $calendar , int $month , int $year )
int cal_to_jd( int $calendar , int $month , int $day , int $year )
int connection_aborted( void )
int connection_status( void )
int count( mixed $array_or_countable  [, int $mode = COUNT_NORMAL ])
int cubrid_affected_rows([ resource $conn_identifier ])
int cubrid_col_size  ( resource $conn_identifier   , string $oid   , string $attr_name )
int cubrid_errno([ resource $conn_identifier ])
int cubrid_error_code( void )
int cubrid_error_code_facility( void )
int cubrid_field_len( resource $result , int $field_offset )
int cubrid_get_query_timeout( resource $req_identifier )
int cubrid_is_instance( resource $conn_identifier  , string $oid  )
int cubrid_load_from_glo( resource $conn_identifier  , string $oid  , string $file_name  )
int cubrid_lob2_size( resource $lob_identifier )
int cubrid_lob2_tell( resource $lob_identifier )
int cubrid_move_cursor( resource $req_identifier  , int $offset   [, int $origin = CUBRID_CURSOR_CURRENT  ])
int cubrid_num_cols( resource $result  )
int cubrid_num_fields( resource $result )
int cubrid_num_rows( resource $result  )
int cubrid_put( resource $conn_identifier  , string $oid   [, string $attr  ], mixed $value  )
int cubrid_save_to_glo( resource $conn_identifier  , string $oid  , string $file_name  )
int cubrid_send_glo( resource $conn_identifier  , string $oid  )
int curl_errno( resource $ch )
int curl_multi_add_handle( resource $mh , resource $ch )
int curl_multi_remove_handle( resource $mh , resource $ch )
int curl_multi_select( resource $mh  [, float $timeout = 1.0 ])
int curl_pause( resource $ch , int $bitmask )
int db2_cursor_type( resource $stmt )
int db2_field_display_size( resource $stmt , mixed $column )
int db2_field_num( resource $stmt , mixed $column )
int db2_field_precision( resource $stmt , mixed $column )
int db2_field_scale( resource $stmt , mixed $column )
int db2_field_width( resource $stmt , mixed $column )
int db2_num_fields( resource $stmt )
int db2_num_rows( resource $stmt )
int dbase_create( string $filename , array $fields )
int dbase_numfields( int $dbase_identifier )
int dbase_numrecords( int $dbase_identifier )
int dbase_open( string $filename , int $mode )
int dbplus_add( resource $relation , array $tuple )
int dbplus_curr( resource $relation , array &$tuple )
int dbplus_errno( void )
int dbplus_find( resource $relation , array $constraints , mixed $tuple )
int dbplus_first( resource $relation , array &$tuple )
int dbplus_flush( resource $relation )
int dbplus_freealllocks( void )
int dbplus_freelock( resource $relation , string $tuple )
int dbplus_freerlocks( resource $relation )
int dbplus_getlock( resource $relation , string $tuple )
int dbplus_getunique( resource $relation , int $uniqueid )
int dbplus_info( resource $relation , string $key , array &$result )
int dbplus_last( resource $relation , array &$tuple )
int dbplus_lockrel( resource $relation )
int dbplus_next( resource $relation , array &$tuple )
int dbplus_prev( resource $relation , array &$tuple )
int dbplus_rchperm( resource $relation , int $mask , string $user , string $group )
int dbplus_restorepos( resource $relation , array $tuple )
int dbplus_rrename( resource $relation , string $name )
int dbplus_runlink( resource $relation )
int dbplus_rzap( resource $relation )
int dbplus_savepos( resource $relation )
int dbplus_setindex( resource $relation , string $idx_name )
int dbplus_setindexbynumber( resource $relation , int $idx_number )
int dbplus_tremove( resource $relation , array $tuple  [, array &$current ])
int dbplus_undo( resource $relation )
int dbplus_undoprepare( resource $relation )
int dbplus_unlockrel( resource $relation )
int dbplus_unselect( resource $relation )
int dbplus_update( resource $relation , array $old , array $new )
int dbplus_xlockrel( resource $relation )
int dbplus_xunlockrel( resource $relation )
int dbx_close( object $link_identifier )
int dbx_compare( array $row_a , array $row_b , string $column_key  [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE ])
int dio_seek( resource $fd , int $pos  [, int $whence = SEEK_SET ])
int dio_write( resource $fd , string $data  [, int $len = 0 ])
int easter_days([ int $year = date("Y")  [, int $method = CAL_EASTER_DEFAULT ]])
int eio_npending( void )
int eio_nready( void )
int eio_nreqs( void )
int eio_nthreads( void )
int eio_poll( void )
int error_reporting([ int $level ])
int event_base_loop( resource $event_base  [, int $flags = 0 ])
int exif_imagetype ( string $filename )
int expect_expectl( resource $expect , array $cases  [, array &$match ])
int extract( array &$array  [, int $flags = EXTR_OVERWRITE  [, string $prefix = NULL ]])
int ezmlm_hash( string $addr )
int fam_pending( resource $fam )
int fann_get_activation_function( resource $ann , int $layer , int $neuron )
int fann_get_bit_fail( resource $ann )
int fann_get_cascade_activation_functions_count( resource $ann )
int fann_get_cascade_activation_steepnesses_count( resource $ann )
int fann_get_cascade_max_cand_epochs( resource $ann )
int fann_get_cascade_max_out_epochs( resource $ann )
int fann_get_cascade_min_cand_epochs( resource $ann )
int fann_get_cascade_min_out_epochs( resource $ann )
int fann_get_cascade_num_candidate_groups( resource $ann )
int fann_get_cascade_num_candidates( resource $ann )
int fann_get_cascade_output_stagnation_epochs( resource $ann )
int fann_get_errno( resource $errdat )
int fann_get_network_type( resource $ann )
int fann_get_num_input( resource $ann )
int fann_get_num_layers( resource $ann )
int fann_get_num_output( resource $ann )
int fann_get_total_connections( resource $ann )
int fann_get_total_neurons( resource $ann )
int fann_get_train_error_function( resource $ann )
int fann_get_train_stop_function( resource $ann )
int fann_get_training_algorithm( resource $ann )
int fann_length_train_data( resource $data )
int fann_num_input_train_data( resource $data )
int fann_num_output_train_data( resource $data )
int fbsql_affected_rows([ resource $link_identifier ])
int fbsql_blob_size( string $blob_handle  [, resource $link_identifier ])
int fbsql_clob_size( string $clob_handle  [, resource $link_identifier ])
int fbsql_db_status( string $database_name  [, resource $link_identifier ])
int fbsql_errno([ resource $link_identifier ])
int fbsql_field_len( resource $result  [, int $field_offset ])
int fbsql_insert_id([ resource $link_identifier ])
int fbsql_num_fields( resource $result )
int fbsql_num_rows( resource $result )
int fbsql_rows_fetched( resource $result )
int fdf_errno( void )
int fdf_get_flags( resource $fdf_document , string $fieldname , int $whichflags )
int fileatime( string $filename )
int filectime( string $filename )
int filegroup( string $filename )
int fileinode( string $filename )
int filemtime( string $filename )
int fileowner( string $filename )
int fileperms( string $filename )
int filepro_fieldcount( void )
int filepro_fieldwidth( int $field_number )
int filepro_rowcount( void )
int filter_id( string $filtername )
int fpassthru( resource $handle )
int fprintf( resource $handle , string $format  [, mixed $args  [, mixed $... ]])
int fputcsv( resource $handle , array $fields  [, string $delimiter = ","  [, string $enclosure = '"'  [, string $escape_char = "\" ]]])
int ftell( resource $handle )
int ftok( string $pathname , string $proj )
int ftp_chmod( resource $ftp_stream , int $mode , string $filename )
int ftp_mdtm( resource $ftp_stream , string $remote_file )
int ftp_nb_continue( resource $ftp_stream )
int ftp_nb_fget( resource $ftp_stream , resource $handle , string $remote_file , int $mode  [, int $resumepos = 0 ])
int ftp_nb_fput( resource $ftp_stream , string $remote_file , resource $handle , int $mode  [, int $startpos = 0 ])
int ftp_nb_get( resource $ftp_stream , string $local_file , string $remote_file , int $mode  [, int $resumepos = 0 ])
int ftp_nb_put( resource $ftp_stream , string $remote_file , string $local_file , int $mode  [, int $startpos = 0 ])
int ftp_size( resource $ftp_stream , string $remote_file )
int func_num_args( void )
int gc_collect_cycles( void )
int gc_mem_caches( void )
int geoip_id_by_name( string $hostname )
int getlastmod( void )
int getmygid( void )
int getmyinode( void )
int getmypid( void )
int getmyuid( void )
int getprotobyname( string $name )
int getrandmax ( void )
int getservbyname( string $service , string $protocol )
int gmp_cmp( GMP $a , GMP $b )
int gmp_hamdist( GMP $a , GMP $b )
int gmp_intval( GMP $gmpnumber )
int gmp_jacobi( GMP $a , GMP $p )
int gmp_legendre( GMP $a , GMP $p )
int gmp_popcount( GMP $a )
int gmp_prob_prime( GMP $a  [, int $reps = 10 ])
int gmp_scan0( GMP $a , int $start )
int gmp_scan1( GMP $a , int $start )
int gmp_sign( GMP $a )
int gnupg_getprotocol( resource $identifier )
int grapheme_stripos( string $haystack , string $needle  [, int $offset = 0 ])
int grapheme_strlen( string $input )
int grapheme_strpos( string $haystack , string $needle  [, int $offset = 0 ])
int grapheme_strripos( string $haystack , string $needle  [, int $offset = 0 ])
int grapheme_strrpos( string $haystack , string $needle  [, int $offset = 0 ])
int grapheme_substr( string $string , int $start  [, int $length ])
int gregoriantojd( int $month , int $day , int $year )
int gupnp_context_get_port( resource $context )
int gupnp_context_get_subscription_timeout( resource $context )
int gzeof( resource $zp )
int gzpassthru( resource $zp )
int gzseek( resource $zp , int $offset  [, int $whence = SEEK_SET ])
int gztell( resource $zp )
int gzwrite( resource $zp , string $string  [, int $length ])
int hash_update_stream( resource $context , resource $handle  [, int $length = -1 ])
int hw_api_error::count( void )
int hw_api_object::count( array $parameter )
int ibase_affected_rows([ resource $link_identifier ])
int ibase_errcode( void )
int ibase_num_fields( resource $result_id )
int ibase_num_params( resource $query )
int iconv_strpos( string $haystack , string $needle  [, int $offset = 0  [, string $charset = ini_get("iconv.internal_encoding") ]])
int iconv_strrpos( string $haystack , string $needle  [, string $charset = ini_get("iconv.internal_encoding") ])
int id3_get_genre_id( string $genre )
int id3_get_version( string $filename )
int idate( string $format  [, int $timestamp = time() ])
int ifx_affected_rows( resource $result_id )
int ifx_copy_blob( int $bid )
int ifx_create_blob( int $type , int $mode , string $param )
int ifx_create_char( string $param )
int ifx_htmltbl_result( resource $result_id  [, string $html_table_options ])
int ifx_num_fields( resource $result_id )
int ifx_num_rows( resource $result_id )
int ifxus_create_slob( int $mode )
int ifxus_open_slob( int $bid , int $mode )
int ifxus_seek_slob( int $bid , int $mode , int $offset )
int ifxus_tell_slob( int $bid )
int ifxus_write_slob( int $bid , string $content )
int ignore_user_abort([ bool $value ])
int iis_add_server( string $path , string $comment , string $server_ip , int $port , string $host_name , int $rights , int $start_server )
int iis_get_dir_security( int $server_instance , string $virtual_path )
int iis_get_server_by_comment( string $comment )
int iis_get_server_by_path( string $path )
int iis_get_server_rights( int $server_instance , string $virtual_path )
int iis_get_service_state( string $service_id )
int iis_remove_server( int $server_instance )
int iis_set_app_settings( int $server_instance , string $virtual_path , string $application_scope )
int iis_set_dir_security( int $server_instance , string $virtual_path , int $directory_flags )
int iis_set_script_map( int $server_instance , string $virtual_path , string $script_extension , string $engine_path , int $allow_scripting )
int iis_set_server_rights( int $server_instance , string $virtual_path , int $directory_flags )
int iis_start_server( int $server_instance )
int iis_start_service( string $service_id )
int iis_stop_server( int $server_instance )
int iis_stop_service( string $service_id )
int imagecolorallocate( resource $image , int $red , int $green , int $blue )
int imagecolorallocatealpha( resource $image , int $red , int $green , int $blue , int $alpha )
int imagecolorat( resource $image , int $x , int $y )
int imagecolorclosest( resource $image , int $red , int $green , int $blue )
int imagecolorclosestalpha( resource $image , int $red , int $green , int $blue , int $alpha )
int imagecolorclosesthwb( resource $image , int $red , int $green , int $blue )
int imagecolorexact( resource $image , int $red , int $green , int $blue )
int imagecolorexactalpha( resource $image , int $red , int $green , int $blue , int $alpha )
int imagecolorresolve( resource $image , int $red , int $green , int $blue )
int imagecolorresolvealpha( resource $image , int $red , int $green , int $blue , int $alpha )
int imagecolorstotal( resource $image )
int imagefontheight( int $font )
int imageinterlace( resource $image  [, int $interlace = 0 ])
int imageloadfont( string $file )
int imagesx( resource $image )
int imagesy( resource $image )
int imagetypes( void )
int imap_msgno( resource $imap_stream , int $uid )
int imap_num_msg( resource $imap_stream )
int imap_num_recent( resource $imap_stream )
int imap_uid( resource $imap_stream , int $msg_number )
int ingres_errno([ resource $link ])
int ingres_fetch_proc_return( resource $result )
int ingres_field_length( resource $result , int $index )
int ingres_field_precision( resource $result , int $index )
int ingres_field_scale( resource $result , int $index )
int ingres_num_fields( resource $result )
int ingres_num_rows( resource $result )
int inotify_add_watch( resource $inotify_instance , string $pathname , int $mask )
int inotify_queue_len( resource $inotify_instance )
int intdiv ( int $dividend , int $divisor )
int intl_get_error_code( void )
int intval( mixed $var  [, int $base = 10 ])
int iterator_apply( Traversable $iterator , callable $function  [, array $args ])
int iterator_count( Traversable $iterator )
int jdtounix( int $jday )
int jewishtojd( int $month , int $day , int $year )
int json_last_error( void )
int judy_type( Judy $array )
int juliantojd( int $month , int $day , int $year )
int ldap_count_entries( resource $link_identifier , resource $result_identifier )
int ldap_errno( resource $link_identifier )
int linkinfo( string $path )
int lzf_optimized_for( void )
int m_checkstatus( resource $conn , int $identifier )
int m_completeauthorizations( resource $conn , int &$array )
int m_connect( resource $conn )
int m_initengine( string $location )
int m_iscommadelimited( resource $conn , int $identifier )
int m_monitor( resource $conn )
int m_numcolumns( resource $conn , int $identifier )
int m_numrows( resource $conn , int $identifier )
int m_parsecommadelimited( resource $conn , int $identifier )
int m_returnstatus( resource $conn , int $identifier )
int m_setblocking( resource $conn , int $tf )
int m_setdropfile( resource $conn , string $directory )
int m_setip( resource $conn , string $host , int $port )
int m_setssl( resource $conn , string $host , int $port )
int m_setssl_cafile( resource $conn , string $cafile )
int m_setssl_files( resource $conn , string $sslkeyfile , string $sslcertfile )
int m_settimeout( resource $conn , int $seconds )
int m_transactionssent( resource $conn )
int m_transinqueue( resource $conn )
int m_transkeyval( resource $conn , int $identifier , string $key , string $value )
int m_transnew( resource $conn )
int m_transsend( resource $conn , int $identifier )
int m_uwait( int $microsecs )
int m_validateidentifier( resource $conn , int $tf )
int maxdb_affected_rows( resource $link )
int maxdb_connect_errno( void )
int maxdb_errno( resource $link )
int maxdb_field_count( resource $link )
int maxdb_field_tell( resource $result )
int maxdb_get_client_version( void )
int maxdb_get_proto_info( resource $link )
int maxdb_get_server_version( resource $link )
int maxdb_num_fields( resource $result )
int maxdb_num_rows( resource $result )
int maxdb_rpl_parse_enabled( resource $link )
int maxdb_rpl_query_type( resource $link )
int maxdb_stmt_affected_rows( resource $stmt )
int maxdb_stmt_errno( resource $stmt )
int maxdb_stmt_num_rows( resource $stmt )
int maxdb_stmt_param_count( resource $stmt )
int maxdb_thread_id( resource $link )
int maxdb_warning_count( resource $link )
int mb_ereg_search_getpos( void )
int mb_stripos( string $haystack , string $needle  [, int $offset = 0  [, string $encoding = mb_internal_encoding() ]])
int mb_strpos( string $haystack , string $needle  [, int $offset = 0  [, string $encoding = mb_internal_encoding() ]])
int mb_strripos( string $haystack , string $needle  [, int $offset = 0  [, string $encoding = mb_internal_encoding() ]])
int mb_substr_count( string $haystack , string $needle  [, string $encoding = mb_internal_encoding() ])
int mcrypt_enc_get_block_size( resource $td )
int mcrypt_enc_get_iv_size( resource $td )
int mcrypt_enc_get_key_size( resource $td )
int mcrypt_enc_self_test( resource $td )
int mcrypt_generic_init( resource $td , string $key , string $iv )
int mcrypt_get_block_size( int $cipher )
int mcrypt_get_iv_size( string $cipher , string $mode )
int mcrypt_get_key_size( int $cipher )
int mcrypt_module_get_algo_block_size( string $algorithm  [, string $lib_dir ])
int mcrypt_module_get_algo_key_size( string $algorithm  [, string $lib_dir ])
int memory_get_peak_usage([ bool $real_usage = false ])
int memory_get_usage([ bool $real_usage = false ])
int mhash_count( void )
int mhash_get_block_size( int $hash )
int ming_keypress( string $char )
int mktime([ int $hour = date("H")  [, int $minute = date("i")  [, int $second = date("s")  [, int $month = date("n")  [, int $day = date("j")  [, int $year = date("Y")  [, int $is_dst = -1 ]]]]]]])
int msession_count( void )
int msession_lock( string $name )
int msession_timeout( string $session  [, int $param ])
int msession_unlock( string $session , int $key )
int msql_affected_rows( resource $result )
int msql_field_len( resource $result , int $field_offset )
int msql_field_table( resource $result , int $field_offset )
int msql_num_fields( resource $result )
int msql_num_rows( resource $query_identifier )
int mssql_fetch_batch( resource $result )
int mssql_field_length( resource $result  [, int $offset = -1 ])
int mssql_num_fields( resource $result )
int mssql_num_rows( resource $result )
int mssql_rows_affected( resource $link_identifier )
int mt_getrandmax ( void )
int mt_rand( void )
int mysql_affected_rows([ resource $link_identifier = NULL ])
int mysql_errno([ resource $link_identifier = NULL ])
int mysql_field_len( resource $result , int $field_offset )
int mysql_get_proto_info([ resource $link_identifier = NULL ])
int mysql_insert_id([ resource $link_identifier = NULL ])
int mysql_num_fields( resource $result )
int mysql_num_rows( resource $result )
int mysql_thread_id([ resource $link_identifier = NULL ])
int mysqli::rpl_query_type( string $query )
int mysqli_affected_rows( mysqli $link )
int mysqli_connect_errno( void )
int mysqli_errno( mysqli $link )
int mysqli_field_count( mysqli $link )
int mysqli_field_tell( mysqli_result $result )
int mysqli_get_client_version( mysqli $link )
int mysqli_get_proto_info( mysqli $link )
int mysqli_get_server_version( mysqli $link )
int mysqli_num_fields( mysqli_result $result )
int mysqli_num_rows( mysqli_result $result )
int mysqli_rpl_parse_enabled( mysqli $link )
int mysqli_stmt::attr_get( int $attr )
int mysqli_stmt_affected_rows( mysqli_stmt $stmt )
int mysqli_stmt_errno( mysqli_stmt $stmt )
int mysqli_stmt_field_count( mysqli_stmt $stmt )
int mysqli_stmt_num_rows( mysqli_stmt $stmt )
int mysqli_stmt_param_count( mysqli_stmt $stmt )
int mysqli_thread_id( mysqli $link )
int mysqli_warning_count( mysqli $link )
int mysqlnd_ms_query_is_select( string $query )
int mysqlnd_ms_xa_begin( mixed $connection , string $gtrid  [, int $timeout ])
int mysqlnd_ms_xa_commit( mixed $connection , string $gtrid )
int mysqlnd_ms_xa_gc( mixed $connection  [, string $gtrid  [, boolean $ignore_max_retries ]])
int mysqlnd_ms_xa_rollback( mixed $connection , string $gtrid )
int ncurses_addch( int $ch )
int ncurses_addchnstr( string $s , int $n )
int ncurses_addchstr( string $s )
int ncurses_addnstr( string $s , int $n )
int ncurses_addstr( string $text )
int ncurses_assume_default_colors( int $fg , int $bg )
int ncurses_attroff( int $attributes )
int ncurses_attron( int $attributes )
int ncurses_attrset( int $attributes )
int ncurses_baudrate( void )
int ncurses_beep( void )
int ncurses_bkgd( int $attrchar )
int ncurses_border( int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )
int ncurses_bottom_panel( resource $panel )
int ncurses_color_content( int $color , int &$r , int &$g , int &$b )
int ncurses_color_set( int $pair )
int ncurses_curs_set( int $visibility )
int ncurses_define_key( string $definition , int $keycode )
int ncurses_delay_output( int $milliseconds )
int ncurses_echochar( int $character )
int ncurses_end( void )
int ncurses_getch( void )
int ncurses_halfdelay( int $tenth )
int ncurses_has_key( int $keycode )
int ncurses_hide_panel( resource $panel )
int ncurses_hline( int $charattr , int $n )
int ncurses_init_color( int $color , int $r , int $g , int $b )
int ncurses_init_pair( int $pair , int $fg , int $bg )
int ncurses_insch( int $character )
int ncurses_insdelln( int $count )
int ncurses_insertln( void )
int ncurses_insstr( string $text )
int ncurses_instr( string &$buffer )
int ncurses_keyok( int $keycode , bool $enable )
int ncurses_keypad( resource $window , bool $bf )
int ncurses_meta( resource $window , bool $8bit )
int ncurses_mouseinterval( int $milliseconds )
int ncurses_mousemask( int $newmask , int &$oldmask )
int ncurses_move( int $y , int $x )
int ncurses_move_panel( resource $panel , int $startx , int $starty )
int ncurses_mvaddch( int $y , int $x , int $c )
int ncurses_mvaddchnstr( int $y , int $x , string $s , int $n )
int ncurses_mvaddchstr( int $y , int $x , string $s )
int ncurses_mvaddnstr( int $y , int $x , string $s , int $n )
int ncurses_mvaddstr( int $y , int $x , string $s )
int ncurses_mvcur( int $old_y , int $old_x , int $new_y , int $new_x )
int ncurses_mvdelch( int $y , int $x )
int ncurses_mvgetch( int $y , int $x )
int ncurses_mvhline( int $y , int $x , int $attrchar , int $n )
int ncurses_mvinch( int $y , int $x )
int ncurses_mvvline( int $y , int $x , int $attrchar , int $n )
int ncurses_mvwaddstr( resource $window , int $y , int $x , string $text )
int ncurses_napms( int $milliseconds )
int ncurses_pair_content( int $pair , int &$f , int &$b )
int ncurses_pnoutrefresh( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )
int ncurses_prefresh( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )
int ncurses_putp( string $text )
int ncurses_refresh( int $ch )
int ncurses_replace_panel( resource $panel , resource $window )
int ncurses_reset_prog_mode( void )
int ncurses_reset_shell_mode( void )
int ncurses_scr_dump( string $filename )
int ncurses_scr_init( string $filename )
int ncurses_scr_restore( string $filename )
int ncurses_scr_set( string $filename )
int ncurses_scrl( int $count )
int ncurses_show_panel( resource $panel )
int ncurses_slk_attr( void )
int ncurses_slk_attroff( int $intarg )
int ncurses_slk_attron( int $intarg )
int ncurses_slk_attrset( int $intarg )
int ncurses_slk_color( int $intarg )
int ncurses_slk_refresh( void )
int ncurses_slk_restore( void )
int ncurses_slk_touch( void )
int ncurses_standend( void )
int ncurses_standout( void )
int ncurses_start_color( void )
int ncurses_top_panel( resource $panel )
int ncurses_typeahead( int $fd )
int ncurses_ungetch( int $keycode )
int ncurses_use_extended_names( bool $flag )
int ncurses_vidattr( int $intarg )
int ncurses_vline( int $charattr , int $n )
int ncurses_waddch( resource $window , int $ch )
int ncurses_waddstr( resource $window , string $str  [, int $n ])
int ncurses_wattroff( resource $window , int $attrs )
int ncurses_wattron( resource $window , int $attrs )
int ncurses_wattrset( resource $window , int $attrs )
int ncurses_wborder( resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )
int ncurses_wclear( resource $window )
int ncurses_wcolor_set( resource $window , int $color_pair )
int ncurses_werase( resource $window )
int ncurses_whline( resource $window , int $charattr , int $n )
int ncurses_wmove( resource $window , int $y , int $x )
int ncurses_wnoutrefresh( resource $window )
int ncurses_wrefresh( resource $window )
int ncurses_wstandend( resource $window )
int ncurses_wstandout( resource $window )
int ncurses_wvline( resource $window , int $charattr , int $n )
int newt_centered_window( int $width , int $height  [, string $title ])
int newt_finished( void )
int newt_init( void )
int newt_listbox_item_count( resource $listbox )
int newt_open_window( int $left , int $top , int $width , int $height  [, string $title ])
int newt_textbox_get_num_lines( resource $textbox )
int newt_win_choice( string $title , string $button1_text , string $button2_text , string $format  [, mixed $args  [, mixed $... ]])
int newt_win_entries( string $title , string $text , int $suggested_width , int $flex_down , int $flex_up , int $data_width , array &$items , string $button1  [, string $... ])
int newt_win_menu( string $title , string $text , int $suggestedWidth , int $flexDown , int $flexUp , int $maxListHeight , array $items , int &$listItem  [, string $button1  [, string $... ]])
int newt_win_ternary( string $title , string $button1_text , string $button2_text , string $button3_text , string $format  [, mixed $args  [, mixed $... ]])
int ob_get_level( void )
int oci_fetch_all( resource $statement , array &$output  [, int $skip = 0  [, int $maxrows = -1  [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]])
int oci_field_precision( resource $statement , mixed $field )
int oci_field_scale( resource $statement , mixed $field )
int oci_field_size( resource $statement , mixed $field )
int oci_field_type_raw( resource $statement , mixed $field )
int oci_num_fields( resource $statement )
int oci_num_rows( resource $statement )
int odbc_fetch_into( resource $result_id , array &$result_array  [, int $rownumber ])
int odbc_field_len( resource $result_id , int $field_number )
int odbc_field_num( resource $result_id , string $field_name )
int odbc_field_scale( resource $result_id , int $field_number )
int odbc_num_fields( resource $result_id )
int odbc_result_all( resource $result_id  [, string $format ])
int openal_buffer_get( resource $buffer , int $property )
int openssl_cipher_iv_length( string $method )
int openssl_seal( string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids  [, string $method = "RC4" ])
int openssl_verify( string $data , string $signature , mixed $pub_key_id  [, mixed $signature_alg = OPENSSL_ALGO_SHA1 ])
int openssl_x509_checkpurpose( mixed $x509cert , int $purpose  [, array $cainfo = array()  [, string $untrustedfile ]])
int pclose( resource $handle )
int pcntl_alarm( int $seconds )
int pcntl_get_last_error( void )
int pcntl_getpriority([ int $pid = getmypid()  [, int $process_identifier = PRIO_PROCESS ]])
int pcntl_sigtimedwait( array $set  [, array &$siginfo  [, int $seconds = 0  [, int $nanoseconds = 0 ]]])
int pcntl_sigwaitinfo( array $set  [, array &$siginfo ])
int pcntl_wait( int &$status  [, int $options = 0 ])
int pcntl_waitpid( int $pid , int &$status  [, int $options = 0 ])
int pcntl_wexitstatus( int $status )
int pcntl_wstopsig( int $status )
int pcntl_wtermsig( int $status )
int pg_affected_rows( resource $result )
int pg_connect_poll([ resource $connection ])
int pg_connection_status( resource $connection )
int pg_field_is_null( resource $result , int $row , mixed $field )
int pg_field_num( resource $result , string $field_name )
int pg_field_prtlen( resource $result , int $row_number , mixed $field_name_or_number )
int pg_field_size( resource $result , int $field_number )
int pg_field_type_oid( resource $result , int $field_number )
int pg_get_pid( resource $connection )
int pg_lo_create([ resource $connection  [, mixed $object_id ]])
int pg_lo_import([ resource $connection  ], string $pathname  [, mixed $object_id ])
int pg_lo_read_all( resource $large_object )
int pg_lo_tell( resource $large_object )
int pg_lo_write( resource $large_object , string $data  [, int $len ])
int pg_num_fields( resource $result )
int pg_num_rows( resource $result )
int pg_port([ resource $connection ])
int pg_set_client_encoding([ resource $connection  ], string $encoding )
int pg_set_error_verbosity([ resource $connection  ], int $verbosity )
int pg_transaction_status( resource $connection )
int posix_get_last_error( void )
int posix_getegid( void )
int posix_geteuid( void )
int posix_getgid( void )
int posix_getpgid( int $pid )
int posix_getpgrp( void )
int posix_getpid( void )
int posix_getppid( void )
int posix_getsid( int $pid )
int posix_getuid( void )
int posix_setsid( void )
int preg_last_error( void )
int print( string $arg )
int printf( string $format  [, mixed $args  [, mixed $... ]])
int proc_close( resource $process )
int ps_begin_pattern( resource $psdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )
int ps_begin_template( resource $psdoc , float $width , float $height )
int ps_findfont( resource $psdoc , string $fontname , string $encoding  [, bool $embed = false ])
int ps_makespotcolor( resource $psdoc , string $name  [, int $reserved = 0 ])
int ps_open_image( resource $psdoc , string $type , string $source , string $data , int $lenght , int $width , int $height , int $components , int $bpc , string $params )
int ps_open_image_file( resource $psdoc , string $type , string $filename  [, string $stringparam  [, int $intparam = 0 ]])
int ps_open_memory_image( resource $psdoc , int $gd )
int ps_shading( resource $psdoc , string $type , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )
int ps_shading_pattern( resource $psdoc , int $shadingid , string $optlist )
int ps_show_boxed( resource $psdoc , string $text , float $left , float $bottom , float $width , float $height , string $hmode  [, string $feature ])
int pspell_config_create( string $language  [, string $spelling  [, string $jargon  [, string $encoding ]]])
int pspell_new( string $language  [, string $spelling  [, string $jargon  [, string $encoding  [, int $mode = 0 ]]]])
int pspell_new_config( int $config )
int pspell_new_personal( string $personal , string $language  [, string $spelling  [, string $jargon  [, string $encoding  [, int $mode = 0 ]]]])
int px_insert_record( resource $pxdoc , array $data )
int px_numfields( resource $pxdoc )
int px_numrecords( resource $pxdoc )
int radius_cvt_int( string $data )
int radius_send_request( resource $radius_handle )
int random_int( int $min , int $max )
int readgzfile( string $filename  [, int $use_include_path = 0 ])
int rrd_first( string $file  [, int $raaindex = 0 ])
int rrd_last( string $filename )
int session_cache_expire([ string $new_cache_expire ])
int session_status( void )
int shmop_open( int $key , string $flags , int $mode , int $size )
int shmop_size( int $shmid)
int shmop_write( int $shmid , string $data , int $offset )
int sleep( int $seconds )
int snmp_get_valueretrieval( void )
int socket_cmsg_space( int $level , int $type )
int socket_last_error([ resource $socket ])
int socket_recv( resource $socket , string &$buf , int $len , int $flags )
int socket_recvfrom( resource $socket , string &$buf , int $len , int $flags , string &$name  [, int &$port ])
int socket_recvmsg( resource $socket , string $message  [, int $flags ])
int socket_select( array &$read , array &$write , array &$except , int $tv_sec  [, int $tv_usec = 0 ])
int socket_send( resource $socket , string $buf , int $len , int $flags )
int socket_sendmsg( resource $socket , array $message , int $flags )
int socket_sendto( resource $socket , string $buf , int $len , int $flags , string $addr  [, int $port = 0 ])
int socket_write( resource $socket , string $buffer  [, int $length ])
int sqlite_changes( resource $dbhandle )
int sqlite_last_error( resource $dbhandle )
int sqlite_last_insert_rowid( resource $dbhandle )
int sqlite_num_fields( resource $result )
int sqlite_num_rows( resource $result )
int sqlsrv_rows_affected( resource $stmt )
int ssdeep_fuzzy_compare( string $signature1 , string $signature2 )
int stats_rand_gen_ibinomial( int $n , float $pp )
int stats_rand_gen_ibinomial_negative( int $n , float $p )
int stats_rand_gen_int( void )
int stats_rand_gen_ipoisson( float $mu )
int stats_rand_gen_iuniform( int $low , int $high )
int strcspn( string $subject , string $mask  [, int $start  [, int $length ]])
int stream_copy_to_stream( resource $source , resource $dest  [, int $maxlength = -1  [, int $offset = 0 ]])
int stream_select( array &$read , array &$write , array &$except , int $tv_sec  [, int $tv_usec = 0 ])
int stream_set_chunk_size( resource $fp , int $chunk_size )
int stream_set_read_buffer( resource $stream , int $buffer )
int stream_set_write_buffer( resource $stream , int $buffer )
int stream_socket_sendto( resource $socket , string $data  [, int $flags = 0  [, string $address ]])
int strnatcasecmp( string $str1 , string $str2 )
int strnatcmp( string $str1 , string $str2 )
int strncmp( string $str1 , string $str2 , int $len )
int strripos( string $haystack , string $needle  [, int $offset = 0 ])
int strrpos( string $haystack , string $needle  [, int $offset = 0 ])
int substr_compare( string $main_str , string $str , int $offset  [, int $length  [, bool $case_insensitivity = false ]])
int svn_fs_check_path( resource $fsroot , string $path )
int svn_fs_file_length( resource $fsroot , string $path )
int svn_fs_node_created_rev( resource $fsroot , string $path )
int svn_fs_youngest_rev( resource $fs )
int svn_repos_fs_commit_txn( resource $txn )
int svn_update( string $path  [, int $revno = SVN_REVISION_HEAD  [, bool $recurse = true ]])
int sybase_affected_rows([ resource $link_identifier ])
int sybase_num_fields( resource $result )
int sybase_num_rows( resource $result )
int tidy::getHtmlVer( void )
int tidy::getStatus( void )
int tidy_access_count( tidy $object )
int tidy_config_count( tidy $object )
int tidy_error_count( tidy $object )
int tidy_warning_count( tidy $object )
int udm_api_version( void )
int udm_crc32( resource $agent , string $str )
int udm_errno( resource $agent )
int udm_free_agent( resource $agent )
int udm_get_doc_count( resource $agent )
int udm_hash32( resource $agent , string $str )
int unixtojd([ int $timestamp = time() ])
int uopz_flags( string $class , string $function , int $flags )
int variant_cmp( mixed $left , mixed $right  [, int $lcid  [, int $flags ]])
int variant_date_to_timestamp( variant $variant )
int variant_get_type( variant $variant )
int vfprintf( resource $handle , string $format , array $args )
int vprintf( string $format , array $args )
int win32_continue_service( string $servicename  [, string $machine ])
int win32_get_last_control_message( void )
int win32_pause_service( string $servicename  [, string $machine ])
int win32_start_service( string $servicename  [, string $machine ])
int win32_stop_service( string $servicename  [, string $machine ])
int xdiff_file_bdiff_size( string $file )
int xdiff_string_bdiff_size( string $patch )
int xml_get_current_byte_index( resource $parser )
int xml_get_current_column_number( resource $parser )
int xml_get_current_line_number( resource $parser )
int xml_get_error_code( resource $parser )
int xmlrpc_server_add_introspection_data( resource $server , array $desc )
int xmlrpc_server_destroy( resource $server )
int yaz_errno( resource $id )
int yaz_hits( resource $id  [, array &$searchresult ])
int yp_errno( void )
int yp_order( string $domain , string $map )
int zend_thread_id( void )
int zip_entry_compressedsize( resource $zip_entry )
int zip_entry_filesize( resource $zip_entry )
integer Counter::getValue  ( void  )
integer counter_get  ( void  )
integer counter_get_value  ( resource $counter  )
integer radius_get_tagged_attr_tag( string $data )
integer trader_errno( void )
integer trader_get_compat( void )
integer trader_get_unstable_period( integer $functionId )
log_cmd_delete( array $server , array $writeOptions , array $deleteOptions , array $protocolOptions )
log_cmd_insert( array $server , array $document , array $writeOptions , array $protocolOptions )
log_cmd_update( array $server , array $writeOptions , array $updateOptions , array $protocolOptions )
log_getmore( array $server , array $info )
log_killcursor( array $server , array $info )
log_reply( array $server , array $messageHeaders , array $operationHeaders )
log_write_batch( array $server , array $writeOptions , array $batch , array $protocolOptions )
mixed Counter::getMeta  ( integer $attribute  )
mixed Memcache::pconnect( string $host  [, int $port  [, int $timeout ]])
mixed OCI-Collection::getElem( int $index )
mixed SCA::getService( string $target  [, string $binding    [, array $config   ]])
mixed SDO_DAS_Setting::getValue( void )
mixed SDO_Exception::getCause( void )
mixed SDO_Model_Property::getDefault( void )
mixed SDO_Model_ReflectionDataObject::export( SDO_Model_ReflectionDataObject $rdo  [, bool $return ])
mixed SWFMovie::add( object $instance )
mixed SWFMovie::addFont( SWFFont $font )
mixed SplQueue::dequeue( void )
mixed XMLWriter::flush([ bool $empty = true ])
mixed ZipArchive::open( string $filename  [, int $flags ])
mixed apc_compile_file( string $filename  [, bool $atomic = true ])
mixed apc_delete( string $key )
mixed apc_delete_file( mixed $keys )
mixed apc_exists( mixed $keys )
mixed apc_fetch( mixed $key  [, bool &$success ])
mixed apcu_delete( string $key )
mixed apcu_entry( string $key , callable $generator  [, int $ttl = 0 ])
mixed apcu_exists( mixed $keys )
mixed apcu_fetch( mixed $key  [, bool &$success ])
mixed array_rand( array $array  [, int $num = 1 ])
mixed array_reduce( array $array , callable $callback  [, mixed $initial = NULL ])
mixed array_search( mixed $needle , array $haystack  [, bool $strict = false ])
mixed array_shift( array &$array )
mixed assert_options( int $what  [, mixed $value ])
mixed bzcompress( string $source  [, int $blocksize = 4  [, int $workfactor = 0 ]])
mixed bzdecompress( string $source  [, int $small = 0 ])
mixed call_user_func( callable $callback  [, mixed $parameter  [, mixed $... ]])
mixed call_user_method( string $method_name , object &$obj  [, mixed $parameter  [, mixed $... ]])
mixed call_user_method_array( string $method_name , object &$obj , array $params )
mixed constant( string $name )
mixed counter_get_meta  ( resource $counter  , integer $attribute  )
mixed cubrid_fetch( resource $result   [, int $type = CUBRID_BOTH  ])
mixed cubrid_get( resource $conn_identifier  , string $oid   [, mixed $attr  ])
mixed curl_getinfo( resource $ch  [, int $opt = 0 ])
mixed current( array &$array )
mixed date_sunrise( int $timestamp  [, int $format = SUNFUNCS_RET_STRING  [, float $latitude = ini_get("date.default_latitude")  [, float $longitude = ini_get("date.default_longitude")  [, float $zenith = ini_get("date.sunrise_zenith")  [, float $gmt_offset = 0 ]]]]])
mixed date_sunset( int $timestamp  [, int $format = SUNFUNCS_RET_STRING  [, float $latitude = ini_get("date.default_latitude")  [, float $longitude = ini_get("date.default_longitude")  [, float $zenith = ini_get("date.sunset_zenith")  [, float $gmt_offset = 0  ]]]]])
mixed db2_autocommit( resource $connection  [, bool $value ])
mixed db2_result( resource $stmt , mixed $column )
mixed dba_key_split( mixed $key )
mixed dbplus_close( resource $relation )
mixed dbplus_rcrtexact( string $name , resource $relation  [, bool $overwrite ])
mixed dbplus_rcrtlike( string $name , resource $relation  [, int $overwrite ])
mixed dbplus_rkeys( resource $relation , mixed $domlist )
mixed dbplus_rsecindex( resource $relation , mixed $domlist , int $type )
mixed dbx_fetch_row( object $result_identifier )
mixed dbx_query( object $link_identifier , string $sql_statement  [, int $flags ])
mixed dio_fcntl( resource $fd , int $cmd  [, mixed $args ])
mixed eio_get_event_stream( void )
mixed enchant_broker_list_dicts( resource $broker )
mixed enchant_dict_describe( resource $dict )
mixed end( array &$array )
mixed fbsql_result( resource $result  [, int $row  [, mixed $field ]])
mixed fdf_get_opt( resource $fdf_document , string $fieldname  [, int $element = -1 ])
mixed fdf_get_value( resource $fdf_document , string $fieldname  [, int $which = -1 ])
mixed filter_input( int $type , string $variable_name  [, int $filter = FILTER_DEFAULT  [, mixed $options ]])
mixed filter_input_array( int $type  [, mixed $definition  [, bool $add_empty = true ]])
mixed filter_var_array( array $data  [, mixed $definition  [, bool $add_empty = true ]])
mixed floor ( float $value )
mixed forward_static_call( callable $function  [, mixed $parameter  [, mixed $... ]])
mixed forward_static_call_array( callable $function , array $parameters )
mixed fscanf( resource $handle , string $format  [, mixed &$... ])
mixed ftp_get_option( resource $ftp_stream , int $option )
mixed ftp_rawlist( resource $ftp_stream , string $directory  [, bool $recursive = false ])
mixed func_get_arg( int $arg_num )
mixed gettimeofday([ bool $return_float = false ])
mixed gmp_random_seed( mixed $seed )
mixed gupnp_service_action_get( resource $action , string $name , int $type )
mixed gupnp_service_info_get_introspection( resource $proxy  [, mixed $callback  [, mixed $arg ]])
mixed gupnp_service_proxy_action_get( resource $proxy , string $action , string $name , int $type )
mixed highlight_file( string $filename  [, bool $return = false ])
mixed highlight_string( string $str  [, bool $return = false ])
mixed ibase_backup( resource $service_handle , string $source_db , string $dest_file  [, int $options = 0  [, bool $verbose = false ]])
mixed ibase_blob_close( resource $blob_handle )
mixed ibase_restore( resource $service_handle , string $source_file , string $dest_db  [, int $options = 0  [, bool $verbose = false ]])
mixed iconv_get_encoding([ string $type = "all" ])
mixed imap_timeout( int $timeout_type  [, int $timeout = -1 ])
mixed ingres_prepare( resource $link , string $query )
mixed ingres_query( resource $link , string $query  [, array $params  [, string $types ]])
mixed ingres_unbuffered_query( resource $link , string $query  [, array $params  [, string $types ]])
mixed jddayofweek( int $julianday  [, int $mode = CAL_DOW_DAYNO ])
mixed key( array &$array )
mixed ldap_compare( resource $link_identifier , string $dn , string $attribute , string $value )
mixed max( array $values )
mixed maxdb_fetch_array( resource $result  [, int $resulttype ])
mixed maxdb_fetch_field( resource $result )
mixed maxdb_fetch_field_direct( resource $result , int $fieldnr )
mixed maxdb_fetch_fields( resource $result )
mixed maxdb_fetch_row( resource $result )
mixed maxdb_insert_id( resource $link )
mixed maxdb_query( resource $link , string $query  [, int $resultmode ])
mixed mb_detect_order([ mixed $encoding_list = mb_detect_order() ])
mixed mb_get_info([ string $type = "all" ])
mixed mb_http_input([ string $type = "" ])
mixed mb_language([ string $language = mb_language() ])
mixed mb_regex_encoding([ string $encoding = mb_regex_encoding() ])
mixed min ( array $values )
mixed mssql_execute( resource $stmt  [, bool $skip_results = false ])
mixed mssql_query( string $query  [, resource $link_identifier  [, int $batch_size = 0 ]])
mixed mysql_query( string $query  [, resource $link_identifier = NULL ])
mixed mysqli::query( string $query  [, int $resultmode = MYSQLI_STORE_RESULT ])
mixed mysqli_insert_id( mysqli $link )
mixed mysqli_result::fetch_all([ int $resulttype = MYSQLI_NUM ])
mixed mysqli_result::fetch_array([ int $resulttype = MYSQLI_BOTH ])
mixed mysqli_result::fetch_row( void )
mixed mysqli_stmt::prepare( string $query )
mixed mysqli_stmt_insert_id( mysqli_stmt $stmt )
mixed mysqlnd_qc_set_is_select( string $callback )
mixed newt_checkbox_tree_get_current( resource $checkboxtree )
mixed newt_listitem_get_data( resource $item )
mixed next( array &$array )
mixed oci_field_type( resource $statement , mixed $field )
mixed oci_result( resource $statement , mixed $field )
mixed odbc_autocommit( resource $connection_id  [, bool $OnOff = false ])
mixed odbc_result( resource $result_id , mixed $field )
mixed openal_listener_get( int $property )
mixed openal_source_get( resource $source , int $property )
mixed openssl_csr_new( array $dn , resource &$privkey  [, array $configargs  [, array $extraattribs ]])
mixed openssl_pkcs7_verify( string $filename , int $flags  [, string $outfilename  [, array $cainfo  [, string $extracerts  [, string $content ]]]])
mixed parse_url( string $url  [, int $component = -1 ])
mixed pg_delete( resource $connection , string $table_name , array $assoc_array  [, int $options = PGSQL_DML_EXEC ])
mixed pg_field_table( resource $result , int $field_number  [, bool $oid_only = false ])
mixed pg_flush( resource $connection )
mixed pg_insert( resource $connection , string $table_name , array $assoc_array  [, int $options = PGSQL_DML_EXEC ])
mixed pg_result_status( resource $result  [, int $type = PGSQL_STATUS_LONG ])
mixed pg_select( resource $connection , string $table_name , array $assoc_array  [, int $options = PGSQL_DML_EXEC ])
mixed pg_update( resource $connection , string $table_name , array $data , array $condition  [, int $options = PGSQL_DML_EXEC ])
mixed preg_filter( mixed $pattern , mixed $replacement , mixed $subject  [, int $limit = -1  [, int &$count ]])
mixed preg_replace_callback( mixed $pattern , callable $callback , mixed $subject  [, int $limit = -1  [, int &$count ]])
mixed preg_replace_callback_array( array $patterns_and_callbacks , mixed $subject  [, int $limit = -1  [, int &$count ]])
mixed prev( array &$array )
mixed radius_get_attr( resource $radius_handle )
mixed readline_info([ string $varname  [, string $newvalue ]])
mixed reset( array &$array )
mixed rpm_get_tag( resource $rpmr , int $tagnum )
mixed runkit_sandbox_output_handler( object $sandbox  [, mixed $callback ])
mixed shm_get_var( resource $shm_identifier , int $variable_key )
mixed socket_get_option( resource $socket , int $level , int $optname )
mixed sqlite_column( resource $result , mixed $index_or_name  [, bool $decode_binary = true ])
mixed sqlsrv_errors([ int $errorsOrWarnings ])
mixed sqlsrv_fetch( resource $stmt  [, int $row  [, int $offset ]])
mixed sqlsrv_fetch_object( resource $stmt  [, string $className  [, array $ctorParams  [, int $row  [, int $offset ]]]])
mixed sqlsrv_field_metadata( resource $stmt )
mixed sqlsrv_get_config( string $setting )
mixed sqlsrv_get_field( resource $stmt , int $fieldIndex  [, int $getAsType ])
mixed sqlsrv_next_result  ( resource $stmt )
mixed sqlsrv_num_fields( resource $stmt )
mixed sqlsrv_num_rows( resource $stmt )
mixed sqlsrv_prepare( resource $conn , string $sql  [, array $params  [, array $options ]])
mixed sscanf( string $str , string $format  [, mixed &$... ])
mixed ssh2_auth_none( resource $session , string $username )
mixed str_ireplace( mixed $search , mixed $replace , mixed $subject  [, int &$count ])
mixed stream_socket_enable_crypto( resource $stream , bool $enable  [, int $crypto_type  [, resource $session_stream ]])
mixed stripos( string $haystack , string $needle  [, int $offset = 0 ])
mixed substr_replace( mixed $string , mixed $replacement , mixed $start  [, mixed $length ])
mixed sybase_query( string $query  [, resource $link_identifier ])
mixed tidy::getOpt( string $option )
mixed time_nanosleep( int $seconds , int $nanoseconds )
mixed unserialize( string $str  [, array $options ])
mixed var_export( mixed $expression  [, bool $return = false ])
mixed variant_abs( mixed $val )
mixed variant_add( mixed $left , mixed $right )
mixed variant_and( mixed $left , mixed $right )
mixed variant_cat( mixed $left , mixed $right )
mixed variant_div( mixed $left , mixed $right )
mixed variant_eqv( mixed $left , mixed $right )
mixed variant_fix( mixed $variant )
mixed variant_idiv( mixed $left , mixed $right )
mixed variant_imp( mixed $left , mixed $right )
mixed variant_int( mixed $variant )
mixed variant_mod( mixed $left , mixed $right )
mixed variant_mul( mixed $left , mixed $right )
mixed variant_neg( mixed $variant )
mixed variant_not( mixed $variant )
mixed variant_or( mixed $left , mixed $right )
mixed variant_pow( mixed $left , mixed $right )
mixed variant_round( mixed $variant , int $decimals )
mixed variant_sub( mixed $left , mixed $right )
mixed variant_xor( mixed $left , mixed $right )
mixed version_compare( string $version1 , string $version2  [, string $operator ])
mixed win32_create_service( array $details  [, string $machine ])
mixed win32_delete_service( string $servicename  [, string $machine ])
mixed win32_query_service_status( string $servicename  [, string $machine ])
mixed win32_start_service_ctrl_dispatcher( string $name )
mixed wincache_ucache_dec( string $key  [, int $dec_by = 1  [, bool &$success ]])
mixed wincache_ucache_get( mixed $key  [, bool &$success ])
mixed wincache_ucache_inc( string $key  [, int $inc_by = 1  [, bool &$success ]])
mixed xdiff_file_merge3( string $old_file , string $new_file1 , string $new_file2 , string $dest )
mixed xdiff_file_patch( string $file , string $patch , string $dest  [, int $flags = DIFF_PATCH_NORMAL ])
mixed xdiff_string_merge3( string $old_data , string $new_data1 , string $new_data2  [, string &$error ])
mixed xml_parser_get_option( resource $parser , int $option )
mixed xmlrpc_decode( string $xml  [, string $encoding = "iso-8859-1" ])
mixed xmlrpc_decode_request( string $xml , string &$method  [, string $encoding ])
mixed yaml_parse( string $input  [, int $pos = 0  [, int &$ndocs  [, array $callbacks ]]])
mixed yaml_parse_file( string $filename  [, int $pos = 0  [, int &$ndocs  [, array $callbacks ]]])
mixed yaml_parse_url( string $url  [, int $pos = 0  [, int &$ndocs  [, array $callbacks ]]])
mixed yaz_connect( string $zurl  [, mixed $options ])
mixed yaz_wait([ array &$options ])
mysqli mysqli::init( void )
mysqli_result mysqli::store_result([ int $option ])
mysqli_result mysqli::use_result( void )
mysqli_result mysqli_stmt::get_result( void )
mysqli_result mysqli_stmt::result_metadata( void )
mysqli_stmt mysqli::prepare( string $query )
mysqli_stmt mysqli::stmt_init( void )
mysqli_warning mysqli::get_warnings( void )
number abs ( mixed $number )
number array_product( array $array )
number array_sum( array $array )
number bindec ( string $binary_string )
number octdec ( string $octal_string )
number pow ( number $base , number $exp )
number stats_harmonic_mean( array $a )
object HaruDoc::addPage( void )
object HaruDoc::createOutline( string $title  [, object $parent_outline  [, object $encoder ]])
object HaruDoc::getCurrentEncoder( void )
object HaruDoc::getCurrentPage( void )
object HaruDoc::getEncoder( string $encoding )
object HaruDoc::getFont( string $fontname  [, string $encoding ])
object HaruDoc::insertPage( object $page )
object HaruDoc::loadJPEG( string $filename )
object HaruDoc::loadPNG( string $filename  [, bool $deferred = false ])
object HaruDoc::loadRaw( string $filename , int $width , int $height , int $color_space )
object HaruPage::createDestination( void )
object HaruPage::createLinkAnnotation( array $rectangle , object $destination )
object HaruPage::createTextAnnotation( array $rectangle , string $text  [, object $encoder ])
object HaruPage::createURLAnnotation( array $rectangle , string $url )
object HaruPage::getCurrentFont( void )
object PharData::compress( int $compression  [, string $extension ])
object PharData::decompress([ string $extension ])
object Swish::prepare([ string $query ])
object Swish::query( string $query )
object SwishResults::nextResult( void )
object SwishSearch::execute([ string $query ])
object apache_lookup_uri( string $filename )
object cubrid_fetch_field( resource $result  [, int $field_offset = 0 ])
object cubrid_fetch_object( resource $result  [, string $class_name  [, array $params  [, int $type ]]])
object db2_client_info( resource $connection )
object db2_fetch_object( resource $stmt  [, int $row_number = -1 ])
object db2_server_info( resource $connection )
object dbx_connect( mixed $module , string $host , string $database , string $username , string $password  [, int $persistent ])
object fbsql_fetch_field( resource $result  [, int $field_offset ])
object fbsql_fetch_object( resource $result )
object ibase_fetch_object( resource $result_id  [, int $fetch_flag = 0 ])
object imap_bodystruct( resource $imap_stream , int $msg_number , string $section )
object imap_check( resource $imap_stream )
object imap_headerinfo( resource $imap_stream , int $msg_number  [, int $fromlength = 0  [, int $subjectlength = 0  [, string $defaulthost = NULL ]]])
object imap_mailboxmsginfo( resource $imap_stream )
object imap_rfc822_parse_headers( string $headers  [, string $defaulthost = "UNKNOWN" ])
object imap_status( resource $imap_stream , string $mailbox , int $options )
object ingres_fetch_object( resource $result  [, int $result_type ])
object maxdb_fetch_object( object $result )
object msql_fetch_field( resource $result  [, int $field_offset = 0 ])
object msql_fetch_object( resource $result  )
object mssql_fetch_field( resource $result  [, int $field_offset = -1 ])
object mssql_fetch_object( resource $result )
object mysql_fetch_field( resource $result  [, int $field_offset = 0 ])
object mysql_fetch_object( resource $result  [, string $class_name  [, array $params ]])
object mysqli::get_charset( void )
object mysqli_result::fetch_field( void )
object mysqli_result::fetch_object([ string $class_name = "stdClass"  [, array $params ]])
object mysqli_stmt::get_warnings( mysqli_stmt $stmt )
object oci_fetch_object( resource $statement )
object odbc_fetch_object( resource $result  [, int $rownumber ])
object pg_fetch_object( resource $result  [, int $row  [, int $result_type = PGSQL_ASSOC ]])
object stream_bucket_make_writeable( resource $brigade )
object stream_bucket_new( resource $stream , string $buffer )
object sybase_fetch_field( resource $result  [, int $field_offset = -1 ])
object sybase_fetch_object( resource $result  [, mixed $object ])
private Closure::__construct( void )
private IntlBreakIterator::__construct( void )
private IntlCalendar::__construct( void )
private Yaf_Loader::__construct( void )
private Yaf_Registry::__construct( void )
private Yaf_Session::__construct( void )
private void Yaf_Application::__clone( void )
private void Yaf_Application::__sleep( void )
private void Yaf_Application::__wakeup( void )
private void Yaf_Dispatcher::__clone( void )
private void Yaf_Dispatcher::__sleep( void )
private void Yaf_Dispatcher::__wakeup( void )
private void Yaf_Loader::__clone( void )
private void Yaf_Loader::__sleep( void )
private void Yaf_Loader::__wakeup( void )
private void Yaf_Registry::__clone( void )
private void Yaf_Request_Http::__clone( void )
private void Yaf_Request_Simple::__clone( void )
private void Yaf_Response_Abstract::__clone( void )
private void Yaf_Response_Abstract::__toString( void )
private void Yaf_Session::__clone( void )
private void Yaf_Session::__sleep( void )
private void Yaf_Session::__wakeup( void )
privateZMQ::__construct( void )
protected bool Mongo::connectUtil( void )
protected bool Yaf_Controller_Abstract::display( string $tpl  [, array $parameters ])
protected int SplMaxHeap::compare( mixed $value1 , mixed $value2 )
protected int SplMinHeap::compare( mixed $value1 , mixed $value2 )
protected string Yaf_Controller_Abstract::render( string $tpl  [, array $parameters ])
protected void MongoCursor::doQuery( void )
protected void Yaf_Response_Abstract::setAllHeaders( void )
public APCIterator::__construct( string $cache  [, mixed $search = null  [, int $format = APC_ITER_ALL  [, int $chunk_size = 100  [, int $list = APC_LIST_ACTIVE ]]]])
public APCUIterator::__construct([ mixed $search = null  [, int $format = APC_ITER_ALL  [, int $chunk_size = 100  [, int $list = APC_LIST_ACTIVE ]]]])
public ArrayIterator ArrayObject::getIterator( void )
public ArrayIterator::__construct([ mixed $array = array()  [, int $flags = 0 ]])
public CURLFile::__construct( string $filename  [, string $mimetype  [, string $postname ]])
public CachingIterator::__construct( Iterator $iterator  [, int $flags = self::CALL_TOSTRING ])
public CairoContext::__construct( CairoSurface $surface )
public CairoFontFace::__construct( void )
public CairoFontOptions::__construct( void )
public CairoImageSurface::__construct( int $format , int $width , int $height )
public CairoLinearGradient::__construct( float $x0 , float $y0 , float $x1 , float $y1 )
public CairoMatrix CairoScaledFont::getCtm( void )
public CairoMatrix::__construct([ float $xx = 1.0  [, float $yx = 0.0  [, float $xy = 0.0  [, float $yy = 1.0  [, float $x0 = 0.0  [, float $y0 = 0.0 ]]]]]])
public CairoPath CairoContext::copyPath( void )
public CairoPath CairoContext::copyPathFlat( void )
public CairoPattern::__construct( void )
public CairoPdfSurface::__construct( string $file , float $width , float $height )
public CairoPsSurface::__construct( string $file , float $width , float $height )
public CairoRadialGradient::__construct( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )
public CairoScaledFont::__construct( CairoFontFace $font_face , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $options )
public CairoSolidPattern::__construct( float $red , float $green , float $blue  [, float $alpha = 0 ])
public CairoSurface::__construct( void )
public CairoSurfacePattern::__construct( CairoSurface $surface )
public CairoSvgSurface::__construct( string $file , float $width , float $height )
public Closure ReflectionFunction::getClosure( void )
public Closure ReflectionMethod::getClosure( object $object )
public DOMAttr DOMDocument::createAttribute( string $name )
public DOMAttr DOMDocument::createAttributeNS( string $namespaceURI , string $qualifiedName )
public DOMAttr DOMElement::getAttributeNode( string $name )
public DOMAttr DOMElement::getAttributeNodeNS( string $namespaceURI , string $localName )
public DOMAttr DOMElement::setAttribute( string $name , string $value )
public DOMAttr DOMElement::setAttributeNode( DOMAttr $attr )
public DOMAttr DOMElement::setAttributeNodeNS( DOMAttr $attr )
public DOMAttr::__construct( string $name  [, string $value ])
public DOMCDATASection DOMDocument::createCDATASection( string $data )
public DOMComment DOMDocument::createComment( string $data )
public DOMComment::__construct([ string $value ])
public DOMDocument DOMImplementation::createDocument([ string $namespaceURI = NULL  [, string $qualifiedName = NULL  [, DOMDocumentType $doctype = NULL ]]])
public DOMDocument XMLDiff\DOM::diff( DOMDocument $from , DOMDocument $to )
public DOMDocument XMLDiff\DOM::merge( DOMDocument $src , DOMDocument $diff )
public DOMDocument::__construct([ string $version  [, string $encoding ]])
public DOMDocumentFragment DOMDocument::createDocumentFragment( void )
public DOMDocumentType DOMImplementation::createDocumentType([ string $qualifiedName = NULL  [, string $publicId = NULL  [, string $systemId = NULL ]]])
public DOMElement DOMDocument::createElement( string $name  [, string $value ])
public DOMElement DOMDocument::createElementNS( string $namespaceURI , string $qualifiedName  [, string $value ])
public DOMElement DOMDocument::getElementById( string $elementId )
public DOMElement::__construct( string $name  [, string $value  [, string $namespaceURI ]])
public DOMEntityReference::__construct( string $name )
public DOMNode DOMDocument::importNode( DOMNode $importedNode  [, bool $deep ])
public DOMNode DOMNode::appendChild( DOMNode $newnode )
public DOMNode DOMNode::cloneNode([ bool $deep ])
public DOMNode DOMNode::insertBefore( DOMNode $newnode  [, DOMNode $refnode ])
public DOMNode DOMNode::removeChild( DOMNode $oldnode )
public DOMNode XMLReader::expand([ DOMNode $basenode ])
public DOMNodeList DOMDocument::getElementsByTagName( string $name )
public DOMNodeList DOMElement::getElementsByTagName( string $name )
public DOMNodeList DOMElement::getElementsByTagNameNS( string $namespaceURI , string $localName )
public DOMProcessingInstruction DOMDocument::createProcessingInstruction( string $target  [, string $data ])
public DOMProcessingInstruction::__construct( string $name  [, string $value ])
public DOMText DOMDocument::createTextNode( string $content )
public DOMText DOMText::splitText( int $offset )
public DOMXPath::__construct( DOMDocument $doc )
public DateTime DateTime::add( DateInterval $interval )
public DateTime DateTime::modify( string $modify )
public DateTime DateTime::setDate( int $year , int $month , int $day )
public DateTime DateTime::setISODate( int $year , int $week  [, int $day = 1 ])
public DateTime DateTime::setTime( int $hour , int $minute  [, int $second = 0 ])
public DateTime DateTime::setTimestamp( int $unixtimestamp )
public DateTime DateTime::setTimezone( DateTimeZone $timezone )
public DateTime DateTime::sub( DateInterval $interval )
public DateTime MongoDate::toDateTime( void )
public DateTime::__wakeup( void )
public DateTimeImmutable DateTimeImmutable::add( DateInterval $interval )
public DateTimeImmutable DateTimeImmutable::modify( string $modify )
public DateTimeImmutable DateTimeImmutable::setDate( int $year , int $month , int $day )
public DateTimeImmutable DateTimeImmutable::setISODate( int $year , int $week  [, int $day = 1 ])
public DateTimeImmutable DateTimeImmutable::setTime( int $hour , int $minute  [, int $second = 0 ])
public DateTimeImmutable DateTimeImmutable::setTimestamp( int $unixtimestamp )
public DateTimeImmutable DateTimeImmutable::setTimezone( DateTimeZone $timezone )
public DateTimeImmutable DateTimeImmutable::sub( DateInterval $interval )
public DateTimeZone DateTime::getTimezone( void )
public DateTimeZone IntlTimeZone::toDateTimeZone( void )
public DirectoryIterator DirectoryIterator::current( void )
public EvCheck::__construct( callable $callback  [, mixed $data  [, int $priority  ]])
public EvChild::__construct( int $pid , bool $trace , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
public EvEmbed::__construct( object $other  [, callable $callback  [, mixed $data  [, int $priority  ]]])
public EvFork::__construct( callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
public EvIdle::__construct( callable $callback  [, mixed $data  [, int $priority  ]])
public EvIo::__construct( mixed $fd , int $events , callable $callback  [, mixed $data  [, int $priority  ]])
public EvLoop EvWatcher::getLoop( void )
public EvLoop::__construct([ int $flags  [, mixed $data = NULL  [, double $io_interval = 0.0  [, double $timeout_interval = 0.0  ]]]])
public EvPeriodic::__construct( double $offset , string $interval , callable $reschedule_cb , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
public EvPrepare::__construct( string $callback  [, string $data  [, string $priority  ]])
public EvSignal::__construct( int $signum , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
public EvStat::__construct( string $path , double $interval , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
public EvTimer::__construct( double $after , double $repeat , callable $callback  [, mixed $data = NULL  [, int $priority = 0  ]])
public Event::__construct( EventBase $base , mixed $fd , int $what , callable $cb  [, mixed $arg = NULL  ])
public EventBase EventHttpConnection::getBase( void )
public EventBase::__construct([ EventConfig $cfg  ])
public EventBuffer EventBufferEvent::getInput( void )
public EventBuffer EventBufferEvent::getOutput( void )
public EventBuffer EventHttpRequest::getInputBuffer( void )
public EventBuffer EventHttpRequest::getOutputBuffer( void )
public EventBuffer::__construct( void )
public EventBufferEvent EventHttpRequest::closeConnection( void )
public EventBufferEvent::__construct( EventBase $base  [, mixed $socket = NULL  [, int $options = 0  [, callable $readcb = NULL  [, callable $writecb = NULL  [, callable $eventcb = NULL  ]]]]])
public EventConfig::__construct( void )
public EventHttp::__construct( EventBase $base  [, EventSslContext $ctx = NULL  ])
public EventHttpConnection EventHttpRequest::closeConnection( void )
public EventHttpConnection::__construct( EventBase $base , EventDnsBase $dns_base , string $address , int $port  [, EventSslContext $ctx = NULL  ])
public EventHttpRequest::__construct( callable $callback  [, mixed $data = NULL  ])
public EventSslContext::__construct( string $method , string $options )
public FANNConnection::__construct( int $from_neuron , int $to_neuron , float $weight )
public FilesystemIterator::__construct( string $path  [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS ])
public FilterIterator::__construct( Iterator $iterator )
public GearmanClient GearmanClient::clone( void )
public GearmanClient::__construct( void )
public GearmanJob::__construct( void )
public GearmanTask GearmanClient::addTask( string $function_name , string $workload  [, mixed &$context  [, string $unique ]])
public GearmanTask GearmanClient::addTaskBackground( string $function_name , string $workload  [, mixed &$context  [, string $unique ]])
public GearmanTask GearmanClient::addTaskHigh( string $function_name , string $workload  [, mixed &$context  [, string $unique ]])
public GearmanTask GearmanClient::addTaskHighBackground( string $function_name , string $workload  [, mixed &$context  [, string $unique ]])
public GearmanTask GearmanClient::addTaskLow( string $function_name , string $workload  [, mixed &$context  [, string $unique ]])
public GearmanTask GearmanClient::addTaskLowBackground( string $function_name , string $workload  [, mixed &$context  [, string $unique ]])
public GearmanTask GearmanClient::addTaskStatus( string $job_handle  [, string &$context ])
public GearmanTask GearmanTask::create( void )
public GearmanTask::__construct( void )
public GearmanWorker::__construct( void )
public Gender\Gender::__construct([ string $dsn ])
public Generator ReflectionGenerator::getExecutingGenerator( void )
public Gmagick Gmagick::addimage( Gmagick $Gmagick )
public Gmagick Gmagick::addnoiseimage( int $NOISE )
public Gmagick Gmagick::annotateimage( GmagickDraw $GmagickDraw , float $x , float $y , float $angle , string $text )
public Gmagick Gmagick::blurimage( float $radius , float $sigma  [, int $channel ])
public Gmagick Gmagick::borderimage( GmagickPixel $color , int $width , int $height )
public Gmagick Gmagick::charcoalimage( float $radius , float $sigma )
public Gmagick Gmagick::chopimage( int $width , int $height , int $x , int $y )
public Gmagick Gmagick::clear( void )
public Gmagick Gmagick::commentimage( string $comment )
public Gmagick Gmagick::compositeimage( Gmagick $source , int $COMPOSE , int $x , int $y )
public Gmagick Gmagick::cropimage ( int $width  , int $height  , int $x , int $y )
public Gmagick Gmagick::cropthumbnailimage( int $width , int $height )
public Gmagick Gmagick::current( void )
public Gmagick Gmagick::cyclecolormapimage( int $displace )
public Gmagick Gmagick::despeckleimage( void )
public Gmagick Gmagick::drawimage( GmagickDraw $GmagickDraw )
public Gmagick Gmagick::edgeimage( float $radius )
public Gmagick Gmagick::embossimage( float $radius , float $sigma )
public Gmagick Gmagick::enhanceimage( void )
public Gmagick Gmagick::equalizeimage( void )
public Gmagick Gmagick::flipimage( void )
public Gmagick Gmagick::flopimage( void )
public Gmagick Gmagick::frameimage( GmagickPixel $color , int $width , int $height , int $inner_bevel , int $outer_bevel )
public Gmagick Gmagick::gammaimage( float $gamma )
public Gmagick Gmagick::mapimage( gmagick $gmagick , bool $dither )
public Gmagick Gmagick::minifyimage( void )
public Gmagick Gmagick::modulateimage( float $brightness , float $saturation , float $hue )
public Gmagick Gmagick::motionblurimage( float $radius , float $sigma , float $angle )
public Gmagick Gmagick::newimage( int $width , int $height , string $background  [, string $format   ])
public Gmagick Gmagick::normalizeimage([ int $channel ])
public Gmagick Gmagick::oilpaintimage ( float $radius )
public Gmagick Gmagick::profileimage( string $name , string $profile )
public Gmagick Gmagick::quantizeimage( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )
public Gmagick Gmagick::quantizeimages( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )
public Gmagick Gmagick::radialblurimage( float $angle  [, int $channel = Gmagick::CHANNEL_DEFAULT ])
public Gmagick Gmagick::raiseimage( int $width , int $height , int $x , int $y , bool $raise )
public Gmagick Gmagick::read( string $filename )
public Gmagick Gmagick::readimage( string $filename )
public Gmagick Gmagick::readimageblob( string $imageContents  [, string $filename ])
public Gmagick Gmagick::readimagefile( resource $fp  [, string $filename ])
public Gmagick Gmagick::reducenoiseimage( float $radius )
public Gmagick Gmagick::removeimage( void )
public Gmagick Gmagick::resampleimage( float $xResolution , float $yResolution , int $filter , float $blur )
public Gmagick Gmagick::resizeimage( int $width , int $height , int $filter , float $blur  [, bool $fit = false ])
public Gmagick Gmagick::rollimage( int $x , int $y )
public Gmagick Gmagick::rotateimage( mixed $color , float $degrees )
public Gmagick Gmagick::scaleimage( int $width , int $height  [, bool $fit = false ])
public Gmagick Gmagick::separateimagechannel( int $channel )
public Gmagick Gmagick::setfilename( string $filename )
public Gmagick Gmagick::setimagebackgroundcolor( GmagickPixel $color )
public Gmagick Gmagick::setimageblueprimary( float $x , float $y )
public Gmagick Gmagick::setimagebordercolor( GmagickPixel $color )
public Gmagick Gmagick::setimagechanneldepth( int $channel , int $depth )
public Gmagick Gmagick::setimagecolorspace( int $colorspace )
public Gmagick Gmagick::setimagecompose( int $composite )
public Gmagick Gmagick::setimagedelay( int $delay )
public Gmagick Gmagick::setimagedepth( int $depth )
public Gmagick Gmagick::setimagedispose( int $disposeType )
public Gmagick Gmagick::setimagefilename( string $filename )
public Gmagick Gmagick::setimageformat( string $imageFormat )
public Gmagick Gmagick::setimagegamma( float $gamma )
public Gmagick Gmagick::setimagegreenprimary( float $x , float $y )
public Gmagick Gmagick::setimageindex( int $index )
public Gmagick Gmagick::setimageinterlacescheme( int $interlace )
public Gmagick Gmagick::setimageiterations( int $iterations )
public Gmagick Gmagick::setimageprofile( string $name , string $profile )
public Gmagick Gmagick::setimageredprimary( float $x , float $y )
public Gmagick Gmagick::setimagerenderingintent( int $rendering_intent )
public Gmagick Gmagick::setimageresolution( float $xResolution , float $yResolution )
public Gmagick Gmagick::setimagescene( int $scene )
public Gmagick Gmagick::setimagetype( int $imgType )
public Gmagick Gmagick::setimageunits( int $resolution )
public Gmagick Gmagick::setimagewhitepoint( float $x , float $y )
public Gmagick Gmagick::setsamplingfactors( array $factors )
public Gmagick Gmagick::setsize( int $columns , int $rows )
public Gmagick Gmagick::shearimage( mixed $color , float $xShear , float $yShear )
public Gmagick Gmagick::solarizeimage( int $threshold )
public Gmagick Gmagick::spreadimage( float $radius )
public Gmagick Gmagick::stripimage( void )
public Gmagick Gmagick::swirlimage( float $degrees )
public Gmagick Gmagick::thumbnailimage( int $width , int $height  [, bool $fit = false ])
public Gmagick Gmagick::trimimage( float $fuzz )
public Gmagick Gmagick::writeimage( string $filename  [, bool $all_frames = false ])
public Gmagick::__construct([ string $filename ])
public GmagickDraw GmagickDraw::annotate( float $x , float $y , string $text )
public GmagickDraw GmagickDraw::arc( float $sx , float $sy , float $ex , float $ey , float $sd , float $ed )
public GmagickDraw GmagickDraw::bezier( array $coordinate_array )
public GmagickDraw GmagickDraw::ellipse( float $ox , float $oy , float $rx , float $ry , float $start , float $end )
public GmagickDraw GmagickDraw::line( float $sx , float $sy , float $ex , float $ey )
public GmagickDraw GmagickDraw::point( float $x , float $y )
public GmagickDraw GmagickDraw::polygon( array $coordinates )
public GmagickDraw GmagickDraw::polyline( array $coordinate_array )
public GmagickDraw GmagickDraw::rotate( float $degrees )
public GmagickDraw GmagickDraw::roundrectangle( float $x1 , float $y1 , float $x2 , float $y2 , float $rx , float $ry )
public GmagickDraw GmagickDraw::scale( float $x , float $y )
public GmagickDraw GmagickDraw::setfillcolor( string $color )
public GmagickDraw GmagickDraw::setfillopacity( float $fill_opacity )
public GmagickDraw GmagickDraw::setfont( string $font )
public GmagickDraw GmagickDraw::setfontsize( float $pointsize )
public GmagickDraw GmagickDraw::setfontstyle( int $style )
public GmagickDraw GmagickDraw::setfontweight( int $weight )
public GmagickDraw GmagickDraw::setstrokecolor( GmagickPixel $color )
public GmagickDraw GmagickDraw::setstrokeopacity( float $stroke_opacity )
public GmagickDraw GmagickDraw::setstrokewidth( float $width )
public GmagickDraw GmagickDraw::settextdecoration( int $decoration )
public GmagickDraw GmagickDraw::settextencoding( string $encoding )
public GmagickPixel Gmagick::getimagebackgroundcolor( void )
public GmagickPixel Gmagick::getimagebordercolor( void )
public GmagickPixel Gmagick::getimagemattecolor( void )
public GmagickPixel GmagickPixel::setcolor( string $color )
public GmagickPixel GmagickPixel::setcolorvalue( int $color , float $value )
public GmagickPixel::__construct([ string $color ])
public Imagick Imagick::readImages( string $filenames )
public Imagick Imagick::smushImages( string $stack , string $offset )
public Imagick Imagick::subImageMatch( Imagick $Imagick  [, array &$offset  [, float &$similarity ]])
public InfiniteIterator::__construct( Iterator $iterator )
public IntlRuleBasedBreakIterator::__construct( string $rules  [, string $areCompiled ])
public Iterator AppendIterator::getInnerIterator( void )
public Iterator CachingIterator::getInnerIterator( void )
public Iterator FilterIterator::getInnerIterator( void )
public Iterator LimitIterator::getInnerIterator( void )
public Iterator OuterIterator::getInnerIterator( void )
public IteratorIterator::__construct( Traversable $iterator )
public Judy::__construct( int $judy_type )
public KTaglib_ID3v1_Tag KTaglib_MPEG_File::getID3v1Tag ([ bool $create = false ])
public KTaglib_ID3v2_Tag KTaglib_MPEG_File::getID3v2Tag  ([ bool $create = false  ])
public KTaglib_MPEG_File KTaglib_MPEG_File::getAudioProperties ( void )
public LimitIterator::__construct( Iterator $iterator  [, int $offset = 0  [, int $count = -1 ]])
public Lua::__construct( string $lua_script_file = NULL )
public MongoBinData::__construct( string $data  [, int $type = 0 ])
public MongoCode::__construct( string $code  [, array $scope = array() ])
public MongoCollection MongoClient::selectCollection( string $db , string $collection )
public MongoCollection MongoCollection::__get( string $name )
public MongoCollection MongoDB::__get( string $name )
public MongoCollection MongoDB::createCollection( string $name  [, array $options ])
public MongoCollection MongoDB::selectCollection( string $name )
public MongoCollection::__construct( MongoDB $db , string $name )
public MongoCommandCursor MongoCollection::aggregateCursor( array $command  [, array $options ])
public MongoCommandCursor MongoCommandCursor::batchSize( int $batchSize )
public MongoCommandCursor MongoCommandCursor::setReadPreference( string $read_preference  [, array $tags ])
public MongoCursor MongoCollection::find([ array $query = array()  [, array $fields = array() ]])
public MongoCursor MongoCursor::awaitData([ bool $wait = true ])
public MongoCursor MongoCursor::batchSize( int $batchSize )
public MongoCursor MongoCursor::fields( array $f )
public MongoCursor MongoCursor::immortal([ bool $liveForever = true ])
public MongoCursor MongoCursor::limit( int $num )
public MongoCursor MongoCursor::maxTimeMS( int $ms )
public MongoCursor MongoCursor::partial([ bool $okay = true ])
public MongoCursor MongoCursor::setFlag( int $flag  [, bool $set = true ])
public MongoCursor MongoCursor::setReadPreference( string $read_preference  [, array $tags ])
public MongoCursor MongoCursor::skip( int $num )
public MongoCursor MongoCursor::slaveOkay([ bool $okay = true ])
public MongoCursor MongoCursor::snapshot( void )
public MongoCursor MongoCursor::sort( array $fields )
public MongoCursor MongoCursor::tailable([ bool $tail = true ])
public MongoCursor MongoCursor::timeout( int $ms )
public MongoCursor::__construct( MongoClient $connection , string $ns  [, array $query = array()  [, array $fields = array() ]])
public MongoDB MongoClient::__get( string $dbname )
public MongoDB MongoClient::selectDB( string $name )
public MongoDB::__construct( MongoClient $conn , string $name )
public MongoDB\Driver\BulkWrite::__construct([ array $options ])
public MongoDate::__construct([ int $sec = time()  [, int $usec = 0 ]])
public MongoDeleteBatch::__construct( MongoCollection $collection  [, array $write_options ])
public MongoGridFS MongoDB::getGridFS([ string $prefix = "fs" ])
public MongoGridFS::__construct( MongoDB $db  [, string $prefix = "fs"  [, mixed $chunks = "fs" ]])
public MongoGridFSCursor MongoGridFS::find([ array $query = array()  [, array $fields = array() ]])
public MongoGridFSCursor::__construct( MongoGridFS $gridfs , resource $connection , string $ns , array $query , array $fields )
public MongoGridFSFile MongoGridFS::findOne([ mixed $query = array()  [, mixed $fields = array() ]])
public MongoGridFSFile MongoGridFS::get( mixed $id )
public MongoGridFSFile MongoGridFSCursor::current( void )
public MongoGridFSFile MongoGridFSCursor::getNext( void )
public MongoGridfsFile::__construct( MongoGridFS $gridfs , array $file )
public MongoId::__construct([ string|MongoId $id = NULL ])
public MongoInsertBatch::__construct( MongoCollection $collection  [, array $write_options ])
public MongoInt32::__construct( string $value )
public MongoInt64::__construct( string $value )
public MongoRegex::__construct( string $regex )
public MongoTimestamp::__construct([ int $sec = time()  [, int $inc ]])
public MongoUpdateBatch::__construct( MongoCollection $collection  [, array $write_options ])
public MysqlndUhConnection::__construct( void )
public MysqlndUhPreparedStatement::__construct( void )
public NoRewindIterator::__construct( Iterator $iterator )
public OAuth::__construct( string $consumer_key , string $consumer_secret  [, string $signature_method = OAUTH_SIG_METHOD_HMACSHA1  [, int $auth_type = 0 ]])
public OAuthProvider::__construct([ array $params_array ])
public PDOStatement PDO::prepare( string $statement  [, array $driver_options = array() ])
public PDOStatement PDO::query( string $statement )
public ParentIterator ParentIterator::getChildren( void )
public ParentIterator::__construct( RecursiveIterator $iterator )
public Phar Phar::convertToExecutable([ int $format = 9021976  [, int $compression = 9021976  [, string $extension ]]])
public Phar::__construct( string $fname  [, int $flags  [, string $alias ]])
public PharData Phar::convertToData([ int $format = 9021976  [, int $compression = 9021976  [, string $extension ]]])
public PharFileInfo::__construct( string $entry )
public Pool Pool::__construct( integer $size , string $class  [, array $ctor ])
public QuickHashIntHash::__construct( int $size  [, int $options ])
public QuickHashIntSet::__construct( int $size  [, int $options ])
public QuickHashIntStringHash::__construct( int $size  [, int $options = 0 ])
public QuickHashStringIntHash::__construct( int $size  [, int $options = 0 ])
public RRDCreator::__construct( string $path  [, string $startTime  [, int $step = 0 ]])
public RRDGraph::__construct( string $path )
public RRDUpdater::__construct( string $path )
public RarEntry RarArchive::getEntry( string $entryname )
public RecursiveArrayIterator RecursiveArrayIterator::getChildren( void )
public RecursiveCachingIterator RecursiveCachingIterator::getChildren( void )
public RecursiveCachingIterator::__construct( Iterator $iterator  [, string $flags = self::CALL_TOSTRING ])
public RecursiveCallbackFilterIterator RecursiveCallbackFilterIterator::getChildren( void )
public RecursiveDirectoryIterator::__construct( string $path  [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO ])
public RecursiveFilterIterator RecursiveFilterIterator::getChildren( void )
public RecursiveFilterIterator::__construct( RecursiveIterator $iterator )
public RecursiveIterator RecursiveIterator::getChildren( void )
public RecursiveIterator RecursiveIteratorIterator::callGetChildren( void )
public RecursiveIterator RecursiveIteratorIterator::getSubIterator([ int $level ])
public RecursiveIterator RecursiveTreeIterator::beginIteration( void )
public RecursiveIterator RecursiveTreeIterator::callGetChildren( void )
public RecursiveIteratorIterator::__construct( Traversable $iterator  [, int $mode = RecursiveIteratorIterator::LEAVES_ONLY  [, int $flags = 0 ]])
public RecursiveRegexIterator RecursiveRegexIterator::getChildren( void )
public RecursiveTreeIterator::__construct( RecursiveIterator|IteratorAggregate $it  [, int $flags = RecursiveTreeIterator::BYPASS_KEY  [, int $cit_flags = CachingIterator::CATCH_GET_CHILD  [, int $mode = RecursiveIteratorIterator::SELF_FIRST ]]])
public ReflectionClass ReflectionFunctionAbstract::getClosureScopeClass( void )
public ReflectionClass ReflectionMethod::getDeclaringClass( void )
public ReflectionClass ReflectionParameter::getClass( void )
public ReflectionClass ReflectionParameter::getDeclaringClass( void )
public ReflectionClass ReflectionProperty::getDeclaringClass( void )
public ReflectionClass::__construct( mixed $argument )
public ReflectionExtension ReflectionClass::getExtension( void )
public ReflectionExtension ReflectionFunctionAbstract::getExtension( void )
public ReflectionExtension::__construct( string $name )
public ReflectionFunction::__construct( mixed $name )
public ReflectionFunctionAbstract ReflectionGenerator::getFunction( void )
public ReflectionFunctionAbstract ReflectionParameter::getDeclaringFunction( void )
public ReflectionGenerator::__construct( Generator $generator )
public ReflectionMethod ReflectionClass::getConstructor( void )
public ReflectionMethod ReflectionClass::getMethod( string $name )
public ReflectionMethod ReflectionMethod::getPrototype( void )
public ReflectionMethod::__construct( mixed $class , string $name )
public ReflectionObject::__construct( object $argument )
public ReflectionParameter::__construct( string $function , string $parameter )
public ReflectionProperty ReflectionClass::getProperty( string $name )
public ReflectionProperty::__construct( mixed $class , string $name )
public ReflectionType ReflectionFunctionAbstract::getReturnType( void )
public ReflectionType ReflectionParameter::getType( void )
public ReflectionZendExtension::__construct( string $name )
public ReturnType IntlBreakIterator::current( void )
public ReturnType IntlBreakIterator::first( void )
public ReturnType IntlBreakIterator::following( string $"offset" )
public ReturnType IntlBreakIterator::getErrorCode( void )
public ReturnType IntlBreakIterator::getErrorMessage( void )
public ReturnType IntlBreakIterator::getLocale( string $"locale_type" )
public ReturnType IntlBreakIterator::getPartsIterator([ string $"key_type" ])
public ReturnType IntlBreakIterator::getText( void )
public ReturnType IntlBreakIterator::last( void )
public ReturnType IntlBreakIterator::next([ string $"offset" ])
public ReturnType IntlBreakIterator::preceding( string $"offset" )
public ReturnType IntlBreakIterator::previous( void )
public ReturnType IntlBreakIterator::setText( string $"text" )
public ReturnType IntlCodePointBreakIterator::getLastCodePoint( void )
public ReturnType IntlIterator::current( void )
public ReturnType IntlIterator::key( void )
public ReturnType IntlIterator::next( void )
public ReturnType IntlIterator::rewind( void )
public ReturnType IntlIterator::valid( void )
public ReturnType IntlPartsIterator::getBreakIterator( void )
public ReturnType IntlRuleBasedBreakIterator::getBinaryRules( void )
public ReturnType IntlRuleBasedBreakIterator::getRuleStatus( void )
public ReturnType IntlRuleBasedBreakIterator::getRuleStatusVec( void )
public ReturnType IntlRuleBasedBreakIterator::getRules( void )
public SQLite3::__construct( string $filename  [, int $flags  [, string $encryption_key ]])
public SQLite3Result SQLite3::query( string $query )
public SQLite3Result SQLite3Stmt::execute( void )
public SQLite3Stmt SQLite3::prepare( string $query )
public SVM::__construct( void )
public SVMModel svm::train( array $problem  [, array $weights ])
public SVMModel::__construct([ string $filename ])
public SimpleXMLElement SimpleXMLElement::addChild( string $name  [, string $value  [, string $namespace ]])
public SimpleXMLElement SimpleXMLElement::children([ string $ns  [, bool $is_prefix = false ]])
public SimpleXMLIterator SimpleXMLIterator::getChildren( void )
public SoapClient::SoapClient( mixed $wsdl  [, array $options ])
public SoapServer::__construct( mixed $wsdl  [, array $options ])
public SolrClient::__construct( array $clientOptions )
public SolrCollapseFunction SolrCollapseFunction::setField( string $field )
public SolrCollapseFunction SolrCollapseFunction::setHint( string $hint )
public SolrCollapseFunction SolrCollapseFunction::setMax( string $max )
public SolrCollapseFunction SolrCollapseFunction::setMin( string $min )
public SolrCollapseFunction SolrCollapseFunction::setNullPolicy( string $nullPolicy )
public SolrCollapseFunction SolrCollapseFunction::setSize( integer $size )
public SolrDisMaxQuery SolrDisMaxQuery::addBigramPhraseField( string $field , string $boost  [, string $slop ])
public SolrDisMaxQuery SolrDisMaxQuery::addBoostQuery( string $field , string $value  [, string $boost ])
public SolrDisMaxQuery SolrDisMaxQuery::addPhraseField( string $field , string $boost  [, string $slop ])
public SolrDisMaxQuery SolrDisMaxQuery::addQueryField( string $field  [, string $boost ])
public SolrDisMaxQuery SolrDisMaxQuery::addTrigramPhraseField( string $field , string $boost  [, string $slop ])
public SolrDisMaxQuery SolrDisMaxQuery::addUserField( string $field )
public SolrDisMaxQuery SolrDisMaxQuery::removeBigramPhraseField( string $field )
public SolrDisMaxQuery SolrDisMaxQuery::removeBoostQuery( string $field )
public SolrDisMaxQuery SolrDisMaxQuery::removePhraseField( string $field )
public SolrDisMaxQuery SolrDisMaxQuery::removeQueryField( string $field )
public SolrDisMaxQuery SolrDisMaxQuery::removeTrigramPhraseField( string $field )
public SolrDisMaxQuery SolrDisMaxQuery::removeUserField( string $field )
public SolrDisMaxQuery SolrDisMaxQuery::setBigramPhraseFields( string $fields )
public SolrDisMaxQuery SolrDisMaxQuery::setBigramPhraseSlop( string $slop )
public SolrDisMaxQuery SolrDisMaxQuery::setBoostFunction( string $function )
public SolrDisMaxQuery SolrDisMaxQuery::setBoostQuery( string $q )
public SolrDisMaxQuery SolrDisMaxQuery::setMinimumMatch( string $value )
public SolrDisMaxQuery SolrDisMaxQuery::setPhraseFields( string $fields )
public SolrDisMaxQuery SolrDisMaxQuery::setPhraseSlop( string $slop )
public SolrDisMaxQuery SolrDisMaxQuery::setQueryAlt( string $q )
public SolrDisMaxQuery SolrDisMaxQuery::setQueryPhraseSlop( string $slop )
public SolrDisMaxQuery SolrDisMaxQuery::setTieBreaker( string $tieBreaker )
public SolrDisMaxQuery SolrDisMaxQuery::setTrigramPhraseFields( string $fields )
public SolrDisMaxQuery SolrDisMaxQuery::setTrigramPhraseSlop( string $slop )
public SolrDisMaxQuery SolrDisMaxQuery::setUserFields( string $fields )
public SolrDisMaxQuery SolrDisMaxQuery::useDisMaxQueryParser( void )
public SolrDisMaxQuery SolrDisMaxQuery::useEDisMaxQueryParser( void )
public SolrDisMaxQuery::__construct([ string $q ])
public SolrDocument::__construct( void )
public SolrDocumentField SolrDocument::__get( string $fieldName )
public SolrDocumentField SolrDocument::current( void )
public SolrDocumentField SolrDocument::getField( string $fieldName )
public SolrDocumentField SolrDocument::offsetGet( string $fieldName )
public SolrDocumentField SolrInputDocument::getField( string $fieldName )
public SolrDocumentField::__construct( void )
public SolrGenericResponse::__construct( void )
public SolrInputDocument SolrDocument::getInputDocument( void )
public SolrInputDocument::__construct( void )
public SolrModifiableParams::__construct( void )
public SolrObject SolrResponse::getResponse( void )
public SolrObject::__construct( void )
public SolrParams SolrParams::addParam( string $name , string $value )
public SolrParams SolrParams::setParam( string $name , string $value )
public SolrPingResponse SolrClient::ping( void )
public SolrPingResponse::__construct( void )
public SolrQuery SolrQuery::addExpandFilterQuery( string $fq )
public SolrQuery SolrQuery::addExpandSortField( string $field  [, string $order ])
public SolrQuery SolrQuery::addFacetDateField( string $dateField )
public SolrQuery SolrQuery::addFacetDateOther( string $value  [, string $field_override ])
public SolrQuery SolrQuery::addFacetField( string $field )
public SolrQuery SolrQuery::addFacetQuery( string $facetQuery )
public SolrQuery SolrQuery::addField( string $field )
public SolrQuery SolrQuery::addFilterQuery( string $fq )
public SolrQuery SolrQuery::addGroupField( string $value )
public SolrQuery SolrQuery::addGroupFunction( string $value )
public SolrQuery SolrQuery::addGroupQuery( string $value )
public SolrQuery SolrQuery::addGroupSortField( string $field  [, integer $order ])
public SolrQuery SolrQuery::addHighlightField( string $field )
public SolrQuery SolrQuery::addMltField( string $field )
public SolrQuery SolrQuery::addMltQueryField( string $field , float $boost )
public SolrQuery SolrQuery::addSortField( string $field  [, int $order = SolrQuery::ORDER_DESC ])
public SolrQuery SolrQuery::addStatsFacet( string $field )
public SolrQuery SolrQuery::addStatsField( string $field )
public SolrQuery SolrQuery::collapse( SolrCollapseFunction $collapseFunction )
public SolrQuery SolrQuery::removeExpandFilterQuery( string $fq )
public SolrQuery SolrQuery::removeExpandSortField( string $field )
public SolrQuery SolrQuery::removeFacetDateField( string $field )
public SolrQuery SolrQuery::removeFacetDateOther( string $value  [, string $field_override ])
public SolrQuery SolrQuery::removeFacetField( string $field )
public SolrQuery SolrQuery::removeFacetQuery( string $value )
public SolrQuery SolrQuery::removeField( string $field )
public SolrQuery SolrQuery::removeFilterQuery( string $fq )
public SolrQuery SolrQuery::removeHighlightField( string $field )
public SolrQuery SolrQuery::removeMltField( string $field )
public SolrQuery SolrQuery::removeMltQueryField( string $queryField )
public SolrQuery SolrQuery::removeSortField( string $field )
public SolrQuery SolrQuery::removeStatsFacet( string $value )
public SolrQuery SolrQuery::removeStatsField( string $field )
public SolrQuery SolrQuery::setEchoHandler( bool $flag )
public SolrQuery SolrQuery::setEchoParams( string $type )
public SolrQuery SolrQuery::setExpand( bool $value )
public SolrQuery SolrQuery::setExpandQuery( string $q )
public SolrQuery SolrQuery::setExpandRows( integer $value )
public SolrQuery SolrQuery::setExplainOther( string $query )
public SolrQuery SolrQuery::setFacet( bool $flag )
public SolrQuery SolrQuery::setFacetDateEnd( string $value  [, string $field_override ])
public SolrQuery SolrQuery::setFacetDateGap( string $value  [, string $field_override ])
public SolrQuery SolrQuery::setFacetDateHardEnd( bool $value  [, string $field_override ])
public SolrQuery SolrQuery::setFacetDateStart( string $value  [, string $field_override ])
public SolrQuery SolrQuery::setFacetEnumCacheMinDefaultFrequency( int $frequency  [, string $field_override ])
public SolrQuery SolrQuery::setFacetLimit( int $limit  [, string $field_override ])
public SolrQuery SolrQuery::setFacetMethod( string $method  [, string $field_override ])
public SolrQuery SolrQuery::setFacetMinCount( int $mincount  [, string $field_override ])
public SolrQuery SolrQuery::setFacetMissing( bool $flag  [, string $field_override ])
public SolrQuery SolrQuery::setFacetOffset( int $offset  [, string $field_override ])
public SolrQuery SolrQuery::setFacetPrefix( string $prefix  [, string $field_override ])
public SolrQuery SolrQuery::setFacetSort( int $facetSort  [, string $field_override ])
public SolrQuery SolrQuery::setGroup( bool $value )
public SolrQuery SolrQuery::setGroupCachePercent( integer $percent )
public SolrQuery SolrQuery::setGroupFacet( bool $value )
public SolrQuery SolrQuery::setGroupFormat( string $value )
public SolrQuery SolrQuery::setGroupLimit( integer $value )
public SolrQuery SolrQuery::setGroupMain( string $value )
public SolrQuery SolrQuery::setGroupNGroups( bool $value )
public SolrQuery SolrQuery::setGroupOffset( integer $value )
public SolrQuery SolrQuery::setGroupTruncate( bool $value )
public SolrQuery SolrQuery::setHighlight( bool $flag )
public SolrQuery SolrQuery::setHighlightAlternateField( string $field  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightFormatter( string $formatter  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightFragmenter( string $fragmenter  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightFragsize( int $size  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightHighlightMultiTerm( bool $flag )
public SolrQuery SolrQuery::setHighlightMaxAlternateFieldLength( int $fieldLength  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightMaxAnalyzedChars( int $value )
public SolrQuery SolrQuery::setHighlightMergeContiguous( bool $flag  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightRegexMaxAnalyzedChars( int $maxAnalyzedChars )
public SolrQuery SolrQuery::setHighlightRegexPattern( string $value )
public SolrQuery SolrQuery::setHighlightRegexSlop( float $factor )
public SolrQuery SolrQuery::setHighlightRequireFieldMatch( bool $flag )
public SolrQuery SolrQuery::setHighlightSimplePost( string $simplePost  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightSimplePre( string $simplePre  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightSnippets( int $value  [, string $field_override ])
public SolrQuery SolrQuery::setHighlightUsePhraseHighlighter( bool $flag )
public SolrQuery SolrQuery::setMlt( bool $flag )
public SolrQuery SolrQuery::setMltBoost( bool $flag )
public SolrQuery SolrQuery::setMltCount( int $count )
public SolrQuery SolrQuery::setMltMaxNumQueryTerms( int $value )
public SolrQuery SolrQuery::setMltMaxNumTokens( int $value )
public SolrQuery SolrQuery::setMltMaxWordLength( int $maxWordLength )
public SolrQuery SolrQuery::setMltMinDocFrequency( int $minDocFrequency )
public SolrQuery SolrQuery::setMltMinTermFrequency( int $minTermFrequency )
public SolrQuery SolrQuery::setMltMinWordLength( int $minWordLength )
public SolrQuery SolrQuery::setOmitHeader( bool $flag )
public SolrQuery SolrQuery::setQuery( string $query )
public SolrQuery SolrQuery::setRows( int $rows )
public SolrQuery SolrQuery::setShowDebugInfo( bool $flag )
public SolrQuery SolrQuery::setStart( int $start )
public SolrQuery SolrQuery::setStats( bool $flag )
public SolrQuery SolrQuery::setTerms( bool $flag )
public SolrQuery SolrQuery::setTermsField( string $fieldname )
public SolrQuery SolrQuery::setTermsIncludeLowerBound( bool $flag )
public SolrQuery SolrQuery::setTermsIncludeUpperBound( bool $flag )
public SolrQuery SolrQuery::setTermsLimit( int $limit )
public SolrQuery SolrQuery::setTermsLowerBound( string $lowerBound )
public SolrQuery SolrQuery::setTermsMaxCount( int $frequency )
public SolrQuery SolrQuery::setTermsMinCount( int $frequency )
public SolrQuery SolrQuery::setTermsPrefix( string $prefix )
public SolrQuery SolrQuery::setTermsReturnRaw( bool $flag )
public SolrQuery SolrQuery::setTermsSort( int $sortType )
public SolrQuery SolrQuery::setTermsUpperBound( string $upperBound )
public SolrQuery SolrQuery::setTimeAllowed( int $timeAllowed )
public SolrQuery::__construct([ string $q ])
public SolrQueryResponse::__construct( void )
public SolrUpdateResponse SolrClient::addDocument( SolrInputDocument $doc  [, bool $overwrite = true  [, int $commitWithin = 0 ]])
public SolrUpdateResponse SolrClient::commit([ bool $softCommit = false  [, bool $waitSearcher = true  [, bool $expungeDeletes = false ]]])
public SolrUpdateResponse SolrClient::deleteById( string $id )
public SolrUpdateResponse SolrClient::deleteByIds( array $ids )
public SolrUpdateResponse SolrClient::deleteByQueries( array $queries )
public SolrUpdateResponse SolrClient::deleteByQuery( string $query )
public SolrUpdateResponse SolrClient::optimize([ int $maxSegments = 1  [, bool $softCommit = true  [, bool $waitSearcher = true ]]])
public SolrUpdateResponse SolrClient::request( string $raw_request )
public SolrUpdateResponse SolrClient::rollback( void )
public SolrUpdateResponse::__construct( void )
public SphinxClient::__construct( void )
public SplFileInfo SplFileInfo::getFileInfo([ string $class_name ])
public SplFileInfo SplFileInfo::getPathInfo([ string $class_name ])
public SplFileInfo::__construct( string $file_name )
public SplFileObject SplFileInfo::openFile([ string $open_mode = "r"  [, bool $use_include_path = false  [, resource $context = NULL ]]])
public SplTempFileObject::__construct([ int $max_memory ])
public Spoofchecker::__construct( void )
public Stomp::__construct ([ string $broker = ini_get("stomp.default_broker_uri")  [, string $username  [, string $password  [, array $headers  ]]]])
public SyncEvent::__construct([ string $name  [, bool $manual ]])
public SyncMutex::__construct([ string $name ])
public SyncReaderWriter::__construct([ string $name  [, bool $autounlock ]])
public SyncSemaphore::__construct([ string $name  [, integer $initialval  [, bool $autounlock ]]])
public Threaded Threaded::from( Closure $run  [, Closure $construct  [, array $args ]])
public TokyoTyrant TokyoTyrant::connect( string $host  [, int $port = TokyoTyrant::RDBDEF_PORT  [, array $options ]])
public TokyoTyrant TokyoTyrant::connectUri( string $uri )
public TokyoTyrant TokyoTyrant::copy( string $path )
public TokyoTyrant TokyoTyrant::out( mixed $keys  )
public TokyoTyrant TokyoTyrant::put( mixed $keys  [, string $value = NULL ])
public TokyoTyrant TokyoTyrant::putCat( mixed $keys  [, string $value ])
public TokyoTyrant TokyoTyrant::putKeep( mixed $keys  [, string $value ])
public TokyoTyrant TokyoTyrant::putNr( mixed $keys  [, string $value = NULL ])
public TokyoTyrant TokyoTyrant::tune( float $timeout  [, int $options = TokyoTyrant::RDBT_RECON ])
public TokyoTyrant::__construct([ string $host  [, int $port = TokyoTyrant::RDBDEF_PORT  [, array $options ]]])
public TokyoTyrantIterator TokyoTyrant::getIterator( void )
public TokyoTyrantIterator TokyoTyrantTable::getIterator( void )
public TokyoTyrantIterator::__construct( mixed $object )
public TokyoTyrantQuery TokyoTyrantQuery::out( void )
public TokyoTyrantQuery TokyoTyrantTable::getQuery( void )
public TokyoTyrantQuery::__construct( TokyoTyrantTable $table )
public Transliterator Transliterator::createInverse( void )
public Traversable IteratorIterator::getInnerIterator( void )
public UConverter::__construct([ string $destination_encoding  [, string $source_encoding ]])
public V8Js::__construct([ string $object_name = "PHP"  [, array $variables = array()  [, array $extensions = array()  [, bool $report_uncaught_exceptions = TRUE ]]]])
public V8JsException V8Js::getPendingException( void )
public VarnishAdmin::__construct([ array $args ])
public VarnishLog::__construct([ array $args ])
public VarnishStat::__construct([ array $args ])
public WeakMap::__construct( void )
public XMLDiff\Base::__construct( string $nsname )
public Yaf_Application Yaf_Application::clearLastError( void )
public Yaf_Application Yaf_Application::getAppDirectory( void )
public Yaf_Application Yaf_Application::setAppDirectory( string $directory )
public Yaf_Application Yaf_Dispatcher::getApplication( void )
public Yaf_Application::__construct( mixed $config  [, string $envrion ])
public Yaf_Config_Abstract Yaf_Application::getConfig( void )
public Yaf_Config_Ini::__construct( string $config_file  [, string $section ])
public Yaf_Config_Simple::__construct( string $config_file  [, string $section ])
public Yaf_Dispatcher Yaf_Application::getDispatcher( void )
public Yaf_Dispatcher Yaf_Dispatcher::autoRender([ bool $flag ])
public Yaf_Dispatcher Yaf_Dispatcher::catchException([ bool $flag ])
public Yaf_Dispatcher Yaf_Dispatcher::enableView( void )
public Yaf_Dispatcher Yaf_Dispatcher::flushInstantly([ bool $flag ])
public Yaf_Dispatcher Yaf_Dispatcher::registerPlugin( Yaf_Plugin_Abstract $plugin )
public Yaf_Dispatcher Yaf_Dispatcher::returnResponse( bool $flag )
public Yaf_Dispatcher Yaf_Dispatcher::setDefaultAction( string $action )
public Yaf_Dispatcher Yaf_Dispatcher::setDefaultController( string $controller )
public Yaf_Dispatcher Yaf_Dispatcher::setDefaultModule( string $module )
public Yaf_Dispatcher Yaf_Dispatcher::setErrorHandler( call $callback , int $error_types )
public Yaf_Dispatcher Yaf_Dispatcher::setRequest( Yaf_Request_Abstract $request )
public Yaf_Dispatcher Yaf_Dispatcher::setView( Yaf_View_Interface $view )
public Yaf_Dispatcher Yaf_Dispatcher::throwException([ bool $flag ])
public Yaf_Dispatcher::__construct( void )
public Yaf_Exception::__construct( void )
public Yaf_Loader Yaf_Loader::getLibraryPath([ bool $is_global = false ])
public Yaf_Loader Yaf_Loader::setLibraryPath( string $directory  [, bool $is_global = false ])
public Yaf_Request_Abstract Yaf_Controller_Abstract::getRequest( void )
public Yaf_Request_Abstract Yaf_Dispatcher::getRequest( void )
public Yaf_Request_Http::__construct([ string $request_uri  [, string $base_uri ]])
public Yaf_Request_Simple::__construct([ string $method  [, string $module  [, string $controller  [, string $action  [, array $params ]]]]])
public Yaf_Response_Abstract Yaf_Controller_Abstract::getResponse( void )
public Yaf_Response_Abstract Yaf_Dispatcher::dispatch( Yaf_Request_Abstract $request )
public Yaf_Response_Abstract::__construct( void )
public Yaf_Route_Interface Yaf_Router::getRoute( string $name )
public Yaf_Route_Map::__construct([ string $controller_prefer = false  [, string $delimiter = "" ]])
public Yaf_Route_Regex::__construct( string $match , array $route  [, array $map  [, array $verify  [, string $reverse ]]])
public Yaf_Route_Rewrite::__construct( string $match , array $route  [, array $verify ])
public Yaf_Route_Simple::__construct( string $module_name , string $controller_name , string $action_name )
public Yaf_Route_Supervar::__construct( string $supervar_name )
public Yaf_Router Yaf_Dispatcher::getRouter( void )
public Yaf_Router::__construct( void )
public Yaf_View_Interface Yaf_Controller_Abstract::getView( void )
public Yaf_View_Interface Yaf_Dispatcher::initView( string $templates_dir  [, array $options ])
public ZMQContext ZMQContext::setOpt( integer $key , mixed $value )
public ZMQDevice ZMQDevice::getIdleTimeout( void )
public ZMQDevice ZMQDevice::getTimerTimeout( void )
public ZMQDevice ZMQDevice::setIdleCallback( callable $cb_func , integer $timeout  [, mixed $user_data ])
public ZMQDevice ZMQDevice::setIdleTimeout( integer $timeout )
public ZMQDevice ZMQDevice::setTimerCallback( callable $cb_func , integer $timeout  [, mixed $user_data ])
public ZMQDevice ZMQDevice::setTimerTimeout( integer $timeout )
public ZMQPoll ZMQPoll::clear( void )
public ZMQSocket ZMQContext::getSocket( integer $type  [, string $persistent_id = null  [, callback $on_new_socket = null ]])
public ZMQSocket ZMQSocket::bind( string $dsn  [, boolean $force = false ])
public ZMQSocket ZMQSocket::connect( string $dsn  [, boolean $force = false ])
public ZMQSocket ZMQSocket::disconnect( string $dsn )
public ZMQSocket ZMQSocket::send( array $message  [, integer $mode = 0 ])
public ZMQSocket ZMQSocket::send( string $message  [, integer $mode = 0 ])
public ZMQSocket ZMQSocket::setSockOpt( integer $key , mixed $value )
public ZMQSocket ZMQSocket::unbind( string $dsn )
public abstract bool FilterIterator::accept( void )
public array ArrayIterator::getArrayCopy( void )
public array ArrayObject::exchangeArray( mixed $input )
public array CachingIterator::getCache( void )
public array CairoContext::clipExtents( void )
public array CairoContext::clipRectangleList( void )
public array CairoContext::deviceToUser( float $x , float $y )
public array CairoContext::deviceToUserDistance( float $x , float $y )
public array CairoContext::fontExtents( void )
public array CairoContext::getCurrentPoint( void )
public array CairoContext::getDash( void )
public array CairoContext::pathExtents( void )
public array CairoContext::strokeExtents( void )
public array CairoContext::textExtents( string $text )
public array CairoContext::userToDevice( string $x , string $y )
public array CairoContext::userToDeviceDistance( string $x , string $y )
public array CairoGradientPattern::getColorStopRgba( string $index )
public array CairoLinearGradient::getPoints( void )
public array CairoMatrix::transformDistance( string $dx , string $dy )
public array CairoMatrix::transformPoint( string $dx , string $dy )
public array CairoRadialGradient::getCircles( void )
public array CairoScaledFont::extents( void )
public array CairoScaledFont::glyphExtents( string $glyphs )
public array CairoScaledFont::textExtents( string $text )
public array CairoSolidPattern::getRgba( void )
public array CairoSurface::getDeviceOffset( void )
public array DateTimeZone::getLocation( void )
public array DateTimeZone::getTransitions([ int $timestamp_begin  [, int $timestamp_end ]])
public array EvStat::attr( void )
public array EventHttpRequest::getInputHeaders( void )
public array GearmanClient::doStatus( void )
public array GearmanClient::jobStatus( string $job_handle )
public array GearmanTask::recvData( int $data_len )
public array Gender\Gender::country( integer $country )
public array Gender\Gender::isNick( string $name0 , string $name1  [, integer $country ])
public array Gender\Gender::similarNames( string $name  [, integer $country ])
public array Gmagick::getimageblueprimary( void )
public array Gmagick::getimageextrema( void )
public array Gmagick::getimagegreenprimary( void )
public array Gmagick::getimagehistogram( void )
public array Gmagick::getimageredprimary( void )
public array Gmagick::getimageresolution( void )
public array Gmagick::getimagewhitepoint( void )
public array Gmagick::getquantumdepth( void )
public array Gmagick::getsamplingfactors( void )
public array Gmagick::getsize( void )
public array Gmagick::getversion( void )
public array Gmagick::queryfontmetrics( GmagickDraw $draw , string $text )
public array Gmagick::queryfonts([ string $pattern = "*" ])
public array Gmagick::queryformats([ string $pattern = "*" ])
public array Imagick::exportImagePixels( int $x , int $y , int $width , int $height , string $map , int $STORAGE )
public array Imagick::getImageChannelKurtosis([ int $channel = Imagick::CHANNEL_DEFAULT ])
public array ImagickKernel::getMatrix( void )
public array ImagickKernel::separate( void )
public array IntlDateFormatter::localtime ( string $value  [, int &$position  ])
public array KTaglib_ID3v2_Tag::getFrameList  ( void  )
public array Memcached::fetch( void )
public array Memcached::fetchAll( void )
public array Memcached::getMultiByKey( string $server_key , array $keys  [, string &$cas_tokens  [, int $flags ]])
public array Memcached::getServerByKey( string $server_key )
public array Memcached::getServerList( void )
public array Memcached::getStats( void )
public array Memcached::getVersion( void )
public array Mongo::poolDebug( void )
public array MongoClient::dropDB( mixed $db )
public array MongoClient::getHosts( void )
public array MongoClient::getReadPreference( void )
public array MongoClient::getWriteConcern( void )
public array MongoClient::listDBs( void )
public array MongoCollection::aggregate( array $pipeline  [, array $options ])
public array MongoCollection::createDBRef( mixed $document_or_id )
public array MongoCollection::deleteIndex( string|array $keys )
public array MongoCollection::deleteIndexes( void )
public array MongoCollection::distinct( string $key  [, array $query ])
public array MongoCollection::drop( void )
public array MongoCollection::findAndModify( array $query  [, array $update  [, array $fields  [, array $options ]]])
public array MongoCollection::findOne([ array $query = array()  [, array $fields = array()  [, array $options = array() ]]])
public array MongoCollection::getDBRef( array $ref )
public array MongoCollection::getIndexInfo( void )
public array MongoCollection::getReadPreference( void )
public array MongoCollection::getWriteConcern( void )
public array MongoCollection::group( mixed $keys , array $initial , MongoCode $reduce  [, array $options = array() ])
public array MongoCollection::validate([ bool $scan_data = FALSE ])
public array MongoCommandCursor::current( void )
public array MongoCommandCursor::getReadPreference( void )
public array MongoCommandCursor::info( void )
public array MongoCommandCursor::rewind( void )
public array MongoCursor::current( void )
public array MongoCursor::explain( void )
public array MongoCursor::getNext( void )
public array MongoCursor::getReadPreference( void )
public array MongoCursor::next( void )
public array MongoDB::authenticate( string $username , string $password )
public array MongoDB::createDBRef( string $collection , mixed $document_or_id )
public array MongoDB::drop( void )
public array MongoDB::dropCollection( mixed $coll )
public array MongoDB::execute( mixed $code  [, array $args = array() ])
public array MongoDB::getCollectionInfo([ array $options = array() ])
public array MongoDB::getCollectionNames([ array $options = array() ])
public array MongoDB::getDBRef( array $ref )
public array MongoDB::getReadPreference( void )
public array MongoDB::getWriteConcern( void )
public array MongoDB::lastError( void )
public array MongoDB::listCollections([ array $options = array() ])
public array MongoDB::prevError( void )
public array MongoDB::repair([ bool $preserve_cloned_files = FALSE  [, bool $backup_original_files = FALSE ]])
public array MongoDB::resetError( void )
public array MongoGridFS::drop( void )
public array MongoPool::info( void )
public array MongoResultException::getDocument( void )
public array MongoWriteConcernException::getDocument( void )
public array MultipleIterator::current( void )
public array MultipleIterator::key( void )
public array MysqlndUhConnection::getStatistics( mysqlnd_connection $connection )
public array MysqlndUhConnection::listFields( mysqlnd_connection $connection , string $table , string $achtung_wild )
public array OAuth::getAccessToken( string $access_token_url  [, string $auth_session_handle  [, string $verifier_token  [, string $http_method ]]])
public array OAuth::getCAPath( void )
public array OAuth::getLastResponseInfo( void )
public array OAuth::getRequestToken( string $request_token_url  [, string $callback_url  [, string $http_method ]])
public array PDO::cubrid_schema( int $schema_type   [, string $table_name  [, string $col_name  ]])
public array PDO::errorInfo( void )
public array PDO::pgsqlCopyToArray( string $table_name , array $rows  [, string $delimiter = '\t'  [, string $null_as = "\\\\N"  [, string $fields ]]])
public array PDO::pgsqlGetNotify([ int $result_type = PDO::FETCH_USE_DEFAULT  [, int $ms_timeout = 0 ]])
public array PDOStatement::errorInfo( void )
public array PDOStatement::fetchAll([ int $fetch_style  [, mixed $fetch_argument  [, array $ctor_args = array() ]]])
public array PDOStatement::getColumnMeta( int $column )
public array Phar::buildFromDirectory( string $base_dir  [, string $regex ])
public array Phar::buildFromIterator( Iterator $iter  [, string $base_directory ])
public array Phar::getSignature( void )
public array RRDGraph::save( void )
public array RRDGraph::saveVerbose( void )
public array RarArchive::getEntries( void )
public array ReflectionClass::getConstants( void )
public array ReflectionClass::getDefaultProperties( void )
public array ReflectionClass::getInterfaceNames( void )
public array ReflectionClass::getInterfaces( void )
public array ReflectionClass::getMethods([ int $filter ])
public array ReflectionClass::getProperties([ int $filter ])
public array ReflectionClass::getStaticProperties( void )
public array ReflectionClass::getTraitAliases( void )
public array ReflectionClass::getTraitNames( void )
public array ReflectionClass::getTraits( void )
public array ReflectionExtension::getClassNames( void )
public array ReflectionExtension::getClasses( void )
public array ReflectionExtension::getConstants( void )
public array ReflectionExtension::getDependencies( void )
public array ReflectionExtension::getFunctions( void )
public array ReflectionExtension::getINIEntries( void )
public array ReflectionFunctionAbstract::getParameters( void )
public array ReflectionFunctionAbstract::getStaticVariables( void )
public array ReflectionGenerator::getTrace([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT ])
public array ResourceBundle::getLocales( string $bundlename )
public array SNMP::walk( string $object_id  [, bool $suffix_as_key = FALSE  [, int $max_repetitions  [, int $non_repeaters ]]])
public array SQLite3Result::fetchArray([ int $mode = SQLITE3_BOTH ])
public array SVM::getOptions( void )
public array SVMModel::getLabels( void )
public array SimpleXMLElement::getDocNamespaces([ bool $recursive = false  [, bool $from_root = true ]])
public array SimpleXMLElement::xpath( string $path )
public array SoapClient::__getFunctions( void )
public array SoapClient::__getTypes( void )
public array SoapServer::getFunctions( void )
public array SolrClient::getOptions( void )
public array SolrClientException::getInternalInfo( void )
public array SolrDocument::getFieldNames( void )
public array SolrDocument::toArray( void )
public array SolrException::getInternalInfo( void )
public array SolrIllegalArgumentException::getInternalInfo( void )
public array SolrIllegalOperationException::getInternalInfo( void )
public array SolrInputDocument::getFieldNames( void )
public array SolrInputDocument::toArray( void )
public array SolrObject::getPropertyNames( void )
public array SolrQuery::getExpandFilterQueries( void )
public array SolrQuery::getExpandQuery( void )
public array SolrQuery::getExpandSortFields( void )
public array SolrQuery::getFacetDateFields ( void )
public array SolrQuery::getFacetDateOther([ string $field_override ])
public array SolrQuery::getFacetFields( void )
public array SolrQuery::getFacetQueries( void )
public array SolrQuery::getFields( void )
public array SolrQuery::getFilterQueries( void )
public array SolrQuery::getGroupFields( void )
public array SolrQuery::getGroupFunctions( void )
public array SolrQuery::getGroupQueries( void )
public array SolrQuery::getGroupSortFields( void )
public array SolrQuery::getHighlightFields( void )
public array SolrQuery::getMltFields( void )
public array SolrQuery::getMltQueryFields( void )
public array SolrQuery::getSortFields( void )
public array SolrQuery::getStatsFacets( void )
public array SolrQuery::getStatsFields( void )
public array SolrServerException::getInternalInfo( void )
public array SphinxClient::buildExcerpts( array $docs , string $index , string $words  [, array $opts ])
public array SphinxClient::buildKeywords( string $query , string $index , bool $hits )
public array SphinxClient::query( string $query  [, string $index = "*"  [, string $comment = "" ]])
public array SphinxClient::runQueries( void )
public array SphinxClient::status( void )
public array SplEnum::getConstList([ bool $include_default = false ])
public array SplFileObject::fgetcsv([ string $delimiter = ","  [, string $enclosure = "\""  [, string $escape = "\\" ]]])
public array SplFileObject::fstat( void )
public array SplFileObject::getCsvControl( void )
public array SplFixedArray::toArray( void )
public array Stomp::getReadTimeout( void )
public array Threaded::chunk( integer $size , boolean $preserve )
public array Threaded::getTerminationInfo( void )
public array TokyoTyrant::fwmKeys( string $prefix , int $max_recs )
public array TokyoTyrant::stat( void )
public array TokyoTyrantQuery::current( void )
public array TokyoTyrantQuery::metaSearch( array $queries , int $type )
public array TokyoTyrantQuery::next( void )
public array TokyoTyrantQuery::search( void )
public array TokyoTyrantTable::get( mixed $keys )
public array VarnishAdmin::getParams( void )
public array VarnishLog::getLine( void )
public array VarnishStat::getSnapshot( void )
public array Yaf_Application::getModules( void )
public array Yaf_Config_Ini::toArray( void )
public array Yaf_Config_Simple::toArray( void )
public array ZMQPoll::getLastErrors( void )
public array ZMQSocket::getEndpoints( void )
public array streamWrapper::stream_stat( void )
public array streamWrapper::url_stat( string $path , int $flags )
public array[MongoCommandCursor] MongoCollection::parallelCollectionScan( int $num_cursors )
public bool AppendIterator::valid( void )
public bool ArrayIterator::valid( void )
public bool ArrayObject::offsetExists( mixed $index )
public bool CairoContext::hasCurrentPoint( void )
public bool CairoContext::inFill( string $x , string $y )
public bool CairoContext::inStroke( string $x , string $y )
public bool CairoFontOptions::equal( string $other )
public bool CairoPsSurface::getEps( void )
public bool Collator::setAttribute( int $attr , int $val )
public bool Collectable::isGarbage( void )
public bool DOMAttr::isId( void )
public bool DOMDocument::loadHTMLFile( string $filename  [, int $options = 0 ])
public bool DOMDocument::registerNodeClass( string $baseclass , string $extendedclass )
public bool DOMDocument::relaxNGValidate( string $filename )
public bool DOMDocument::relaxNGValidateSource( string $source )
public bool DOMDocument::schemaValidate( string $filename  [, int $flags ])
public bool DOMDocument::schemaValidateSource( string $source  [, int $flags ])
public bool DOMDocument::validate( void )
public bool DOMDocumentFragment::appendXML( string $data )
public bool DOMElement::hasAttribute( string $name )
public bool DOMElement::hasAttributeNS( string $namespaceURI , string $localName )
public bool DOMElement::removeAttribute( string $name )
public bool DOMElement::removeAttributeNS( string $namespaceURI , string $localName )
public bool DOMElement::removeAttributeNode( DOMAttr $oldnode )
public bool DOMImplementation::hasFeature( string $feature , string $version )
public bool DOMNode::hasAttributes( void )
public bool DOMNode::hasChildNodes( void )
public bool DOMNode::isDefaultNamespace( string $namespaceURI )
public bool DOMNode::isSameNode( DOMNode $node )
public bool DOMNode::isSupported( string $feature , string $version )
public bool DOMText::isWhitespaceInElementContent( void )
public bool DOMXPath::registerNamespace( string $prefix , string $namespaceURI    )
public bool DirectoryIterator::isDir( void )
public bool DirectoryIterator::isDot( void )
public bool DirectoryIterator::isExecutable( void )
public bool DirectoryIterator::isFile( void )
public bool DirectoryIterator::isLink( void )
public bool DirectoryIterator::isReadable( void )
public bool DirectoryIterator::isWritable( void )
public bool DirectoryIterator::valid( void )
public bool EmptyIterator::valid( void )
public bool EvStat::stat( void )
public bool EvWatcher::keepalive([ bool $value  ])
public bool Event::add([ double $timeout  ])
public bool Event::addSignal([ double $timeout  ])
public bool Event::addTimer([ double $timeout  ])
public bool Event::del( void )
public bool Event::delSignal( void )
public bool Event::delTimer( void )
public bool Event::pending( int $flags )
public bool Event::set( EventBase $base , mixed $fd  [, int $what  [, callable $cb  [, mixed $arg  ]]])
public bool Event::setPriority( int $priority )
public bool Event::setTimer( EventBase $base , callable $cb  [, mixed $arg  ])
public bool EventBase::exit([ double $timeout  ])
public bool EventBase::gotExit( void )
public bool EventBase::gotStop( void )
public bool EventBase::loop([ int $flags  ])
public bool EventBase::priorityInit( int $n_priorities )
public bool EventBase::reInit( void )
public bool EventBase::stop( void )
public bool EventBuffer::add( string $data )
public bool EventBuffer::addBuffer( EventBuffer $buf )
public bool EventBuffer::drain( int $len )
public bool EventBuffer::expand( int $len )
public bool EventBuffer::freeze( bool $at_front )
public bool EventBuffer::prepend( string $data )
public bool EventBuffer::prependBuffer( EventBuffer $buf )
public bool EventBuffer::unfreeze( bool $at_front )
public bool EventBuffer::unlock( void )
public bool EventBufferEvent::connect( string $addr )
public bool EventBufferEvent::connectHost( EventDnsBase $dns_base , string $hostname , int $port  [, int $family = EventUtil::AF_UNSPEC  ])
public bool EventBufferEvent::disable( int $events )
public bool EventBufferEvent::enable( int $events )
public bool EventBufferEvent::readBuffer( EventBuffer $buf )
public bool EventBufferEvent::setPriority( int $priority )
public bool EventBufferEvent::setTimeouts( float $timeout_read , float $timeout_write )
public bool EventBufferEvent::write( string $data )
public bool EventBufferEvent::writeBuffer( EventBuffer $buf )
public bool EventConfig::avoidMethod( int $method )
public bool EventConfig::requireFeatures( int $feature )
public bool EventDnsBase::addNameserverIp( string $ip )
public bool EventDnsBase::loadHosts( string $hosts )
public bool EventDnsBase::parseResolvConf( int $flags , string $filename )
public bool EventDnsBase::setOption( string $option , string $value )
public bool EventDnsBase::setSearchNdots( int $ndots )
public bool EventHttp::accept( mixed $socket )
public bool EventHttp::addServerAlias( string $alias )
public bool EventHttp::removeServerAlias( string $alias )
public bool EventHttpConnection::makeRequest( EventHttpRequest $req , int $type , string $uri )
public bool EventHttpRequest::addHeader( string $key , string $value , int $type )
public bool EventListener::disable( void )
public bool EventListener::enable( void )
public bool FANNConnection::setWeight( float $weight )
public bool FilterIterator::valid( void )
public bool GearmanClient::addOptions( int $options )
public bool GearmanClient::addServer([ string $host = 127.0.0.1  [, int $port = 4730 ]])
public bool GearmanClient::addServers([ string $servers = 127.0.0.1:4730 ])
public bool GearmanClient::clearCallbacks( void )
public bool GearmanClient::echo( string $workload )
public bool GearmanClient::ping( string $workload )
public bool GearmanClient::removeOptions( int $options )
public bool GearmanClient::runTasks( void )
public bool GearmanClient::setCompleteCallback( callable $callback )
public bool GearmanClient::setContext( string $context )
public bool GearmanClient::setCreatedCallback( string $callback )
public bool GearmanClient::setData( string $data )
public bool GearmanClient::setDataCallback( callable $callback )
public bool GearmanClient::setExceptionCallback( callable $callback )
public bool GearmanClient::setFailCallback( callable $callback )
public bool GearmanClient::setOptions( int $options )
public bool GearmanClient::setStatusCallback( callable $callback )
public bool GearmanClient::setTimeout( int $timeout )
public bool GearmanClient::setWarningCallback( callable $callback )
public bool GearmanClient::setWorkloadCallback( callable $callback )
public bool GearmanJob::complete( string $result )
public bool GearmanJob::data( string $data )
public bool GearmanJob::exception( string $exception )
public bool GearmanJob::fail( void )
public bool GearmanJob::sendComplete( string $result )
public bool GearmanJob::sendData( string $data )
public bool GearmanJob::sendException( string $exception )
public bool GearmanJob::sendFail( void )
public bool GearmanJob::sendStatus( int $numerator , int $denominator )
public bool GearmanJob::sendWarning( string $warning )
public bool GearmanJob::setReturn( int $gearman_return_t )
public bool GearmanJob::status( int $numerator , int $denominator )
public bool GearmanJob::warning( string $warning )
public bool GearmanTask::isKnown( void )
public bool GearmanTask::isRunning( void )
public bool GearmanWorker::addFunction( string $function_name , callable $function  [, mixed &$context  [, int $timeout ]])
public bool GearmanWorker::addOptions( int $option )
public bool GearmanWorker::addServer([ string $host = 127.0.0.1  [, int $port = 4730 ]])
public bool GearmanWorker::addServers( string $servers = 127.0.0.1:4730 )
public bool GearmanWorker::echo( string $workload )
public bool GearmanWorker::register( string $function_name  [, int $timeout ])
public bool GearmanWorker::removeOptions( int $option )
public bool GearmanWorker::setId( string $id )
public bool GearmanWorker::setOptions( int $option )
public bool GearmanWorker::setTimeout( int $timeout )
public bool GearmanWorker::unregister( string $function_name )
public bool GearmanWorker::unregisterAll( void )
public bool GearmanWorker::wait( void )
public bool GearmanWorker::work( void )
public bool Generator::valid( void )
public bool Gmagick::destroy( void )
public bool Gmagick::nextimage( void )
public bool Gmagick::previousimage( void )
public bool HRTime\PerformanceCounter::isRunning( void )
public bool Imagick::deskewImage( float $threshold )
public bool Imagick::haldClutImage( Imagick $clut  [, int $channel = Imagick::CHANNEL_DEFAULT ])
public bool Imagick::importImagePixels( int $x , int $y , int $width , int $height , string $map , int $storage , array $pixels )
public bool Imagick::remapImage( Imagick $replacement , int $DITHER )
public bool Imagick::segmentImage( int $COLORSPACE , float $cluster_threshold , float $smooth_threshold  [, bool $verbose = false ])
public bool Imagick::sparseColorImage( int $SPARSE_METHOD , array $arguments  [, int $channel = Imagick::CHANNEL_DEFAULT ])
public bool ImagickPixel::isPixelSimilarQuantum( string $color  [, string $fuzz ])
public bool IntlCalendar::equals( IntlCalendar $other )
public bool IntlCalendar::isEquivalentTo( IntlCalendar $other )
public bool IntlCalendar::isLenient( void )
public bool IntlCalendar::isSet( int $field )
public bool IntlCalendar::roll( int $field , mixed $amountOrUpOrDown )
public bool IntlCalendar::setRepeatedWallTimeOption( int $wallTimeOption )
public bool IntlCalendar::setSkippedWallTimeOption( int $wallTimeOption )
public bool IntlDateFormatter::isLenient ( void )
public bool IntlDateFormatter::setLenient ( bool $lenient )
public bool IntlDateFormatter::setPattern ( string $pattern )
public bool IntlDateFormatter::setTimeZoneId ( string $zone )
public bool IntlTimeZone::hasSameRules( IntlTimeZone $otherTimeZone )
public bool IntlTimeZone::useDaylightTime( void )
public bool IteratorIterator::valid( void )
public bool Judy::offsetExists( mixed $offset )
public bool Judy::offsetSet( mixed $offset , mixed $value )
public bool Judy::offsetUnset( mixed $offset )
public bool KTaglib_ID3v2_AttachedPictureFrame::savePicture  ( string $filename  )
public bool KTaglib_ID3v2_Tag::addFrame( KTaglib_ID3v2_Frame $frame )
public bool KTaglib_MPEG_AudioProperties::isCopyrighted( void )
public bool KTaglib_MPEG_AudioProperties::isOriginal( void )
public bool KTaglib_MPEG_AudioProperties::isProtectionEnabled( void )
public bool KTaglib_Tag::isEmpty  ( void  )
public bool LimitIterator::valid( void )
public bool Memcached::addByKey( string $server_key , string $key , mixed $value  [, int $expiration ])
public bool Memcached::addServer( string $host , int $port  [, int $weight = 0 ])
public bool Memcached::append( string $key , string $value )
public bool Memcached::appendByKey( string $server_key , string $key , string $value )
public bool Memcached::cas( float $cas_token , string $key , mixed $value  [, int $expiration ])
public bool Memcached::casByKey( float $cas_token , string $server_key , string $key , mixed $value  [, int $expiration ])
public bool Memcached::delete( string $key  [, int $time = 0 ])
public bool Memcached::deleteByKey( string $server_key , string $key  [, int $time = 0 ])
public bool Memcached::deleteMulti( array $keys  [, int $time = 0 ])
public bool Memcached::deleteMultiByKey( string $server_key , array $keys  [, int $time = 0 ])
public bool Memcached::flush([ int $delay = 0 ])
public bool Memcached::getDelayed( array $keys  [, bool $with_cas  [, callable $value_cb ]])
public bool Memcached::getDelayedByKey( string $server_key , array $keys  [, bool $with_cas  [, callable $value_cb ]])
public bool Memcached::isPersistent( void )
public bool Memcached::isPristine( void )
public bool Memcached::prepend( string $key , string $value )
public bool Memcached::prependByKey( string $server_key , string $key , string $value )
public bool Memcached::quit( void )
public bool Memcached::replace( string $key , mixed $value  [, int $expiration ])
public bool Memcached::replaceByKey( string $server_key , string $key , mixed $value  [, int $expiration ])
public bool Memcached::resetServerList( void )
public bool Memcached::set( string $key , mixed $value  [, int $expiration ])
public bool Memcached::setByKey( string $server_key , string $key , mixed $value  [, int $expiration ])
public bool Memcached::setMulti( array $items  [, int $expiration ])
public bool Memcached::setMultiByKey( string $server_key , array $items  [, int $expiration ])
public bool Memcached::setOption( int $option , mixed $value )
public bool Memcached::setOptions( array $options )
public bool Memcached::touch( string $key , int $expiration )
public bool Memcached::touchByKey( string $server_key , string $key , int $expiration )
public bool MessageFormatter::setPattern( string $pattern )
public bool Mongo::getSlaveOkay( void )
public bool Mongo::setSlaveOkay([ bool $ok = true ])
public bool MongoClient::close([ boolean|string $connection ])
public bool MongoClient::connect( void )
public bool MongoClient::killCursor( string $server_hash , int|MongoInt64 $id )
public bool MongoClient::setReadPreference( string $read_preference  [, array $tags ])
public bool MongoClient::setWriteConcern( mixed $w  [, int $wtimeout ])
public bool MongoCollection::createIndex( array $keys  [, array $options = array() ])
public bool MongoCollection::ensureIndex( string|array $key|keys  [, array $options = array() ])
public bool MongoCollection::getSlaveOkay( void )
public bool MongoCollection::setReadPreference( string $read_preference  [, array $tags ])
public bool MongoCollection::setSlaveOkay([ bool $ok = true ])
public bool MongoCollection::setWriteConcern( mixed $w  [, int $wtimeout ])
public bool MongoCommandCursor::dead( void )
public bool MongoCommandCursor::valid( void )
public bool MongoCursor::dead( void )
public bool MongoCursor::hasNext( void )
public bool MongoCursor::valid( void )
public bool MongoDB::forceError( void )
public bool MongoDB::getSlaveOkay( void )
public bool MongoDB::setReadPreference( string $read_preference  [, array $tags ])
public bool MongoDB::setSlaveOkay([ bool $ok = true ])
public bool MongoDB::setWriteConcern( mixed $w  [, int $wtimeout ])
public bool MongoWriteBatch::add( array $item )
public bool MultipleIterator::containsIterator( Iterator $iterator )
public bool MultipleIterator::valid( void )
public bool MysqlndUhConnection::changeUser( mysqlnd_connection $connection , string $user , string $password , string $database , bool $silent , int $passwd_len )
public bool MysqlndUhConnection::close( mysqlnd_connection $connection , int $close_type )
public bool MysqlndUhConnection::connect( mysqlnd_connection $connection , string $host , string $use" , string $password , string $database , int $port , string $socket , int $mysql_flags )
public bool MysqlndUhConnection::endPSession( mysqlnd_connection $connection )
public bool MysqlndUhConnection::init( mysqlnd_connection $connection )
public bool MysqlndUhConnection::killConnection( mysqlnd_connection $connection , int $pid )
public bool MysqlndUhConnection::moreResults( mysqlnd_connection $connection )
public bool MysqlndUhConnection::nextResult( mysqlnd_connection $connection )
public bool MysqlndUhConnection::ping( mysqlnd_connection $connection )
public bool MysqlndUhConnection::query( mysqlnd_connection $connection , string $query )
public bool MysqlndUhConnection::queryReadResultsetHeader( mysqlnd_connection $connection , mysqlnd_statement $mysqlnd_stmt )
public bool MysqlndUhConnection::reapQuery( mysqlnd_connection $connection )
public bool MysqlndUhConnection::refreshServer( mysqlnd_connection $connection , int $options )
public bool MysqlndUhConnection::restartPSession( mysqlnd_connection $connection )
public bool MysqlndUhConnection::selectDb( mysqlnd_connection $connection , string $database )
public bool MysqlndUhConnection::sendClose( mysqlnd_connection $connection )
public bool MysqlndUhConnection::sendQuery( mysqlnd_connection $connection , string $query )
public bool MysqlndUhConnection::serverDumpDebugInformation( mysqlnd_connection $connection )
public bool MysqlndUhConnection::setAutocommit( mysqlnd_connection $connection , int $mode )
public bool MysqlndUhConnection::setCharset( mysqlnd_connection $connection , string $charset )
public bool MysqlndUhConnection::setClientOption( mysqlnd_connection $connection , int $option , int $value )
public bool MysqlndUhConnection::simpleCommand( mysqlnd_connection $connection , int $command , string $arg , int $ok_packet , bool $silent , bool $ignore_upsert_status )
public bool MysqlndUhConnection::simpleCommandHandleResponse( mysqlnd_connection $connection , int $ok_packet , bool $silent , int $command , bool $ignore_upsert_status )
public bool MysqlndUhConnection::sslSet( mysqlnd_connection $connection , string $key , string $cert , string $ca , string $capath , string $cipher )
public bool MysqlndUhConnection::txCommit( mysqlnd_connection $connection )
public bool MysqlndUhConnection::txRollback( mysqlnd_connection $connection )
public bool MysqlndUhPreparedStatement::execute( mysqlnd_prepared_statement $statement )
public bool MysqlndUhPreparedStatement::prepare( mysqlnd_prepared_statement $statement , string $query )
public bool NoRewindIterator::valid( void )
public bool NumberFormatter::setAttribute( int $attr , int $value )
public bool NumberFormatter::setPattern( string $pattern )
public bool NumberFormatter::setSymbol( int $attr , string $value )
public bool NumberFormatter::setTextAttribute( int $attr , string $value )
public bool OAuth::disableDebug( void )
public bool OAuth::disableRedirects( void )
public bool OAuth::disableSSLChecks( void )
public bool OAuth::enableDebug( void )
public bool OAuth::enableRedirects( void )
public bool OAuth::enableSSLChecks( void )
public bool OAuth::setSSLChecks( int $sslcheck )
public bool OAuth::setToken( string $token , string $token_secret )
public bool OAuth::setVersion( string $version )
public bool PDO::beginTransaction( void )
public bool PDO::commit( void )
public bool PDO::inTransaction( void )
public bool PDO::pgsqlCopyFromArray( string $table_name , array $rows  [, string $delimiter = '\t'  [, string $null_as = "\\\\N"  [, string $fields ]]])
public bool PDO::pgsqlCopyFromFile( string $table_name , string $filename  [, string $delimiter = '\t'  [, string $null_as = "\\\\N"  [, string $fields ]]])
public bool PDO::pgsqlCopyToFile( string $table_name , string $filename  [, string $delimiter = '\t'  [, string $null_as = "\\\\N"  [, string $fields ]]])
public bool PDO::pgsqlLOBUnlink( string $oid )
public bool PDO::rollBack( void )
public bool PDO::setAttribute( int $attribute , mixed $value )
public bool PDO::sqliteCreateAggregate( string $function_name , callable $step_func , callable $finalize_func  [, int $num_args ])
public bool PDO::sqliteCreateCollation( string $name , callable $callback )
public bool PDO::sqliteCreateFunction( string $function_name , callable $callback  [, int $num_args ])
public bool PDOStatement::bindColumn ( mixed $column , mixed &$param  [, int $type  [, int $maxlen  [, mixed $driverdata  ]]])
public bool PDOStatement::bindParam( mixed $parameter , mixed &$variable  [, int $data_type = PDO::PARAM_STR  [, int $length  [, mixed $driver_options ]]])
public bool PDOStatement::closeCursor( void )
public bool PDOStatement::execute([ array $input_parameters ])
public bool PDOStatement::nextRowset( void )
public bool PDOStatement::setAttribute( int $attribute , mixed $value )
public bool PDOStatement::setFetchMode( int $mode )
public bool ParentIterator::accept( void )
public bool ParentIterator::hasChildren( void )
public bool Phar::compressAllFilesBZIP2( void )
public bool Phar::compressAllFilesGZ( void )
public bool Phar::copy( string $oldfile , string $newfile )
public bool Phar::decompressFiles( void )
public bool Phar::delMetadata( void )
public bool Phar::delete( string $entry )
public bool Phar::extractTo( string $pathto  [, string|array $files  [, bool $overwrite = false ]])
public bool Phar::getModified( void )
public bool Phar::hasMetadata( void )
public bool Phar::isBuffering( void )
public bool Phar::isFileFormat( int $format )
public bool Phar::isWritable( void )
public bool Phar::offsetExists( string $offset )
public bool Phar::offsetUnset( string $offset )
public bool Phar::setAlias( string $alias )
public bool Phar::setDefaultStub([ string $index  [, string $webindex ]])
public bool Phar::setStub( string $stub  [, int $len = -1 ])
public bool Phar::uncompressAllFiles( void )
public bool PharFileInfo::compress( int $compression )
public bool PharFileInfo::decompress( void )
public bool PharFileInfo::delMetadata( void )
public bool PharFileInfo::hasMetadata( void )
public bool PharFileInfo::isCRCChecked( void )
public bool PharFileInfo::isCompressed([ int $compression_type = 9021976 ])
public bool PharFileInfo::isCompressedBZIP2( void )
public bool PharFileInfo::isCompressedGZ( void )
public bool PharFileInfo::setCompressedBZIP2( void )
public bool PharFileInfo::setCompressedGZ( void )
public bool PharFileInfo::setUncompressed( void )
public bool QuickHashIntHash::add( int $key  [, int $value ])
public bool QuickHashIntHash::delete( int $key )
public bool QuickHashIntHash::exists( int $key )
public bool QuickHashIntHash::set( int $key , int $value )
public bool QuickHashIntHash::update( int $key , int $value )
public bool QuickHashIntSet::add( int $key )
public bool QuickHashIntSet::delete( int $key )
public bool QuickHashIntSet::exists( int $key )
public bool QuickHashIntStringHash::add( int $key , string $value )
public bool QuickHashIntStringHash::delete( int $key )
public bool QuickHashIntStringHash::exists( int $key )
public bool QuickHashIntStringHash::update( int $key , string $value )
public bool QuickHashStringIntHash::add( string $key , int $value )
public bool QuickHashStringIntHash::delete( string $key )
public bool QuickHashStringIntHash::exists( string $key )
public bool QuickHashStringIntHash::update( string $key , int $value )
public bool RRDCreator::save( void )
public bool RRDUpdater::update ( array $values  [, string $time = time()  ])
public bool RarArchive::close( void )
public bool RarArchive::isBroken( void )
public bool RarArchive::isSolid( void )
public bool RarArchive::setAllowBroken ( bool $allow_broken )
public bool RarEntry::extract ( string $dir  [, string $filepath = ""  [, string $password = NULL  [, bool $extended_data = false  ]]])
public bool RarEntry::isDirectory( void )
public bool RarEntry::isEncrypted( void )
public bool RecursiveArrayIterator::hasChildren( void )
public bool RecursiveCachingIterator::hasChildren( void )
public bool RecursiveCallbackFilterIterator::hasChildren( void )
public bool RecursiveDirectoryIterator::hasChildren([ bool $allow_links = false ])
public bool RecursiveFilterIterator::hasChildren( void )
public bool RecursiveIterator::hasChildren( void )
public bool RecursiveIteratorIterator::callHasChildren( void )
public bool RecursiveIteratorIterator::valid( void )
public bool RecursiveRegexIterator::hasChildren( void )
public bool RecursiveTreeIterator::callHasChildren( void )
public bool RecursiveTreeIterator::valid( void )
public bool ReflectionClass::hasConstant( string $name )
public bool ReflectionClass::hasMethod( string $name )
public bool ReflectionClass::hasProperty( string $name )
public bool ReflectionClass::implementsInterface( string $interface )
public bool ReflectionClass::inNamespace( void )
public bool ReflectionClass::isAbstract( void )
public bool ReflectionClass::isAnonymous( void )
public bool ReflectionClass::isCloneable( void )
public bool ReflectionClass::isFinal( void )
public bool ReflectionClass::isInstance( object $object )
public bool ReflectionClass::isInstantiable( void )
public bool ReflectionClass::isInterface( void )
public bool ReflectionClass::isInternal( void )
public bool ReflectionClass::isIterateable( void )
public bool ReflectionClass::isSubclassOf( string $class )
public bool ReflectionClass::isTrait( void )
public bool ReflectionClass::isUserDefined( void )
public bool ReflectionFunction::isDisabled( void )
public bool ReflectionFunctionAbstract::hasReturnType( void )
public bool ReflectionFunctionAbstract::inNamespace( void )
public bool ReflectionFunctionAbstract::isClosure( void )
public bool ReflectionFunctionAbstract::isDeprecated( void )
public bool ReflectionFunctionAbstract::isGenerator( void )
public bool ReflectionFunctionAbstract::isInternal( void )
public bool ReflectionFunctionAbstract::isUserDefined( void )
public bool ReflectionFunctionAbstract::isVariadic( void )
public bool ReflectionFunctionAbstract::returnsReference( void )
public bool ReflectionMethod::isAbstract( void )
public bool ReflectionMethod::isConstructor( void )
public bool ReflectionMethod::isDestructor( void )
public bool ReflectionMethod::isFinal( void )
public bool ReflectionMethod::isPrivate( void )
public bool ReflectionMethod::isProtected( void )
public bool ReflectionMethod::isPublic( void )
public bool ReflectionMethod::isStatic( void )
public bool ReflectionParameter::allowsNull( void )
public bool ReflectionParameter::canBePassedByValue( void )
public bool ReflectionParameter::hasType( void )
public bool ReflectionParameter::isArray( void )
public bool ReflectionParameter::isCallable( void )
public bool ReflectionParameter::isDefaultValueAvailable( void )
public bool ReflectionParameter::isDefaultValueConstant( void )
public bool ReflectionParameter::isOptional( void )
public bool ReflectionParameter::isPassedByReference( void )
public bool ReflectionParameter::isVariadic( void )
public bool ReflectionProperty::isDefault( void )
public bool ReflectionProperty::isPrivate( void )
public bool ReflectionProperty::isProtected( void )
public bool ReflectionProperty::isPublic( void )
public bool ReflectionProperty::isStatic( void )
public bool ReflectionType::allowsNull( void )
public bool ReflectionType::isBuiltin( void )
public bool RegexIterator::accept( void )
public bool SNMP::close( void )
public bool SNMP::set( mixed $object_id , mixed $type , mixed $value )
public bool SNMP::setSecurity( string $sec_level  [, string $auth_protocol =  [, string $auth_passphrase =  [, string $priv_protocol =  [, string $priv_passphrase =  [, string $contextName =  [, string $contextEngineID =  ]]]]]])
public bool SQLite3::busyTimeout( int $msecs )
public bool SQLite3::close( void )
public bool SQLite3::createAggregate( string $name , mixed $step_callback , mixed $final_callback  [, int $argument_count = -1 ])
public bool SQLite3::createCollation( string $name , callable $callback )
public bool SQLite3::createFunction( string $name , mixed $callback  [, int $argument_count = -1 ])
public bool SQLite3::loadExtension( string $shared_library )
public bool SQLite3Result::finalize( void )
public bool SQLite3Result::reset( void )
public bool SQLite3Stmt::bindParam( string $sql_param , mixed &$param  [, int $type ])
public bool SQLite3Stmt::bindValue( string $sql_param , mixed $value  [, int $type ])
public bool SQLite3Stmt::clear( void )
public bool SQLite3Stmt::close( void )
public bool SQLite3Stmt::reset( void )
public bool SVM::setOptions( array $params )
public bool SVMModel::checkProbabilityModel( void )
public bool SVMModel::load( string $filename )
public bool SVMModel::save( string $filename )
public bool SessionHandler::close( void )
public bool SessionHandler::destroy( string $session_id )
public bool SessionHandler::gc( int $maxlifetime )
public bool SessionHandler::open( string $save_path , string $session_name )
public bool SessionHandler::write( string $session_id , string $session_data )
public bool SimpleXMLElement::registerXPathNamespace( string $prefix , string $ns )
public bool SimpleXMLIterator::hasChildren( void )
public bool SimpleXMLIterator::valid( void )
public bool SoapClient::__setSoapHeaders([ mixed $soapheaders ])
public bool SolrClient::setServlet( int $type , string $value )
public bool SolrDocument::__isset( string $fieldName )
public bool SolrDocument::__set( string $fieldName , string $fieldValue )
public bool SolrDocument::__unset( string $fieldName )
public bool SolrDocument::addField( string $fieldName , string $fieldValue )
public bool SolrDocument::clear( void )
public bool SolrDocument::deleteField( string $fieldName )
public bool SolrDocument::fieldExists( string $fieldName )
public bool SolrDocument::merge( SolrDocument $sourceDoc  [, bool $overwrite = true ])
public bool SolrDocument::offsetExists( string $fieldName )
public bool SolrDocument::reset( void )
public bool SolrDocument::sort( int $sortOrderBy  [, int $sortDirection = SolrDocument::SORT_ASC ])
public bool SolrDocument::valid( void )
public bool SolrInputDocument::clear( void )
public bool SolrInputDocument::deleteField( string $fieldName )
public bool SolrInputDocument::fieldExists( string $fieldName )
public bool SolrInputDocument::merge( SolrInputDocument $sourceDoc  [, bool $overwrite = true ])
public bool SolrInputDocument::reset( void )
public bool SolrInputDocument::setBoost( float $documentBoostValue )
public bool SolrInputDocument::setFieldBoost( string $fieldName , float $fieldBoostValue )
public bool SolrInputDocument::sort( int $sortOrderBy  [, int $sortDirection = SolrInputDocument::SORT_ASC ])
public bool SolrObject::offsetExists( string $property_name )
public bool SolrQuery::getExpand( void )
public bool SolrQuery::getFacet( void )
public bool SolrQuery::getFacetMissing([ string $field_override ])
public bool SolrQuery::getGroup( void )
public bool SolrQuery::getGroupFacet( void )
public bool SolrQuery::getGroupMain( void )
public bool SolrQuery::getGroupNGroups( void )
public bool SolrQuery::getGroupTruncate( void )
public bool SolrQuery::getHighlight( void )
public bool SolrQuery::getHighlightHighlightMultiTerm( void )
public bool SolrQuery::getHighlightMergeContiguous([ string $field_override ])
public bool SolrQuery::getHighlightRequireFieldMatch( void )
public bool SolrQuery::getHighlightUsePhraseHighlighter( void )
public bool SolrQuery::getMlt( void )
public bool SolrQuery::getMltBoost( void )
public bool SolrQuery::getStats( void )
public bool SolrQuery::getTerms( void )
public bool SolrQuery::getTermsIncludeLowerBound( void )
public bool SolrQuery::getTermsIncludeUpperBound( void )
public bool SolrQuery::getTermsReturnRaw( void )
public bool SolrResponse::setParseMode([ int $parser_mode = 0 ])
public bool SolrResponse::success( void )
public bool SphinxClient::close( void )
public bool SphinxClient::open( void )
public bool SphinxClient::setArrayResult( bool $array_result = false )
public bool SphinxClient::setConnectTimeout( float $timeout )
public bool SphinxClient::setFieldWeights( array $weights )
public bool SphinxClient::setFilter( string $attribute , array $values  [, bool $exclude = false ])
public bool SphinxClient::setFilterFloatRange( string $attribute , float $min , float $max  [, bool $exclude = false ])
public bool SphinxClient::setFilterRange( string $attribute , int $min , int $max  [, bool $exclude = false ])
public bool SphinxClient::setGeoAnchor( string $attrlat , string $attrlong , float $latitude , float $longitude )
public bool SphinxClient::setGroupBy( string $attribute , int $func  [, string $groupsort = "@group desc" ])
public bool SphinxClient::setGroupDistinct( string $attribute )
public bool SphinxClient::setIDRange( int $min , int $max )
public bool SphinxClient::setIndexWeights( array $weights )
public bool SphinxClient::setLimits( int $offset , int $limit  [, int $max_matches = 0  [, int $cutoff = 0 ]])
public bool SphinxClient::setMatchMode( int $mode )
public bool SphinxClient::setMaxQueryTime( int $qtime )
public bool SphinxClient::setOverride( string $attribute , int $type , array $values )
public bool SphinxClient::setRetries( int $count  [, int $delay = 0 ])
public bool SphinxClient::setSelect( string $clause )
public bool SphinxClient::setServer( string $server , int $port )
public bool SphinxClient::setSortMode( int $mode  [, string $sortby ])
public bool SplDoublyLinkedList::isEmpty( void )
public bool SplDoublyLinkedList::offsetExists( mixed $index )
public bool SplDoublyLinkedList::valid( void )
public bool SplFileInfo::isDir( void )
public bool SplFileInfo::isExecutable( void )
public bool SplFileInfo::isFile( void )
public bool SplFileInfo::isLink( void )
public bool SplFileInfo::isReadable( void )
public bool SplFileInfo::isWritable( void )
public bool SplFileObject::eof( void )
public bool SplFileObject::fflush( void )
public bool SplFileObject::flock( int $operation  [, int &$wouldblock ])
public bool SplFileObject::ftruncate( int $size )
public bool SplFileObject::hasChildren( void )
public bool SplFileObject::valid( void )
public bool SplFixedArray::offsetExists( int $index )
public bool SplFixedArray::valid( void )
public bool SplHeap::isEmpty( void )
public bool SplHeap::valid( void )
public bool SplObjectStorage::contains( object $object )
public bool SplObjectStorage::offsetExists( object $object )
public bool SplObjectStorage::valid( void )
public bool SplPriorityQueue::isEmpty( void )
public bool SplPriorityQueue::valid( void )
public bool Spoofchecker::areConfusable( string $s1 , string $s2  [, string &$error ])
public bool Spoofchecker::isSuspicious( string $text  [, string &$error ])
public bool Stomp::__destruct( void )
public bool Stomp::abort( string $transaction_id  [, array $headers  ])
public bool Stomp::ack( mixed $msg  [, array $headers  ])
public bool Stomp::begin( string $transaction_id  [, array $headers  ])
public bool Stomp::commit( string $transaction_id  [, array $headers  ])
public bool Stomp::hasFrame( void )
public bool Stomp::send( string $destination , mixed $msg  [, array $headers  ])
public bool Stomp::subscribe( string $destination  [, array $headers  ])
public bool Stomp::unsubscribe( string $destination  [, array $headers  ])
public bool SyncEvent::fire( void )
public bool SyncEvent::reset( void )
public bool SyncEvent::wait([ integer $wait ])
public bool SyncMutex::lock([ integer $wait ])
public bool SyncMutex::unlock([ bool $all ])
public bool SyncReaderWriter::readlock([ integer $wait ])
public bool SyncReaderWriter::readunlock( void )
public bool SyncReaderWriter::writelock([ integer $wait ])
public bool SyncReaderWriter::writeunlock( void )
public bool SyncSemaphore::lock([ integer $wait ])
public bool SyncSemaphore::unlock([ integer &$prevcount ])
public bool Threaded::extend( string $class )
public bool TokyoTyrantIterator::valid( void )
public bool TokyoTyrantQuery::rewind( void )
public bool TokyoTyrantQuery::valid( void )
public bool VarnishAdmin::auth( void )
public bool VarnishAdmin::connect( void )
public bool VarnishAdmin::disconnect( void )
public bool VarnishAdmin::isRunning( void )
public bool WeakMap::offsetExists( object $object )
public bool WeakMap::valid( void )
public bool Weakref::acquire( void )
public bool Weakref::release( void )
public bool Weakref::valid( void )
public bool XMLReader::close( void )
public bool XMLReader::getParserProperty( int $property )
public bool XMLReader::isValid( void )
public bool XMLReader::moveToAttribute( string $name )
public bool XMLReader::moveToAttributeNo( int $index )
public bool XMLReader::moveToAttributeNs( string $localName , string $namespaceURI )
public bool XMLReader::moveToElement( void )
public bool XMLReader::moveToFirstAttribute( void )
public bool XMLReader::moveToNextAttribute( void )
public bool XMLReader::next([ string $localname ])
public bool XMLReader::open( string $URI  [, string $encoding  [, int $options = 0 ]])
public bool XMLReader::read( void )
public bool XMLReader::setParserProperty( int $property , bool $value )
public bool XMLReader::setRelaxNGSchema( string $filename )
public bool XMLReader::setRelaxNGSchemaSource( string $source )
public bool XMLReader::setSchema( string $filename )
public bool XMLReader::xml( string $source  [, string $encoding  [, int $options = 0 ]])
public bool XSLTProcessor::importStylesheet( object $stylesheet )
public bool Yaf_Controller_Abstract::redirect( string $url )
public bool Yaf_Dispatcher::disableView( void )
public bool Yaf_Request_Abstract::setBaseUri( string $uir )
public bool Yaf_Request_Http::isXmlHttpRequest( void )
public bool Yaf_Response_Abstract::appendBody( string $content  [, string $key ])
public bool Yaf_Response_Abstract::clearBody([ string $key ])
public bool Yaf_Response_Abstract::prependBody( string $content  [, string $key ])
public bool Yaf_Response_Abstract::setBody( string $content  [, string $key ])
public bool Yaf_Route_Map::route( Yaf_Request_Abstract $request )
public bool Yaf_Route_Regex::route( Yaf_Request_Abstract $request )
public bool Yaf_Route_Rewrite::route( Yaf_Request_Abstract $request )
public bool Yaf_Route_Simple::route( Yaf_Request_Abstract $request )
public bool Yaf_Route_Static::route( Yaf_Request_Abstract $request )
public bool Yaf_Route_Supervar::route( Yaf_Request_Abstract $request )
public bool Yaf_Router::addConfig( Yaf_Config_Abstract $config )
public bool Yaf_Router::addRoute( string $name , Yaf_Route_Abstract $route )
public bool Yaf_Router::route( Yaf_Request_Abstract $request )
public bool Yaf_View_Simple::assign( string $name  [, mixed $value ])
public bool Yaf_View_Simple::assignRef( string $name , mixed &$value )
public bool Yaf_View_Simple::clear([ string $name ])
public bool Yaf_View_Simple::display( string $tpl  [, array $tpl_vars ])
public bool Yaf_View_Simple::setScriptPath( string $template_dir )
public bool ZipArchive::setPassword( string $password )
public bool finfo::set_flags( int $options )
public bool mysqli::begin_transaction([ int $flags  [, string $name  ]])
public bool mysqli::refresh( int $options )
public bool mysqli::release_savepoint( string $name )
public bool mysqli::savepoint( string $name )
public bool mysqli_stmt::more_results( void )
public bool mysqli_stmt::next_result( void )
public bool php_user_filter::onCreate( void )
public bool streamWrapper::dir_closedir( void )
public bool streamWrapper::dir_opendir( string $path , int $options )
public bool streamWrapper::dir_rewinddir( void )
public bool streamWrapper::mkdir( string $path , int $mode , int $options )
public bool streamWrapper::rename( string $path_from , string $path_to )
public bool streamWrapper::rmdir( string $path , int $options )
public bool streamWrapper::stream_eof( void )
public bool streamWrapper::stream_flush( void )
public bool streamWrapper::stream_lock( int $operation )
public bool streamWrapper::stream_metadata( string $path , int $option , mixed $value )
public bool streamWrapper::stream_open( string $path , string $mode , int $options , string &$opened_path )
public bool streamWrapper::stream_seek( int $offset , int $whence = SEEK_SET )
public bool streamWrapper::stream_set_option( int $option , int $arg1 , int $arg2 )
public bool streamWrapper::stream_truncate( int $new_size )
public bool streamWrapper::unlink( string $path )
public boolean Gender\Gender::connect( string $dsn )
public boolean Thread::isJoined( void )
public boolean Thread::isStarted( void )
public boolean Thread::start([ integer $options ])
public boolean Threaded::isRunning( void )
public boolean Threaded::isTerminated( void )
public boolean Threaded::isWaiting( void )
public boolean Threaded::lock( void )
public boolean Threaded::merge( mixed $from  [, bool $overwrite ])
public boolean Threaded::notify( void )
public boolean Threaded::pop( void )
public boolean Threaded::unlock( void )
public boolean Threaded::wait([ integer $timeout ])
public boolean Worker::isShutdown( void )
public boolean Worker::isWorking( void )
public boolean Worker::shutdown( void )
public boolean Yar_Client::setOpt( number $name , mixed $value )
public boolean Yar_Server::handle( void )
public boolean ZMQContext::isPersistent( void )
public boolean ZMQPoll::remove( mixed $item )
public boolean ZMQSocket::isPersistent( void )
public bool|array MongoCollection::insert( array|object $document  [, array $options = array() ])
public bool|array MongoCollection::remove([ array $criteria = array()  [, array $options = array() ]])
public bool|array MongoGridFS::delete( mixed $id )
public bool|array MongoGridFS::remove([ array $criteria = array()  [, array $options = array() ]])
public chdb::__construct( string $pathname )
public double EvLoop::now( void )
public double EvPeriodic::at( void )
public double EventBase::getTimeOfDayCached( void )
public float CairoContext::getLineWidth( void )
public float CairoContext::getMiterLimit( void )
public float CairoContext::getTolerance( void )
public float Gmagick::getimagegamma( void )
public float GmagickDraw::getfillopacity( void )
public float GmagickDraw::getfontsize( void )
public float GmagickDraw::getstrokeopacity( void )
public float GmagickDraw::getstrokewidth( void )
public float GmagickPixel::getcolorvalue( int $color )
public float HRTime\StopWatch::getElapsedTime([ integer $unit ])
public float HRTime\StopWatch::getLastElapsedTime([ integer $unit ])
public float ImagickDraw::getTextInterlineSpacing( void )
public float ImagickDraw::getTextInterwordSpacing( void )
public float ImagickDraw::getTextKerning( void )
public float IntlCalendar::getTime( void )
public float NumberFormatter::parseCurrency( string $value , string &$currency  [, int &$position ])
public float SVMModel::getSvrProbability( void )
public float SVMModel::predict( array $data )
public float SVMModel::predict_probability( array $data )
public float SolrInputDocument::getBoost( void )
public float SolrInputDocument::getFieldBoost( string $fieldName )
public float SolrQuery::getHighlightRegexSlop( void )
public float svm::crossvalidate( array $problem , int $number_of_folds )
public int APCIterator::getTotalCount( void )
public int APCIterator::getTotalHits( void )
public int APCIterator::getTotalSize( void )
public int APCUIterator::getTotalCount( void )
public int APCUIterator::getTotalHits( void )
public int APCUIterator::getTotalSize( void )
public int AppendIterator::getIteratorIndex( void )
public int ArrayIterator::count( void )
public int ArrayObject::count( void )
public int ArrayObject::getFlags( void )
public int CachingIterator::count( void )
public int CachingIterator::getFlags( void )
public int CairoContext::getAntialias( void )
public int CairoContext::getDashCount( void )
public int CairoContext::getFillRule( void )
public int CairoContext::getLineCap( void )
public int CairoContext::getLineJoin( void )
public int CairoContext::getOperator( void )
public int CairoContext::status( void )
public int CairoFontFace::getType( void )
public int CairoFontFace::status( void )
public int CairoFontOptions::getAntialias( void )
public int CairoFontOptions::getHintMetrics( void )
public int CairoFontOptions::getHintStyle( void )
public int CairoFontOptions::getSubpixelOrder( void )
public int CairoFontOptions::hash( void )
public int CairoFontOptions::status( void )
public int CairoGradientPattern::getColorStopCount( void )
public int CairoGradientPattern::getExtend( void )
public int CairoImageSurface::getFormat( void )
public int CairoImageSurface::getHeight( void )
public int CairoImageSurface::getStride( void )
public int CairoImageSurface::getWidth( void )
public int CairoPattern::getType( void )
public int CairoPattern::status( void )
public int CairoScaledFont::getType( void )
public int CairoScaledFont::status( void )
public int CairoSurface::getContent( void )
public int CairoSurface::getType( void )
public int CairoSurface::status( void )
public int CairoSurfacePattern::getExtend( void )
public int CairoSurfacePattern::getFilter( void )
public int Collator::compare( string $str1 , string $str2 )
public int Collator::getAttribute( int $attr )
public int Collator::getErrorCode( void )
public int Collator::getStrength( void )
public int DOMDocument::xinclude([ int $options ])
public int DOMNode::C14NFile( string $uri  [, bool $exclusive  [, bool $with_comments  [, array $xpath  [, array $ns_prefixes ]]]])
public int DOMNode::getLineNo( void )
public int DateTime::getOffset( void )
public int DateTime::getTimestamp( void )
public int DateTimeZone::getOffset( DateTime $datetime )
public int DirectoryIterator::getATime( void )
public int DirectoryIterator::getCTime( void )
public int DirectoryIterator::getGroup( void )
public int DirectoryIterator::getInode( void )
public int DirectoryIterator::getMTime( void )
public int DirectoryIterator::getOwner( void )
public int DirectoryIterator::getPerms( void )
public int DirectoryIterator::getSize( void )
public int EvLoop::backend( void )
public int EvWatcher::clear( void )
public int EventBase::getFeatures( void )
public int EventBuffer::appendFrom( EventBuffer $buf , int $len )
public int EventBuffer::copyout( string &$data , int $max_bytes )
public int EventBuffer::read( mixed $fd , int $howmuch )
public int EventBuffer::write( mixed $fd  [, int $howmuch  ])
public int EventBufferEvent::getEnabled( void )
public int EventDnsBase::countNameservers( void )
public int EventHttpRequest::getResponseCode( void )
public int FANNConnection::getFromNeuron( void )
public int FANNConnection::getToNeuron( void )
public int FilesystemIterator::getFlags( void )
public int GearmanClient::getErrno( void )
public int GearmanClient::returnCode( void )
public int GearmanClient::timeout( void )
public int GearmanJob::returnCode( void )
public int GearmanJob::workloadSize( void )
public int GearmanTask::dataSize( void )
public int GearmanTask::returnCode( void )
public int GearmanTask::sendData( string $data )
public int GearmanTask::sendWorkload( string $data )
public int GearmanTask::taskDenominator( void )
public int GearmanTask::taskNumerator( void )
public int GearmanWorker::getErrno( void )
public int GearmanWorker::options( void )
public int GearmanWorker::returnCode( void )
public int GearmanWorker::timeout( void )
public int GlobIterator::count( void )
public int Gmagick::getimagechanneldepth( int $channel_type )
public int Gmagick::getimagecolors( void )
public int Gmagick::getimagecolorspace( void )
public int Gmagick::getimagecompose( void )
public int Gmagick::getimagedelay( void )
public int Gmagick::getimagedepth( void )
public int Gmagick::getimagedispose( void )
public int Gmagick::getimageheight( void )
public int Gmagick::getimageindex( void )
public int Gmagick::getimageinterlacescheme( void )
public int Gmagick::getimageiterations( void )
public int Gmagick::getimagematte( void )
public int Gmagick::getimagerenderingintent( void )
public int Gmagick::getimagescene( void )
public int Gmagick::getimagetype( void )
public int Gmagick::getimageunits( void )
public int Gmagick::getimagewidth( void )
public int GmagickDraw::getfontstyle( void )
public int GmagickDraw::getfontweight( void )
public int GmagickDraw::gettextdecoration( void )
public int GmagickPixel::getcolorcount( void )
public int HRTime\PerformanceCounter::getElapsedTicks( void )
public int HRTime\PerformanceCounter::getFrequency( void )
public int HRTime\PerformanceCounter::getLastElapsedTicks( void )
public int ImagickDraw::getFontStretch( void )
public int ImagickPixel::getIndex( void )
public int IntlCalendar::get( int $field )
public int IntlCalendar::getRepeatedWallTimeOption( void )
public int IntlCalendar::getSkippedWallTimeOption( void )
public int IntlDateFormatter::getDateType ( void )
public int IntlDateFormatter::getErrorCode ( void )
public int IntlDateFormatter::getTimeType( void )
public int IntlDateFormatter::parse( string $value  [, int &$position  ])
public int Judy::byCount( int $nth_index )
public int Judy::count([ int $index_start = 0  [, int $index_end = -1 ]])
public int Judy::firstEmpty([ mixed $index = 0 ])
public int Judy::free( void )
public int Judy::getType( void )
public int Judy::lastEmpty([ int $index = -1 ])
public int Judy::memoryUsage( void )
public int Judy::nextEmpty( int $index )
public int Judy::prevEmpty( mixed $index )
public int KTaglib_ID3v2_AttachedPictureFrame::getType  ( void  )
public int KTaglib_ID3v2_Frame::getSize  ( void  )
public int KTaglib_MPEG_AudioProperties::getBitrate( void )
public int KTaglib_MPEG_AudioProperties::getChannels( void )
public int KTaglib_MPEG_AudioProperties::getLayer( void )
public int KTaglib_MPEG_AudioProperties::getLength( void )
public int KTaglib_MPEG_AudioProperties::getSampleBitrate( void )
public int KTaglib_MPEG_AudioProperties::getVersion( void )
public int KTaglib_Tag::getTrack  ( void  )
public int KTaglib_Tag::getYear  ( void  )
public int LimitIterator::getPosition( void )
public int LimitIterator::seek( int $position )
public int Memcached::decrement( string $key  [, int $offset = 1  [, int $initial_value = 0  [, int $expiry = 0 ]]])
public int Memcached::decrementByKey( string $server_key , string $key  [, int $offset = 1  [, int $initial_value = 0  [, int $expiry = 0 ]]])
public int Memcached::getResultCode( void )
public int Memcached::increment( string $key  [, int $offset = 1  [, int $initial_value = 0  [, int $expiry = 0 ]]])
public int Memcached::incrementByKey( string $server_key , string $key  [, int $offset = 1  [, int $initial_value = 0  [, int $expiry = 0 ]]])
public int MessageFormatter::getErrorCode( void )
public int MongoCollection::count([ array $query = array()  [, array $options = array() ]])
public int MongoCommandCursor::key( void )
public int MongoCursor::count([ bool $foundOnly = FALSE ])
public int MongoDB::getProfilingLevel( void )
public int MongoDB::setProfilingLevel( int $level )
public int MongoDB\Driver\BulkWrite::count( void )
public int MongoGridFSFile::getSize( void )
public int MongoGridFSFile::write([ string $filename = NULL ])
public int MongoId::getInc( void )
public int MongoId::getPID( void )
public int MongoId::getTimestamp( void )
public int MultipleIterator::countIterators( void )
public int MultipleIterator::getFlags( void )
public int MysqlndUhConnection::getAffectedRows( mysqlnd_connection $connection )
public int MysqlndUhConnection::getErrorNumber( mysqlnd_connection $connection )
public int MysqlndUhConnection::getFieldCount( mysqlnd_connection $connection )
public int MysqlndUhConnection::getLastInsertId( mysqlnd_connection $connection )
public int MysqlndUhConnection::getServerVersion( mysqlnd_connection $connection )
public int MysqlndUhConnection::getThreadId( mysqlnd_connection $connection )
public int MysqlndUhConnection::getWarningCount( mysqlnd_connection $connection )
public int NumberFormatter::getAttribute( int $attr )
public int NumberFormatter::getErrorCode( void )
public int PDO::exec( string $statement )
public int PDO::pgsqlGetPid( void )
public int PDOStatement::columnCount( void )
public int PDOStatement::rowCount( void )
public int Phar::count( void )
public int Phar::offsetGet( string $offset )
public int PharFileInfo::getCRC32( void )
public int PharFileInfo::getCompressedSize( void )
public int PharFileInfo::getPharFlags( void )
public int QuickHashIntHash::get( int $key )
public int QuickHashIntHash::getSize ( void )
public int QuickHashIntStringHash::getSize ( void )
public int QuickHashIntStringHash::set( int $key , string $value )
public int QuickHashStringIntHash::getSize ( void )
public int QuickHashStringIntHash::set( string $key , int $value )
public int RarEntry::getAttr( void )
public int RarEntry::getHostOs( void )
public int RarEntry::getMethod( void )
public int RarEntry::getPackedSize( void )
public int RarEntry::getUnpackedSize( void )
public int RarEntry::getVersion( void )
public int RecursiveIteratorIterator::getDepth( void )
public int ReflectionClass::getEndLine( void )
public int ReflectionClass::getModifiers( void )
public int ReflectionClass::getStartLine( void )
public int ReflectionFunctionAbstract::getEndLine( void )
public int ReflectionFunctionAbstract::getNumberOfParameters( void )
public int ReflectionFunctionAbstract::getNumberOfRequiredParameters( void )
public int ReflectionFunctionAbstract::getStartLine( void )
public int ReflectionGenerator::getExecutingLine( void )
public int ReflectionMethod::getModifiers( void )
public int ReflectionParameter::getPosition( void )
public int ReflectionProperty::getModifiers( void )
public int RegexIterator::getFlags( void )
public int RegexIterator::getMode( void )
public int RegexIterator::getPregFlags( void )
public int ResourceBundle::count( void )
public int ResourceBundle::getErrorCode( void )
public int SNMP::getErrno( void )
public int SQLite3::changes( void )
public int SQLite3::lastErrorCode( void )
public int SQLite3::lastInsertRowID( void )
public int SQLite3Result::columnType( int $column_number )
public int SQLite3Result::numColumns( void )
public int SQLite3Stmt::paramCount( void )
public int SVMModel::getNrClass( void )
public int SVMModel::getSvmType( void )
public int SimpleXMLElement::count( void )
public int SolrDocument::getFieldCount( void )
public int SolrInputDocument::getFieldCount( void )
public int SolrQuery::getFacetLimit([ string $field_override ])
public int SolrQuery::getFacetMinCount([ string $field_override ])
public int SolrQuery::getFacetOffset([ string $field_override ])
public int SolrQuery::getFacetSort([ string $field_override ])
public int SolrQuery::getHighlightFragsize([ string $field_override ])
public int SolrQuery::getHighlightMaxAlternateFieldLength([ string $field_override ])
public int SolrQuery::getHighlightMaxAnalyzedChars( void )
public int SolrQuery::getHighlightRegexMaxAnalyzedChars( void )
public int SolrQuery::getHighlightSnippets([ string $field_override ])
public int SolrQuery::getMltCount( void )
public int SolrQuery::getMltMaxNumQueryTerms( void )
public int SolrQuery::getMltMaxNumTokens( void )
public int SolrQuery::getMltMaxWordLength( void )
public int SolrQuery::getMltMinDocFrequency( void )
public int SolrQuery::getMltMinTermFrequency( void )
public int SolrQuery::getMltMinWordLength( void )
public int SolrQuery::getRows( void )
public int SolrQuery::getStart( void )
public int SolrQuery::getTermsLimit( void )
public int SolrQuery::getTermsMaxCount( void )
public int SolrQuery::getTermsMinCount( void )
public int SolrQuery::getTermsSort( void )
public int SolrQuery::getTimeAllowed( void )
public int SolrResponse::getHttpStatus( void )
public int SphinxClient::addQuery( string $query  [, string $index = "*"  [, string $comment = "" ]])
public int SphinxClient::updateAttributes( string $index , array $attributes , array $values  [, bool $mva = false ])
public int SplDoublyLinkedList::count( void )
public int SplDoublyLinkedList::getIteratorMode( void )
public int SplFileInfo::getATime( void )
public int SplFileInfo::getCTime( void )
public int SplFileInfo::getGroup( void )
public int SplFileInfo::getInode( void )
public int SplFileInfo::getMTime( void )
public int SplFileInfo::getOwner( void )
public int SplFileInfo::getPerms( void )
public int SplFileInfo::getSize( void )
public int SplFileObject::fpassthru( void )
public int SplFileObject::fputcsv( array $fields  [, string $delimiter = ","  [, string $enclosure = '"'  [, string $escape = "\" ]]])
public int SplFileObject::fseek( int $offset  [, int $whence = SEEK_SET ])
public int SplFileObject::ftell( void )
public int SplFileObject::fwrite( string $str  [, int $length ])
public int SplFileObject::getFlags( void )
public int SplFileObject::getMaxLineLen( void )
public int SplFileObject::key( void )
public int SplFixedArray::count( void )
public int SplFixedArray::getSize( void )
public int SplFixedArray::key( void )
public int SplFixedArray::setSize( int $size )
public int SplHeap::count( void )
public int SplObjectStorage::count( void )
public int SplObjectStorage::key( void )
public int SplPriorityQueue::compare( mixed $priority1 , mixed $priority2 )
public int SplPriorityQueue::count( void )
public int TokyoTyrant::num( void )
public int TokyoTyrant::size( string $key )
public int TokyoTyrantQuery::count( void )
public int TokyoTyrantTable::genUid( void )
public int TokyoTyrantTable::put( string $key , array $columns )
public int Transliterator::getErrorCode ( void )
public int VarnishAdmin::ban( string $vcl_regex )
public int VarnishAdmin::banUrl( string $vcl_regex )
public int VarnishAdmin::clearPanic( void )
public int VarnishAdmin::setParam( string $name , string|integer $value )
public int VarnishAdmin::start( void )
public int VarnishAdmin::stop( void )
public int WeakMap::count( void )
public int XsltProcessor::getSecurityPrefs( void )
public int XsltProcessor::setSecurityPrefs( int $securityPrefs )
public int Yaf_Application::getLastErrorNo( void )
public int php_user_filter::filter( resource $in , resource $out , int &$consumed , bool $closing )
public int streamWrapper::stream_tell( void )
public int streamWrapper::stream_write( string $data )
public integer Gender\Gender::get( string $name  [, integer $country ])
public integer IntlTimeZone::getDSTSavings( void )
public integer IntlTimeZone::getErrorCode( void )
public integer IntlTimeZone::getOffset( float $date , bool $local , integer &$rawOffset , integer &$dstOffset )
public integer IntlTimeZone::getRawOffset( void )
public integer Pool::submit( Threaded $task )
public integer Pool::submitTo( integer $worker , Threaded $task )
public integer SolrCollapseFunction::getSize( void )
public integer SolrQuery::getExpandRows( void )
public integer SolrQuery::getGroupCachePercent( void )
public integer SolrQuery::getGroupLimit( void )
public integer SolrQuery::getGroupOffset( void )
public integer Thread::getCreatorId( void )
public integer Thread::getThreadId( void )
public integer Threaded::count( void )
public integer UConverter::getDestinationType( void )
public integer UConverter::getErrorCode( void )
public integer UConverter::getSourceType( void )
public integer Worker::getStacked( void )
public integer Worker::stack( Threaded &$work )
public integer Worker::unstack([ Threaded &$work ])
public integer ZMQPoll::count( void )
public integer ZMQPoll::poll( array &$readable , array &$writable  [, integer $timeout = -1 ])
public integer ZMQSocket::getSocketType( void )
public iterator NoRewindIterator::getInnerIterator( void )
public iterator RecursiveIteratorIterator::getInnerIterator( void )
public mixed APCIterator::current( void )
public mixed APCUIterator::current( void )
public mixed AppendIterator::current( void )
public mixed ArrayIterator::current( void )
public mixed ArrayIterator::key( void )
public mixed ArrayIterator::offsetGet( string $index )
public mixed ArrayObject::offsetGet( mixed $index )
public mixed Closure::call( object $newthis  [, mixed $... ])
public mixed DOMDocument::loadXML( string $source  [, int $options = 0 ])
public mixed EmptyIterator::current( void )
public mixed EventBuffer::search( string $what  [, int $start = -1  [, int $end = -1  ]])
public mixed EventBuffer::searchEol([ int $start = -1  [, int $eol_style =   EventBuffer::EOL_ANY  ]])
public mixed FilesystemIterator::current( void )
public mixed FilterIterator::current( void )
public mixed FilterIterator::key( void )
public mixed Generator::current( void )
public mixed Generator::getReturn( void )
public mixed Generator::key( void )
public mixed Generator::send( mixed $value )
public mixed Generator::throw( Exception $exception )
public mixed Gmagick::hasnextimage( void )
public mixed Gmagick::haspreviousimage( void )
public mixed Gmagick::implodeimage( float $radius )
public mixed Gmagick::labelimage( string $label )
public mixed Gmagick::levelimage( float $blackPoint , float $gamma , float $whitePoint  [, int $channel = Gmagick::CHANNEL_DEFAULT ])
public mixed Gmagick::magnifyimage( void )
public mixed GmagickPixel::getcolor([ bool $as_array  [, bool $normalize_array ]])
public mixed ImagickPixel::getColorQuantum( void )
public mixed ImagickPixel::getColorValueQuantum( void )
public mixed IteratorIterator::current( void )
public mixed Judy::first([ mixed $index ])
public mixed Judy::next( mixed $index )
public mixed Judy::offsetGet( mixed $offset )
public mixed Judy::prev( mixed $index )
public mixed LimitIterator::current( void )
public mixed LimitIterator::key( void )
public mixed Lua::assign( string $name , string $value )
public mixed Lua::call( callable $lua_func  [, array $args  [, int $use_self = 0 ]])
public mixed Lua::eval( string $statements )
public mixed Lua::include( string $file )
public mixed Lua::registerCallback( string $name , callable $function )
public mixed Memcached::get( string $key  [, callable $cache_cb  [, float &$cas_token ]])
public mixed Memcached::getByKey( string $server_key , string $key  [, callable $cache_cb  [, float &$cas_token ]])
public mixed Memcached::getMulti( array $keys  [, array &$cas_tokens  [, int $flags ]])
public mixed Memcached::getOption( int $option )
public mixed MongoCollection::batchInsert( array $a  [, array $options = array() ])
public mixed MongoCollection::save( array|object $document  [, array $options = array() ])
public mixed MongoDB\Driver\BulkWrite::insert( array|object $document )
public mixed MongoGridFS::put( string $filename  [, array $metadata = array()  [, array $options = array() ]])
public mixed MongoGridFS::storeBytes( string $bytes  [, array $metadata = array()  [, array $options = array() ]])
public mixed MongoGridFS::storeFile( string|resource $filename  [, array $metadata = array()  [, array $options = array() ]])
public mixed MongoGridFS::storeUpload( string $name  [, array $metadata ])
public mixed NoRewindIterator::current( void )
public mixed NoRewindIterator::key( void )
public mixed NumberFormatter::parse( string $value  [, int $type  [, int &$position ]])
public mixed OAuth::fetch( string $protected_resource_url  [, array $extra_parameters  [, string $http_method  [, array $http_headers ]]])
public mixed OAuth::setAuthType( int $auth_type )
public mixed OAuth::setCAPath([ string $ca_path  [, string $ca_info ]])
public mixed OAuth::setNonce( string $nonce )
public mixed OAuth::setRSACertificate( string $cert )
public mixed OAuth::setTimestamp( string $timestamp )
public mixed PDO::errorCode( void )
public mixed PDO::getAttribute( int $attribute )
public mixed PDOStatement::fetch([ int $fetch_style  [, int $cursor_orientation = PDO::FETCH_ORI_NEXT  [, int $cursor_offset = 0 ]]])
public mixed PDOStatement::fetchColumn([ int $column_number = 0 ])
public mixed PDOStatement::fetchObject([ string $class_name = "stdClass"  [, array $ctor_args ]])
public mixed PDOStatement::getAttribute( int $attribute )
public mixed Phar::getMetadata( void )
public mixed Phar::isCompressed( void )
public mixed PharFileInfo::getMetadata( void )
public mixed QuickHashIntStringHash::get( int $key )
public mixed QuickHashStringIntHash::get( string $key )
public mixed RecursiveDirectoryIterator::getChildren( void )
public mixed RecursiveIteratorIterator::current( void )
public mixed RecursiveIteratorIterator::getMaxDepth( void )
public mixed RecursiveIteratorIterator::key( void )
public mixed ReflectionClass::getConstant( string $name )
public mixed ReflectionClass::getStaticPropertyValue( string $name  [, mixed &$def_value ])
public mixed ReflectionFunction::invoke([ mixed $parameter  [, mixed $... ]])
public mixed ReflectionFunction::invokeArgs( array $args )
public mixed ReflectionMethod::invoke( object $object  [, mixed $parameter  [, mixed $... ]])
public mixed ReflectionMethod::invokeArgs( object $object , array $args )
public mixed ReflectionParameter::getDefaultValue( void )
public mixed ReflectionProperty::getValue([ object $object ])
public mixed ResourceBundle::get( string|int $index )
public mixed SNMP::get( mixed $object_id  [, bool $preserve_keys = false ])
public mixed SNMP::getnext( mixed $object_id )
public mixed SQLite3::querySingle( string $query  [, bool $entire_row = false ])
public mixed SimpleXMLIterator::current( void )
public mixed SimpleXMLIterator::key( void )
public mixed SoapClient::__soapCall( string $function_name , array $arguments  [, array $options  [, mixed $input_headers  [, array &$output_headers ]]])
public mixed SolrObject::offsetGet( string $property_name )
public mixed SplDoublyLinkedList::bottom( void )
public mixed SplDoublyLinkedList::current( void )
public mixed SplDoublyLinkedList::key( void )
public mixed SplDoublyLinkedList::offsetGet( mixed $index )
public mixed SplDoublyLinkedList::pop( void )
public mixed SplDoublyLinkedList::shift( void )
public mixed SplDoublyLinkedList::top( void )
public mixed SplFileObject::fscanf( string $format  [, mixed &$... ])
public mixed SplFixedArray::current( void )
public mixed SplFixedArray::offsetGet( int $index )
public mixed SplHeap::current( void )
public mixed SplHeap::extract( void )
public mixed SplHeap::key( void )
public mixed SplHeap::top( void )
public mixed SplObjectStorage::getInfo( void )
public mixed SplObjectStorage::offsetGet( object $object )
public mixed SplPriorityQueue::current( void )
public mixed SplPriorityQueue::extract( void )
public mixed SplPriorityQueue::key( void )
public mixed SplPriorityQueue::top( void )
public mixed Threaded::shift( void )
public mixed Threaded::synchronized( Closure $block  [, mixed $... ])
public mixed TokyoTyrant::get( mixed $keys )
public mixed TokyoTyrant::putShl( string $key , string $value , int $width )
public mixed TokyoTyrant::restore( string $log_dir , int $timestamp  [, bool $check_consistency = true ])
public mixed TokyoTyrant::setMaster( string $host , int $port , int $timestamp  [, bool $check_consistency = true ])
public mixed TokyoTyrant::sync( void )
public mixed TokyoTyrant::vanish( void )
public mixed TokyoTyrantIterator::current( void )
public mixed TokyoTyrantIterator::key( void )
public mixed TokyoTyrantIterator::next( void )
public mixed TokyoTyrantQuery::addCond( string $name , int $op , string $expr )
public mixed TokyoTyrantQuery::setLimit([ int $max  [, int $skip ]])
public mixed TokyoTyrantQuery::setOrder( string $name , int $type )
public mixed TokyoTyrantTable::setIndex( string $column , int $type )
public mixed UConverter::fromUCallback( integer $reason , string $source , string $codePoint , integer &$error )
public mixed UConverter::toUCallback( integer $reason , string $source , string $codeUnits , integer &$error )
public mixed V8Js::executeString( string $script  [, string $identifier = "V8Js::executeString()"  [, int $flags = V8Js::FLAG_NONE ]])
public mixed WeakMap::current( void )
public mixed WeakMap::offsetGet( object $object )
public mixed Yaf_Request_Http::get( string $name  [, string $default ])
public mixed Yaf_Request_Http::getCookie( string $name  [, string $default ])
public mixed Yaf_Request_Http::getPost( string $name  [, string $default ])
public mixed Yaf_Request_Http::getQuery( string $name  [, string $default ])
public mixed Yaf_Response_Abstract::getBody([ string $key ])
public mixed Yaf_Router::getRoutes( void )
public mixed ZMQContext::getOpt( string $key )
public mixed ZMQSocket::getSockOpt( string $key )
public mysqli_result mysqli::reap_async_query( void )
public mysqli_warning::__construct( void )
public number TokyoTyrant::add( string $key , number $increment  [, int $type = 0 ])
public object Phar::decompress([ string $extension ])
public object ReflectionClass::getParentClass( void )
public object ReflectionClass::newInstance( mixed $args  [, mixed $... ])
public object ReflectionClass::newInstanceArgs([ array $args ])
public object ReflectionClass::newInstanceWithoutConstructor( void )
public object ReflectionFunctionAbstract::getClosureThis( void )
public object ReflectionGenerator::getThis( void )
public object SplObjectStorage::current( void )
public object WeakMap::key( void )
public object Weakref::get( void )
public resource MongoGridFSFile::getResource( void )
public resource MysqlndUhConnection::stmtInit( mysqlnd_connection $connection )
public resource MysqlndUhConnection::storeResult( mysqlnd_connection $connection )
public resource MysqlndUhConnection::useResult( mysqlnd_connection $connection )
public resource PDO::pgsqlLOBOpen( string $oid  [, string $mode = "rb" ])
public resource RarEntry::getStream([ string $password ])
public resource streamWrapper::stream_cast( int $cast_as )
public scalar AppendIterator::key( void )
public scalar CachingIterator::key( void )
public scalar EmptyIterator::key( void )
public scalar IteratorIterator::key( void )
public static CairoImageSurface CairoImageSurface::createFromPng( string $file )
public static CairoMatrix CairoMatrix::multiply( CairoMatrix $matrix1 , CairoMatrix $matrix2 )
public static Closure Closure::bind( Closure $closure , object $newthis  [, mixed $newscope = "static" ])
public static Collator Collator::create( string $locale )
public static DateInterval DateInterval::createFromDateString( string $time )
public static DateTime DateTime::__set_state( array $array )
public static DateTime DateTime::createFromFormat( string $format , string $time  [, DateTimeZone $timezone = date_default_timezone_get() ])
public static DateTimeImmutable DateTimeImmutable::__set_state( array $array )
public static DateTimeImmutable DateTimeImmutable::createFromFormat( string $format , string $time  [, DateTimeZone $timezone ])
public static DateTimeImmutable DateTimeImmutable::createFromMutable( DateTime $datetime )
public static EvLoop EvLoop::defaultLoop([ int $flags = Ev::FLAG_AUTO  [, mixed $data = NULL  [, double $io_interval = 0.  [, double $timeout_interval = 0.  ]]]])
public static Event Event::signal( EventBase $base , int $signum , callable $cb  [, mixed $arg  ])
public static Event Event::timer( EventBase $base , callable $cb  [, mixed $arg  ])
public static EventBufferEvent EventBufferEvent::sslFilter( EventBase $base , EventBufferEvent $underlying , EventSslContext $ctx , int $state  [, int $options = 0  ])
public static EventBufferEvent EventBufferEvent::sslSocket( EventBase $base , mixed $socket , EventSslContext $ctx , int $state  [, int $options  ])
public static ImagickKernel ImagickKernel::fromBuiltin( string $kernelType , string $kernelString )
public static ImagickKernel ImagickKernel::fromMatrix( array $matrix  [, array $origin ])
public static IntlCalendar IntlCalendar::fromDateTime( mixed $dateTime )
public static IntlIterator IntlTimeZone::createEnumeration([ mixed $countryOrRawOffset ])
public static IntlTimeZone IntlTimeZone::createDefault( void )
public static IntlTimeZone IntlTimeZone::createTimeZone( string $zoneId )
public static IntlTimeZone IntlTimeZone::fromDateTimeZone( DateTimeZone $zoneId )
public static IntlTimeZone IntlTimeZone::getGMT( void )
public static Iterator IntlCalendar::getKeywordValuesForLocale( string $key , string $locale , boolean $commonlyUsed )
public static MongoCommandCursor MongoCommandCursor::createFromDocument( MongoClient $connection , string $hash , array $document )
public static MongoId MongoId::__set_state( array $props )
public static QuickHashIntHash QuickHashIntHash::loadFromFile( string $filename  [, int $options ])
public static QuickHashIntHash QuickHashIntHash::loadFromString( string $contents  [, int $options ])
public static QuickHashIntSet QuickHashIntSet::loadFromFile( string $filename  [, int $size  [, int $options ]])
public static QuickHashIntSet QuickHashIntSet::loadFromString( string $contents  [, int $size  [, int $options ]])
public static QuickHashIntStringHash QuickHashIntStringHash::loadFromFile( string $filename  [, int $size = 0  [, int $options = 0 ]])
public static QuickHashIntStringHash QuickHashIntStringHash::loadFromString( string $contents  [, int $size = 0  [, int $options = 0 ]])
public static QuickHashStringIntHash QuickHashStringIntHash::loadFromFile( string $filename  [, int $size = 0  [, int $options = 0 ]])
public static QuickHashStringIntHash QuickHashStringIntHash::loadFromString( string $contents  [, int $size = 0  [, int $options = 0 ]])
public static ReturnType IntlBreakIterator::createCharacterInstance([ string $"locale" ])
public static ReturnType IntlBreakIterator::createCodePointInstance( void )
public static ReturnType IntlBreakIterator::createLineInstance([ string $"locale" ])
public static ReturnType IntlBreakIterator::createSentenceInstance([ string $"locale" ])
public static ReturnType IntlBreakIterator::createTitleInstance([ string $"locale" ])
public static ReturnType IntlBreakIterator::createWordInstance([ string $"locale" ])
public static SolrObject SolrUtils::digestXmlResponse( string $xmlresponse  [, int $parse_mode = 0 ])
public static SplFixedArray SplFixedArray::fromArray( array $array  [, bool $save_indexes = true ])
public static Thread Thread::getCurrentThread( void )
public static Transliterator Transliterator::create( string $id  [, int $direction ])
public static Transliterator Transliterator::createFromRules( string $rules  [, string $direction ])
public static Yaf_Dispatcher Yaf_Dispatcher::getInstance( void )
public static array Cairo::availableFonts( void )
public static array Cairo::availableSurfaces( void )
public static array CairoPsSurface::getLevels( void )
public static array CairoSvgSurface::getVersions( void )
public static array DateTime::getLastErrors( void )
public static array DateTimeImmutable::getLastErrors( void )
public static array DateTimeZone::listAbbreviations( void )
public static array DateTimeZone::listIdentifiers([ int $what = DateTimeZone::ALL  [, string $country = NULL ]])
public static array Event::getSupportedMethods( void )
public static array EventBufferEvent::createPair( EventBase $base  [, int $options = 0  ])
public static array Imagick::listRegistry( void )
public static array IntlChar::charAge( mixed $codepoint )
public static array IntlChar::getUnicodeVersion( void )
public static array Lapack::eigenValues( array $a  [, array $left  [, array $right ]])
public static array Lapack::identity( int $n )
public static array Lapack::leastSquaresByFactorisation( array $a , array $b )
public static array Lapack::leastSquaresBySVD( array $a , array $b )
public static array Lapack::pseudoInverse( array $a )
public static array Lapack::singularValues( array $a )
public static array Lapack::solveLinearEquation( array $a , array $b )
public static array Locale::getAllVariants( string $locale )
public static array Locale::getKeywords( string $locale )
public static array Locale::parseLocale( string $locale )
public static array MongoClient::getConnections( void )
public static array MongoDBRef::create( string $collection , mixed $id  [, string $database ])
public static array MongoDBRef::get( MongoDB $db , array $ref )
public static array Reflection::getModifierNames( int $modifiers )
public static array SQLite3::version( void )
public static array Transliterator::listIDs( void )
public static array UConverter::getAliases([ string $name ])
public static array UConverter::getAvailable( void )
public static array UConverter::getStandards( void )
public static array V8Js::getExtensions( void )
public static bool EventListener::getSocketName( string &$address  [, mixed &$port  ])
public static bool EventUtil::getSocketName( mixed $socket , string &$address  [, mixed &$port  ])
public static bool EventUtil::setSocketOption( mixed $socket , int $level , int $optname , mixed $optval )
public static bool IntlChar::hasBinaryProperty( mixed $codepoint , int $property )
public static bool IntlChar::isIDIgnorable( mixed $codepoint )
public static bool IntlChar::isIDPart( mixed $codepoint )
public static bool IntlChar::isIDStart( mixed $codepoint )
public static bool IntlChar::isISOControl( mixed $codepoint )
public static bool IntlChar::isJavaIDPart( mixed $codepoint )
public static bool IntlChar::isJavaIDStart( mixed $codepoint )
public static bool IntlChar::isJavaSpaceChar( mixed $codepoint )
public static bool IntlChar::isMirrored( mixed $codepoint )
public static bool IntlChar::isUAlphabetic( mixed $codepoint )
public static bool IntlChar::isUWhiteSpace( mixed $codepoint )
public static bool IntlChar::isWhitespace( mixed $codepoint )
public static bool IntlChar::isalnum( mixed $codepoint )
public static bool IntlChar::isalpha( mixed $codepoint )
public static bool IntlChar::isbase( mixed $codepoint )
public static bool IntlChar::isblank( mixed $codepoint )
public static bool IntlChar::iscntrl( mixed $codepoint )
public static bool IntlChar::isdefined( mixed $codepoint )
public static bool IntlChar::isdigit( mixed $codepoint )
public static bool IntlChar::isgraph( mixed $codepoint )
public static bool IntlChar::isprint( mixed $codepoint )
public static bool IntlChar::ispunct( mixed $codepoint )
public static bool IntlChar::isspace( mixed $codepoint )
public static bool IntlChar::isxdigit( mixed $codepoint )
public static bool Locale::filterMatches( string $langtag , string $locale  [, bool $canonicalize = false ])
public static bool Locale::setDefault( string $locale )
public static bool Mongo::setPoolSize( int $size )
public static bool MongoDBRef::isRef( mixed $ref )
public static bool MongoId::isValid( mixed $value )
public static bool MongoPool::setSize( int $size )
public static bool Normalizer::isNormalized ( string $input  [, int $form = Normalizer::FORM_C  ])
public static bool RarException::isUsingExceptions( void )
public static bool V8Js::registerExtension( string $extension_name , string $script  [, array $dependencies = array()  [, bool $auto_enable = FALSE ]])
public static bool Yaf_Registry::has( string $name )
public static bool Yaf_Registry::set( string $name , string $value )
public static boolean Yar_Concurrent_Client::loop([ callable $callback  [, callable $error_callback ]])
public static boolean Yar_Concurrent_Client::reset( void )
public static callable MongoLog::getCallback( void )
public static float IntlCalendar::getNow( void )
public static float IntlChar::getNumericValue( mixed $codepoint )
public static int Cairo::version( void )
public static int CairoFormat::strideForWidth( int $format , int $width )
public static int EventUtil::getLastSocketErrno([ mixed $socket = NULL  ])
public static int EventUtil::getSocketFd( mixed $socket )
public static int Imagick::getQuantum( void )
public static int IntlChar::charDigitValue( mixed $codepoint )
public static int IntlChar::charDirection( mixed $codepoint )
public static int IntlChar::charFromName( string $characterName  [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME ])
public static int IntlChar::charType( mixed $codepoint )
public static int IntlChar::digit( string $codepoint  [, int $radix = 10 ])
public static int IntlChar::forDigit( int $digit  [, int $radix = 10 ])
public static int IntlChar::getCombiningClass( mixed $codepoint )
public static int IntlChar::getIntPropertyMaxValue( int $property )
public static int IntlChar::getIntPropertyMinValue( int $property )
public static int IntlChar::getPropertyEnum( string $alias )
public static int IntlChar::getPropertyValueEnum( int $property , string $name )
public static int IntlChar::ord( mixed $character )
public static int Mongo::getPoolSize( void )
public static int MongoLog::getLevel( void )
public static int MongoLog::getModule( void )
public static int MongoPool::getSize( void )
public static int Yar_Concurrent_Client::call( string $uri , string $method , array $parameters  [, callable $callback ])
public static int mysqli::poll( array &$read , array &$error , array &$reject , int $sec  [, int $usec ])
public static integer IntlTimeZone::countEquivalentIDs( string $zoneId )
public static integer Thread::getCurrentThreadId( void )
public static mixed IntlChar::charMirror( mixed $codepoint )
public static mixed IntlChar::foldCase( mixed $codepoint  [, int $options = IntlChar::FOLD_CASE_DEFAULT ])
public static mixed IntlChar::getBidiPairedBracket( mixed $codepoint )
public static mixed Thread::globally( void )
public static mixed Yaf_Registry::get( string $name )
public static string Cairo::statusToString( int $status )
public static string Cairo::versionString( void )
public static string CairoPsSurface::levelToString( int $level )
public static string CairoSvgSurface::versionToString( int $version )
public static string EventUtil::getLastSocketError([ mixed $socket  ])
public static string Imagick::getRegistry( string $key )
public static string IntlChar::charName( mixed $codepoint  [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME ])
public static string IntlChar::getPropertyName( int $property  [, int $nameChoice = IntlChar::LONG_PROPERTY_NAME ])
public static string IntlChar::getPropertyValueName( int $property , int $value  [, int $nameChoice = IntlChar::LONG_PROPERTY_NAME ])
public static string IntlTimeZone::getCanonicalID( string $zoneId  [, bool &$isSystemID ])
public static string IntlTimeZone::getEquivalentID( string $zoneId , integer $index )
public static string IntlTimeZone::getTZDataVersion( void )
public static string Locale::acceptFromHttp( string $header )
public static string Locale::canonicalize( string $locale )
public static string Locale::composeLocale( array $subtags )
public static string Locale::getDefault( void )
public static string Locale::getDisplayLanguage( string $locale  [, string $in_locale ])
public static string Locale::getDisplayName( string $locale  [, string $in_locale ])
public static string Locale::getDisplayScript( string $locale  [, string $in_locale ])
public static string Locale::getDisplayVariant( string $locale  [, string $in_locale ])
public static string Locale::getPrimaryLanguage( string $locale )
public static string Locale::getRegion( string $locale )
public static string Locale::getScript( string $locale )
public static string Locale::lookup( array $langtag , string $locale  [, bool $canonicalize = false  [, string $default ]])
public static string MongoId::getHostname( void )
public static string Reflection::export( Reflector $reflector  [, bool $return = false ])
public static string ReflectionClass::export( mixed $argument  [, bool $return = false ])
public static string ReflectionExtension::export( string $name  [, string $return = false ])
public static string ReflectionFunction::export( string $name  [, string $return ])
public static string ReflectionMethod::export( string $class , string $name  [, bool $return = false ])
public static string ReflectionObject::export( string $argument  [, bool $return ])
public static string ReflectionParameter::export( string $function , string $parameter  [, bool $return ])
public static string ReflectionProperty::export( mixed $class , string $name  [, bool $return ])
public static string ReflectionZendExtension::export( string $name  [, string $return ])
public static string Reflector::export( void )
public static string SQLite3::escapeString( string $value )
public static string SolrUtils::escapeQueryChars( string $str )
public static string SolrUtils::getSolrVersion( void )
public static string SolrUtils::queryPhrase( string $str )
public static string UConverter::reasonText([ integer $reason ])
public static string UConverter::transcode( string $str , string $toEncoding , string $fromEncoding  [, array $options ])
public static string VarnishLog::getTagName( int $index )
public static void CairoImageSurface::createForData( string $data , int $format , int $width , int $height  [, int $stride = -1 ])
public static void CairoMatrix::initIdentity( void )
public static void CairoMatrix::initRotate( float $radians )
public static void CairoMatrix::initScale( float $sx , float $sy )
public static void CairoMatrix::initTranslate( float $tx , float $ty )
public static void EventUtil::sslRandPoll( void )
public static void Imagick::setRegistry( string $key , string $value )
public static void IntlChar::enumCharNames( mixed $start , mixed $limit , callable $callback  [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME ])
public static void IntlChar::enumCharTypes( callable $callback )
public static void MongoLog::setCallback( callable $log_function )
public static void MongoLog::setLevel( int $level )
public static void MongoLog::setModule( int $module )
public static void RarException::setUsingExceptions( bool $using_exceptions )
public static void Yaf_Application::app( void )
public static void Yaf_Loader::getInstance( void )
public static void Yaf_Loader::import( void )
public static void Yaf_Registry::del( string $name )
public static void Yaf_Session::getInstance( void )
public stompframe Stomp::readFrame([ string $class_name = "stompFrame"  ])
public string APCIterator::key( void )
public string APCUIterator::key( void )
public string ArrayIterator::serialize( void )
public string ArrayIterator::unserialize( string $serialized )
public string ArrayObject::getIteratorClass( void )
public string ArrayObject::serialize( void )
public string CURLFile::getFilename( void )
public string CURLFile::getMimeType( void )
public string CURLFile::getPostFilename( void )
public string CallbackFilterIterator::accept( void )
public string Collator::getErrorMessage( void )
public string Collator::getLocale( int $type )
public string Collator::getSortKey( string $str )
public string DOMElement::getAttribute( string $name )
public string DOMElement::getAttributeNS( string $namespaceURI , string $localName )
public string DOMNode::C14N([ bool $exclusive  [, bool $with_comments  [, array $xpath  [, array $ns_prefixes ]]]])
public string DOMNode::getNodePath( void )
public string DOMNode::lookupNamespaceURI( string $prefix )
public string DOMNode::lookupPrefix( string $namespaceURI )
public string DateInterval::format( string $format )
public string DateTime::format( string $format )
public string DateTimeZone::getName( void )
public string Directory::read([ resource $dir_handle ])
public string DirectoryIterator::__toString( void )
public string DirectoryIterator::getBasename([ string $suffix  ])
public string DirectoryIterator::getExtension( void )
public string DirectoryIterator::getFilename( void )
public string DirectoryIterator::getPath( void )
public string DirectoryIterator::getPathname( void )
public string DirectoryIterator::getType( void )
public string DirectoryIterator::key( void )
public string Error::__toString( void )
public string EventBase::getMethod([ EventConfig $cfg  ])
public string EventBuffer::pullup( int $size )
public string EventBuffer::read( int $max_bytes )
public string EventBuffer::readLine( int $eol_style )
public string EventBuffer::substr( int $start  [, int $length  ])
public string EventBufferEvent::getDnsErrorString( void )
public string EventBufferEvent::read( int $size )
public string EventBufferEvent::sslError( void )
public string EventBufferEvent::sslGetCipherInfo( void )
public string EventBufferEvent::sslGetCipherName( void )
public string EventBufferEvent::sslGetCipherVersion( void )
public string EventBufferEvent::sslGetProtocol( void )
public string EventHttpRequest::getHost( void )
public string EventHttpRequest::getUri( void )
public string Exception::__toString( void )
public string FilesystemIterator::key( void )
public string GearmanClient::context( void )
public string GearmanClient::data( void )
public string GearmanClient::do( string $function_name , string $workload  [, string $unique ])
public string GearmanClient::doBackground( string $function_name , string $workload  [, string $unique ])
public string GearmanClient::doHigh( string $function_name , string $workload  [, string $unique ])
public string GearmanClient::doHighBackground( string $function_name , string $workload  [, string $unique ])
public string GearmanClient::doJobHandle( void )
public string GearmanClient::doLow( string $function_name , string $workload  [, string $unique ])
public string GearmanClient::doLowBackground( string $function_name , string $workload  [, string $unique ])
public string GearmanClient::doNormal( string $function_name , string $workload  [, string $unique ])
public string GearmanClient::error( void )
public string GearmanJob::functionName( void )
public string GearmanJob::handle( void )
public string GearmanJob::unique( void )
public string GearmanJob::workload( void )
public string GearmanTask::data( void )
public string GearmanTask::function( void )
public string GearmanTask::functionName( void )
public string GearmanTask::jobHandle( void )
public string GearmanTask::unique( void )
public string GearmanTask::uuid( void )
public string GearmanWorker::error( void )
public string Gmagick::getcopyright( void )
public string Gmagick::getfilename( void )
public string Gmagick::getimagefilename( void )
public string Gmagick::getimageformat( void )
public string Gmagick::getimageprofile( string $name )
public string Gmagick::getimagesignature( void )
public string Gmagick::getpackagename( void )
public string Gmagick::getreleasedate( void )
public string Gmagick::removeimageprofile( string $name )
public string GmagickDraw::getfont( void )
public string GmagickDraw::gettextencoding( void )
public string Imagick::getImageAttribute( string $key )
public string Imagick::getImageMimeType( void )
public string IntlCalendar::getErrorMessage( void )
public string IntlCalendar::getType( void )
public string IntlDateFormatter::getErrorMessage( void )
public string IntlDateFormatter::getLocale([ int $which ])
public string IntlDateFormatter::getPattern( void )
public string IntlDateFormatter::getTimeZoneId( void )
public string IntlTimeZone::getDisplayName([ bool $isDaylight  [, integer $style  [, string $locale ]]])
public string IntlTimeZone::getErrorMessage( void )
public string IntlTimeZone::getID( void )
public string KTaglib_ID3v2_AttachedPictureFrame::getDescription  ( void  )
public string KTaglib_ID3v2_AttachedPictureFrame::getMimeType  ( void  )
public string KTaglib_ID3v2_AttachedPictureFrame::getMimeType( string $type )
public string KTaglib_ID3v2_Frame::__toString  ( void  )
public string KTaglib_Tag::getAlbum  ( void  )
public string KTaglib_Tag::getArtist  ( void  )
public string KTaglib_Tag::getComment  ( void  )
public string KTaglib_Tag::getGenre  ( void  )
public string KTaglib_Tag::getTitle  ( void  )
public string Lua::getVersion( void )
public string Memcached::getResultMessage( void )
public string MessageFormatter::getErrorMessage( void )
public string MessageFormatter::getLocale( void )
public string MessageFormatter::getPattern( void )
public string Mongo::getSlave( void )
public string Mongo::switchSlave( void )
public string MongoBinData::__toString( void )
public string MongoClient::__toString( void )
public string MongoCode::__toString( void )
public string MongoCollection::__toString( void )
public string MongoCollection::getName( void )
public string MongoCursorException::getHost( void )
public string MongoDB::__toString( void )
public string MongoDate::__toString( void )
public string MongoGridFSCursor::key( void )
public string MongoGridFSFile::getBytes( void )
public string MongoGridFSFile::getFilename( void )
public string MongoId::__toString( void )
public string MongoInt32::__toString( void )
public string MongoInt64::__toString( void )
public string MongoRegex::__toString( void )
public string MongoTimestamp::__toString( void )
public string MysqlndUhConnection::charsetName( mysqlnd_connection $connection )
public string MysqlndUhConnection::escapeString( mysqlnd_connection $connection , string $escape_string )
public string MysqlndUhConnection::getErrorString( mysqlnd_connection $connection )
public string MysqlndUhConnection::getHostInformation( mysqlnd_connection $connection )
public string MysqlndUhConnection::getProtocolInformation( mysqlnd_connection $connection )
public string MysqlndUhConnection::getServerInformation( mysqlnd_connection $connection )
public string MysqlndUhConnection::getServerStatistics( mysqlnd_connection $connection )
public string MysqlndUhConnection::getSqlstate( mysqlnd_connection $connection )
public string NumberFormatter::format( number $value  [, int $type ])
public string NumberFormatter::getErrorMessage( void )
public string NumberFormatter::getLocale([ int $type ])
public string NumberFormatter::getPattern( void )
public string NumberFormatter::getSymbol( int $attr )
public string NumberFormatter::getTextAttribute( int $attr )
public string OAuth::generateSignature( string $http_method , string $url  [, mixed $extra_parameters ])
public string OAuth::getLastResponse( void )
public string OAuth::getLastResponseHeaders( void )
public string OAuth::getRequestHeader( string $http_method , string $url  [, mixed $extra_parameters ])
public string PDO::pgsqlLOBCreate( void )
public string PDO::quote( string $string  [, int $parameter_type = PDO::PARAM_STR ])
public string PDOStatement::errorCode( void )
public string Phar::getStub( void )
public string Phar::getVersion( void )
public string QuickHashIntHash::saveToString ( void )
public string QuickHashIntSet::saveToString ( void )
public string QuickHashIntStringHash::saveToString ( void )
public string QuickHashStringIntHash::saveToString ( void )
public string RarArchive::__toString( void )
public string RarArchive::getComment( void )
public string RarEntry::__toString( void )
public string RarEntry::getCrc( void )
public string RarEntry::getFileTime( void )
public string RarEntry::getName( void )
public string RecursiveDirectoryIterator::getSubPath( void )
public string RecursiveDirectoryIterator::getSubPathname( void )
public string RecursiveDirectoryIterator::key( void )
public string RecursiveTreeIterator::current( void )
public string RecursiveTreeIterator::getEntry( void )
public string RecursiveTreeIterator::getPrefix( void )
public string RecursiveTreeIterator::key( void )
public string ReflectionClass::__toString( void )
public string ReflectionClass::getDocComment( void )
public string ReflectionClass::getExtensionName( void )
public string ReflectionClass::getFileName( void )
public string ReflectionClass::getName( void )
public string ReflectionClass::getNamespaceName( void )
public string ReflectionClass::getShortName( void )
public string ReflectionExtension::__toString( void )
public string ReflectionExtension::getName( void )
public string ReflectionExtension::getVersion( void )
public string ReflectionFunction::__toString( void )
public string ReflectionFunctionAbstract::getExtensionName( void )
public string ReflectionFunctionAbstract::getFileName( void )
public string ReflectionFunctionAbstract::getName( void )
public string ReflectionFunctionAbstract::getNamespaceName( void )
public string ReflectionFunctionAbstract::getShortName( void )
public string ReflectionGenerator::getExecutingFile( void )
public string ReflectionMethod::__toString( void )
public string ReflectionParameter::__toString( void )
public string ReflectionParameter::getDefaultValueConstantName( void )
public string ReflectionParameter::getName( void )
public string ReflectionProperty::__toString( void )
public string ReflectionProperty::getDocComment( void )
public string ReflectionProperty::getName( void )
public string ReflectionType::__toString( void )
public string ReflectionZendExtension::__toString( void )
public string ReflectionZendExtension::getAuthor( void )
public string ReflectionZendExtension::getCopyright( void )
public string ReflectionZendExtension::getName( void )
public string ReflectionZendExtension::getURL( void )
public string ReflectionZendExtension::getVersion( void )
public string Reflector::__toString( void )
public string RegexIterator::getRegex( void )
public string ResourceBundle::getErrorMessage( void )
public string SNMP::getError( void )
public string SQLite3::lastErrorMsg( void )
public string SQLite3Result::columnName( int $column_number )
public string SessionHandler::create_sid( void )
public string SessionHandler::read( string $session_id )
public string SimpleXMLElement::__toString( void )
public string SimpleXMLElement::getName( void )
public string SoapClient::__doRequest( string $request , string $location , string $action , int $version  [, int $one_way = 0 ])
public string SoapClient::__getLastRequest( void )
public string SoapClient::__getLastRequestHeaders( void )
public string SoapClient::__getLastResponse( void )
public string SoapClient::__getLastResponseHeaders( void )
public string SoapClient::__setLocation([ string $new_location ])
public string SoapFault::__toString( void )
public string SolrClient::getDebug( void )
public string SolrCollapseFunction::__toString( void )
public string SolrCollapseFunction::getField( void )
public string SolrCollapseFunction::getHint( void )
public string SolrCollapseFunction::getMax( void )
public string SolrCollapseFunction::getMin( void )
public string SolrCollapseFunction::getNullPolicy( void )
public string SolrDocument::key( void )
public string SolrDocument::serialize( void )
public string SolrPingResponse::getResponse( void )
public string SolrQuery::getFacetDateEnd([ string $field_override ])
public string SolrQuery::getFacetDateGap([ string $field_override ])
public string SolrQuery::getFacetDateHardEnd([ string $field_override ])
public string SolrQuery::getFacetDateStart([ string $field_override ])
public string SolrQuery::getFacetMethod([ string $field_override ])
public string SolrQuery::getFacetPrefix([ string $field_override ])
public string SolrQuery::getGroupFormat( void )
public string SolrQuery::getHighlightAlternateField([ string $field_override ])
public string SolrQuery::getHighlightFormatter([ string $field_override ])
public string SolrQuery::getHighlightFragmenter([ string $field_override ])
public string SolrQuery::getHighlightRegexPattern( void )
public string SolrQuery::getHighlightSimplePost([ string $field_override ])
public string SolrQuery::getHighlightSimplePre([ string $field_override ])
public string SolrQuery::getQuery( void )
public string SolrQuery::getTermsField( void )
public string SolrQuery::getTermsLowerBound( void )
public string SolrQuery::getTermsPrefix( void )
public string SolrQuery::getTermsUpperBound( void )
public string SolrResponse::getDigestedResponse( void )
public string SolrResponse::getHttpStatusMessage( void )
public string SolrResponse::getRawRequest( void )
public string SolrResponse::getRawRequestHeaders( void )
public string SolrResponse::getRawResponse( void )
public string SolrResponse::getRawResponseHeaders( void )
public string SolrResponse::getRequestUrl( void )
public string SphinxClient::escapeString( string $string )
public string SphinxClient::getLastError( void )
public string SphinxClient::getLastWarning( void )
public string SplDoublyLinkedList::serialize( void )
public string SplFileInfo::getBasename([ string $suffix ])
public string SplFileInfo::getExtension( void )
public string SplFileInfo::getFilename( void )
public string SplFileInfo::getLinkTarget( void )
public string SplFileInfo::getPath( void )
public string SplFileInfo::getPathname( void )
public string SplFileInfo::getRealPath( void )
public string SplFileInfo::getType( void )
public string SplFileObject::fgetc( void )
public string SplFileObject::fgets( void )
public string SplFileObject::fgetss([ string $allowable_tags ])
public string SplFileObject::fread( int $length )
public string SplObjectStorage::getHash( object $object )
public string SplObjectStorage::serialize( void )
public string Stomp::error( void )
public string Stomp::getSessionId( void )
public string StompException::getDetails( void )
public string TokyoTyrant::ext( string $name , int $options , string $key , string $value )
public string TokyoTyrantQuery::hint( void )
public string TokyoTyrantQuery::key( void )
public string Transliterator::getErrorMessage( void )
public string UConverter::convert( string $str  [, bool $reverse ])
public string UConverter::getDestinationEncoding( void )
public string UConverter::getErrorMessage( void )
public string UConverter::getSourceEncoding( void )
public string UConverter::getSubstChars( void )
public string VarnishAdmin::getPanic( void )
public string XMLDiff\File::diff( string $from , string $to )
public string XMLDiff\File::merge( string $src , string $diff )
public string XMLDiff\Memory::diff( string $from , string $to )
public string XMLDiff\Memory::merge( string $src , string $diff )
public string XMLReader::getAttribute( string $name )
public string XMLReader::getAttributeNo( int $index )
public string XMLReader::getAttributeNs( string $localName , string $namespaceURI )
public string XMLReader::lookupNamespace( string $prefix )
public string XMLReader::readInnerXML( void )
public string XMLReader::readOuterXML( void )
public string XMLReader::readString( void )
public string Yaf_Application::getLastErrorMsg( void )
public string Yaf_Controller_Abstract::getModuleName( void )
public string Yaf_Route_Map::assemble( array $info  [, array $query ])
public string Yaf_Route_Regex::assemble( array $info  [, array $query ])
public string Yaf_Route_Rewrite::assemble( array $info  [, array $query ])
public string Yaf_Route_Simple::assemble( array $info  [, array $query ])
public string Yaf_Route_Static::assemble( array $info  [, array $query ])
public string Yaf_Route_Supervar::assemble( array $info  [, array $query ])
public string Yaf_Router::getCurrentRoute( void )
public string Yaf_View_Simple::eval( string $tpl_content  [, array $tpl_vars ])
public string Yaf_View_Simple::getScriptPath( void )
public string Yaf_View_Simple::render( string $tpl  [, array $tpl_vars ])
public string Yar_Server_Exception::getType( void )
public string ZMQPoll::add( mixed $entry , integer $type )
public string ZMQSocket::getPersistentId( void )
public string ZMQSocket::recv([ integer $mode = 0 ])
public string ZMQSocket::recvMulti([ integer $mode = 0 ])
public string chdb::get( string $key )
public string finfo::buffer( string $string = NULL  [, int $options = FILEINFO_NONE  [, resource $context = NULL ]])
public string finfo::file( string $file_name = NULL  [, int $options = FILEINFO_NONE  [, resource $context = NULL ]])
public string streamWrapper::dir_readdir( void )
public string streamWrapper::stream_read( int $count )
public string|array SplFileObject::current( void )
public string|false Imagick::identifyFormat( string $embedText )
public string|int MongoCursor::key( void )
public void APCIterator::next( void )
public void APCIterator::rewind( void )
public void APCIterator::valid( void )
public void APCUIterator::next( void )
public void APCUIterator::rewind( void )
public void APCUIterator::valid( void )
public void AppendIterator::append( Iterator $iterator )
public void AppendIterator::getArrayIterator( void )
public void AppendIterator::next( void )
public void AppendIterator::rewind( void )
public void ArrayIterator::append( mixed $value )
public void ArrayIterator::asort( void )
public void ArrayIterator::getFlags( void )
public void ArrayIterator::ksort( void )
public void ArrayIterator::natcasesort( void )
public void ArrayIterator::natsort( void )
public void ArrayIterator::next( void )
public void ArrayIterator::offsetExists( string $index )
public void ArrayIterator::offsetSet( string $index , string $newval )
public void ArrayIterator::offsetUnset( string $index )
public void ArrayIterator::rewind( void )
public void ArrayIterator::seek( int $position )
public void ArrayIterator::setFlags( string $flags )
public void ArrayIterator::uasort( string $cmp_function )
public void ArrayIterator::uksort( string $cmp_function )
public void ArrayObject::append( mixed $value )
public void ArrayObject::asort( void )
public void ArrayObject::ksort( void )
public void ArrayObject::natcasesort( void )
public void ArrayObject::natsort( void )
public void ArrayObject::offsetUnset( mixed $index )
public void ArrayObject::setFlags( int $flags )
public void ArrayObject::setIteratorClass( string $iterator_class )
public void ArrayObject::uasort( callable $cmp_function )
public void ArrayObject::uksort( callable $cmp_function )
public void ArrayObject::unserialize( string $serialized )
public void CURLFile::__wakeup( void )
public void CURLFile::setMimeType( string $mime )
public void CURLFile::setPostFilename( string $postname )
public void CachingIterator::__toString( void )
public void CachingIterator::current( void )
public void CachingIterator::hasNext( void )
public void CachingIterator::next( void )
public void CachingIterator::offsetExists( string $index )
public void CachingIterator::offsetGet( string $index )
public void CachingIterator::offsetSet( string $index , string $newval )
public void CachingIterator::offsetUnset( string $index )
public void CachingIterator::rewind( void )
public void CachingIterator::setFlags( int $flags )
public void CachingIterator::valid( void )
public void CairoContext::appendPath( CairoPath $path )
public void CairoContext::arc( float $x , float $y , float $radius , float $angle1 , float $angle2 )
public void CairoContext::arcNegative( float $x , float $y , float $radius , float $angle1 , float $angle2 )
public void CairoContext::clip( void )
public void CairoContext::clipPreserve( void )
public void CairoContext::closePath( void )
public void CairoContext::curveTo( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )
public void CairoContext::fill( void )
public void CairoContext::fillPreserve( void )
public void CairoContext::getFontFace( void )
public void CairoContext::getFontMatrix( void )
public void CairoContext::getFontOptions( void )
public void CairoContext::getGroupTarget( void )
public void CairoContext::getMatrix( void )
public void CairoContext::getScaledFont( void )
public void CairoContext::getSource( void )
public void CairoContext::getTarget( void )
public void CairoContext::glyphPath( array $glyphs )
public void CairoContext::identityMatrix( void )
public void CairoContext::lineTo( string $x , string $y )
public void CairoContext::mask( string $pattern )
public void CairoContext::maskSurface( string $surface  [, string $x  [, string $y  ]])
public void CairoContext::moveTo( string $x , string $y )
public void CairoContext::newPath( void )
public void CairoContext::newSubPath( void )
public void CairoContext::paint( void )
public void CairoContext::paintWithAlpha( string $alpha )
public void CairoContext::popGroup( void )
public void CairoContext::popGroupToSource( void )
public void CairoContext::pushGroup( void )
public void CairoContext::pushGroupWithContent( string $content )
public void CairoContext::rectangle( string $x , string $y , string $width , string $height )
public void CairoContext::relCurveTo( string $x1 , string $y1 , string $x2 , string $y2 , string $x3 , string $y3 )
public void CairoContext::relLineTo( string $x , string $y )
public void CairoContext::relMoveTo( string $x , string $y )
public void CairoContext::resetClip( void )
public void CairoContext::restore( void )
public void CairoContext::rotate( string $angle )
public void CairoContext::save( void )
public void CairoContext::scale( string $x , string $y )
public void CairoContext::selectFontFace( string $family  [, string $slant  [, string $weight  ]])
public void CairoContext::setAntialias([ string $antialias  ])
public void CairoContext::setDash( string $dashes  [, string $offset  ])
public void CairoContext::setFillRule( string $setting )
public void CairoContext::setFontFace( CairoFontFace $fontface )
public void CairoContext::setFontMatrix( string $matrix )
public void CairoContext::setFontOptions( string $fontoptions )
public void CairoContext::setFontSize( string $size )
public void CairoContext::setLineCap( string $setting )
public void CairoContext::setLineJoin( string $setting )
public void CairoContext::setLineWidth( string $width )
public void CairoContext::setMatrix( string $matrix )
public void CairoContext::setMiterLimit( string $limit )
public void CairoContext::setOperator( string $setting )
public void CairoContext::setScaledFont( string $scaledfont )
public void CairoContext::setSource( string $pattern )
public void CairoContext::setSourceRGB( string $red , string $green , string $blue )
public void CairoContext::setSourceRGBA( string $red , string $green , string $blue , string $alpha )
public void CairoContext::setSourceSurface( string $surface  [, string $x  [, string $y  ]])
public void CairoContext::setTolerance( string $tolerance )
public void CairoContext::showPage( void )
public void CairoContext::showText( string $text )
public void CairoContext::stroke( void )
public void CairoContext::strokePreserve( void )
public void CairoContext::textPath( string $string )
public void CairoContext::transform( string $matrix )
public void CairoContext::translate( string $x , string $y )
public void CairoFontOptions::merge( string $other )
public void CairoFontOptions::setAntialias( string $antialias )
public void CairoFontOptions::setHintMetrics( string $hint_metrics )
public void CairoFontOptions::setHintStyle( string $hint_style )
public void CairoFontOptions::setSubpixelOrder( string $subpixel_order )
public void CairoGradientPattern::addColorStopRgb( string $offset , string $red , string $green , string $blue )
public void CairoGradientPattern::addColorStopRgba( string $offset , string $red , string $green , string $blue , string $alpha )
public void CairoGradientPattern::setExtend( int $extend )
public void CairoMatrix::invert( void )
public void CairoMatrix::rotate( string $sx , string $sy )
public void CairoMatrix::scale( float $sx , float $sy )
public void CairoMatrix::translate( string $tx , string $ty )
public void CairoPattern::getMatrix( void )
public void CairoPattern::setMatrix( string $matrix )
public void CairoPdfSurface::setSize( string $width , string $height )
public void CairoPsSurface::dscBeginPageSetup( void )
public void CairoPsSurface::dscBeginSetup( void )
public void CairoPsSurface::dscComment( string $comment )
public void CairoPsSurface::restrictToLevel( string $level )
public void CairoPsSurface::setEps( string $level )
public void CairoPsSurface::setSize( string $width , string $height )
public void CairoScaledFont::getFontFace( void )
public void CairoScaledFont::getFontMatrix( void )
public void CairoScaledFont::getFontOptions( void )
public void CairoScaledFont::getScaleMatrix( void )
public void CairoSurface::copyPage( void )
public void CairoSurface::createSimilar( CairoSurface $other , int $content , string $width , string $height )
public void CairoSurface::finish( void )
public void CairoSurface::flush( void )
public void CairoSurface::getFontOptions( void )
public void CairoSurface::markDirty( void )
public void CairoSurface::markDirtyRectangle( string $x , string $y , string $width , string $height )
public void CairoSurface::setDeviceOffset( string $x , string $y )
public void CairoSurface::setFallbackResolution( string $x , string $y )
public void CairoSurface::showPage( void )
public void CairoSurface::writeToPng( string $file )
public void CairoSurfacePattern::getSurface( void )
public void CairoSurfacePattern::setExtend( int $extend )
public void CairoSurfacePattern::setFilter( string $filter )
public void CairoSvgSurface::restrictToVersion( string $version )
public void Collectable::setGarbage( void )
public void DOMDocument::normalizeDocument( void )
public void DOMElement::setAttributeNS( string $namespaceURI , string $qualifiedName , string $value )
public void DOMElement::setIdAttribute( string $name , bool $isId )
public void DOMElement::setIdAttributeNS( string $namespaceURI , string $localName , bool $isId )
public void DOMElement::setIdAttributeNode( DOMAttr $attr , bool $isId )
public void DOMNode::normalize( void )
public void DOMXPath::registerPhpFunctions([ mixed $restrict ])
public void Directory::close([ resource $dir_handle ])
public void Directory::rewind([ resource $dir_handle ])
public void DirectoryIterator::next( void )
public void DirectoryIterator::rewind( void )
public void DirectoryIterator::seek( int $position )
public void EmptyIterator::next( void )
public void EmptyIterator::rewind( void )
public void EvChild::set( int $pid , bool $trace )
public void EvEmbed::set( object $other )
public void EvEmbed::sweep( void )
public void EvIo::set( mixed $fd , int $events )
public void EvLoop::invokePending( void )
public void EvLoop::loopFork( void )
public void EvLoop::nowUpdate( void )
public void EvLoop::resume( void )
public void EvLoop::run([ int $flags = 0  ])
public void EvLoop::stop([ int $how  ])
public void EvLoop::suspend( void )
public void EvLoop::verify( void )
public void EvPeriodic::again( void )
public void EvPeriodic::set( double $offset , double $interval )
public void EvSignal::set( int $signum )
public void EvStat::prev( void )
public void EvStat::set( string $path , double $interval )
public void EvTimer::again( void )
public void EvTimer::set( double $after , double $repeat )
public void EvWatcher::feed( int $revents )
public void EvWatcher::invoke( int $revents )
public void EvWatcher::setCallback( callable $callback )
public void EvWatcher::start( void )
public void EvWatcher::stop( void )
public void Event::free( void )
public void EventBase::dispatch( void )
public void EventBase::free( void )
public void EventBuffer::enableLocking( void )
public void EventBuffer::lock( void )
public void EventBufferEvent::close( void )
public void EventBufferEvent::free( void )
public void EventBufferEvent::setCallbacks( callable $readcb , callable $writecb , callable $eventcb  [, string $arg  ])
public void EventBufferEvent::setWatermark( int $events , int $lowmark , int $highmark )
public void EventBufferEvent::sslRenegotiate( void )
public void EventConfig::setMaxDispatchInterval( int $max_interval , int $max_callbacks , int $min_priority )
public void EventDnsBase::addSearch( string $domain )
public void EventDnsBase::clearSearch( void )
public void EventHttp::bind( string $address , int $port )
public void EventHttp::setAllowedMethods( int $methods )
public void EventHttp::setCallback( string $path , string $cb  [, string $arg  ])
public void EventHttp::setDefaultCallback( string $cb  [, string $arg  ])
public void EventHttp::setMaxBodySize( int $value )
public void EventHttp::setMaxHeadersSize( int $value )
public void EventHttp::setTimeout( int $value )
public void EventHttpConnection::getPeer( string &$address , int &$port )
public void EventHttpConnection::setCloseCallback( callable $callback  [, mixed $data  ])
public void EventHttpConnection::setLocalAddress( string $address )
public void EventHttpConnection::setLocalPort( int $port )
public void EventHttpConnection::setMaxBodySize( string $max_size )
public void EventHttpConnection::setMaxHeadersSize( string $max_size )
public void EventHttpConnection::setRetries( int $retries )
public void EventHttpConnection::setTimeout( int $timeout )
public void EventHttpRequest::cancel( void )
public void EventHttpRequest::clearHeaders( void )
public void EventHttpRequest::closeConnection( void )
public void EventHttpRequest::findHeader( string $key , string $type )
public void EventHttpRequest::free( void )
public void EventHttpRequest::getCommand( void )
public void EventHttpRequest::getOutputHeaders( void )
public void EventHttpRequest::removeHeader( string $key , string $type )
public void EventHttpRequest::sendError( int $error  [, string $reason = NULL  ])
public void EventHttpRequest::sendReply( int $code , string $reason  [, EventBuffer $buf  ])
public void EventHttpRequest::sendReplyChunk( EventBuffer $buf )
public void EventHttpRequest::sendReplyEnd( void )
public void EventHttpRequest::sendReplyStart( int $code , string $reason )
public void EventListener::getBase( void )
public void EventListener::setCallback( callable $cb  [, mixed $arg = NULL  ])
public void EventListener::setErrorCallback( string $cb )
public void FANNConnection::getWeight( void )
public void FilesystemIterator::next( void )
public void FilesystemIterator::rewind( void )
public void FilesystemIterator::setFlags([ int $flags ])
public void FilterIterator::next( void )
public void FilterIterator::rewind( void )
public void GearmanClient::setClientCallback( callable $callback )
public void GearmanWorker::clone( void )
public void Generator::__wakeup( void )
public void Generator::next( void )
public void Generator::rewind( void )
public void Gmagick::deconstructimages( void )
public void Gmagick::medianfilterimage( float $radius )
public void Gmagick::write( string $filename )
public void GmagickDraw::getfillcolor( void )
public void GmagickDraw::getstrokecolor( void )
public void HRTime\PerformanceCounter::start( void )
public void HRTime\PerformanceCounter::stop( void )
public void Imagick::autoLevelImage([ string $CHANNEL = Imagick::CHANNEL_DEFAULT ])
public void Imagick::blueShiftImage([ float $factor = 1.5 ])
public void Imagick::brightnessContrastImage( string $brightness , string $contrast  [, string $CHANNEL = Imagick::CHANNEL_DEFAULT ])
public void Imagick::clampImage([ string $CHANNEL = Imagick::CHANNEL_DEFAULT ])
public void Imagick::clipImagePath( string $pathname , string $inside )
public void Imagick::colorMatrixImage( string $color_matrix = Imagick::CHANNEL_DEFAULT )
public void Imagick::count([ string $mode ])
public void Imagick::deleteImageProperty( string $name )
public void Imagick::filter( ImagickKernel $ImagickKernel  [, int $CHANNEL = Imagick::CHANNEL_DEFAULT ])
public void Imagick::forwardFourierTransformimage( bool $magnitude )
public void Imagick::inverseFourierTransformImage( string $complement , string $magnitude )
public void Imagick::morphology( int $morphologyMethod , int $iterations , ImagickKernel $ImagickKernel  [, string $CHANNEL ])
public void Imagick::rotationalBlurImage( string $angle  [, string $CHANNEL = Imagick::CHANNEL_DEFAULT ])
public void Imagick::selectiveBlurImage( float $radius , float $sigma , float $threshold , int $CHANNEL )
public void Imagick::setImageAttribute( string $key , string $value )
public void Imagick::setImageBiasQuantum( string $bias )
public void Imagick::setProgressMonitor( callable $callback )
public void Imagick::statisticImage( int $type , int $width , int $height  [, string $CHANNEL = Imagick::CHANNEL_DEFAULT ])
public void ImagickDraw::resetVectorGraphics( void )
public void ImagickDraw::setResolution( string $x_resolution , string $y_resolution )
public void ImagickDraw::setTextInterlineSpacing( float $spacing )
public void ImagickDraw::setTextInterwordSpacing( float $spacing )
public void ImagickDraw::setTextKerning( float $kerning )
public void ImagickKernel::addKernel( ImagickKernel $ImagickKernel )
public void ImagickKernel::addUnityKernel( void )
public void ImagickKernel::scale( void )
public void ImagickPixel::setColorValueQuantum  ( int $color , mixed $value )
public void ImagickPixel::setIndex( int $index )
public void ImagickPixel::setcolorcount( string $colorCount )
public void InfiniteIterator::next( void )
public void IteratorIterator::next( void )
public void IteratorIterator::rewind( void )
public void Judy::__destruct( void )
public void Judy::last([ string $index ])
public void Judy::size( void )
public void KTaglib_ID3v2_AttachedPictureFrame::setPicture( string $filename )
public void KTaglib_ID3v2_AttachedPictureFrame::setType( int $type )
public void LimitIterator::next( void )
public void LimitIterator::rewind( void )
public void LuaClosure::__invoke( mixed $arg  [, mixed $... ])
public void Memcached::setSaslAuthData( string $username , string $password )
public void MongoCommandCursor::next( void )
public void MongoCursor::reset( void )
public void MongoCursor::rewind( void )
public void MongoDB\Driver\BulkWrite::delete( array|object $filter  [, array $deleteOptions ])
public void MongoDB\Driver\BulkWrite::update( array|object $filter , array|object $newObj  [, array $updateOptions ])
public void MultipleIterator::attachIterator( Iterator $iterator  [, string $infos ])
public void MultipleIterator::detachIterator( Iterator $iterator )
public void MultipleIterator::next( void )
public void MultipleIterator::rewind( void )
public void MultipleIterator::setFlags( int $flags )
public void MysqlndUhConnection::getLastMessage( mysqlnd_connection $connection )
public void MysqlndUhConnection::listMethod( mysqlnd_connection $connection , string $query , string $achtung_wild , string $par1 )
public void MysqlndUhConnection::setServerOption( mysqlnd_connection $connection , int $option )
public void MysqlndUhConnection::shutdownServer( string $MYSQLND_UH_RES_MYSQLND_NAME , string $"level" )
public void NoRewindIterator::next( void )
public void NoRewindIterator::rewind( void )
public void OAuth::__destruct( void )
public void OAuth::setRequestEngine( int $reqengine )
public void OAuthProvider::callTimestampNonceHandler( void )
public void OAuthProvider::callconsumerHandler( void )
public void OAuthProvider::calltokenHandler( void )
public void OAuthProvider::checkOAuthRequest([ string $uri  [, string $method ]])
public void OAuthProvider::consumerHandler( callable $callback_function )
public void OAuthProvider::is2LeggedEndpoint( mixed $params_array )
public void OAuthProvider::isRequestTokenEndpoint( bool $will_issue_request_token )
public void OAuthProvider::timestampNonceHandler( callable $callback_function )
public void OAuthProvider::tokenHandler( callable $callback_function )
public void ParentIterator::next( void )
public void ParentIterator::rewind( void )
public void Phar::addEmptyDir( string $dirname )
public void Phar::addFile( string $file  [, string $localname ])
public void Phar::addFromString( string $localname , string $contents )
public void Phar::compressFiles( int $compression )
public void Phar::offsetSet( string $offset , string $value )
public void Phar::setMetadata( mixed $metadata )
public void Phar::setSignatureAlgorithm( int $sigtype )
public void Phar::startBuffering( void )
public void Phar::stopBuffering( void )
public void PharFileInfo::chmod( int $permissions )
public void PharFileInfo::setMetadata( mixed $metadata )
public void Pool::collect( Callable $collector )
public void Pool::resize( integer $size )
public void Pool::shutdown( void )
public void QuickHashIntHash::saveToFile( string $filename )
public void QuickHashIntSet::saveToFile( string $filename )
public void QuickHashIntStringHash::saveToFile( string $filename )
public void QuickHashStringIntHash::saveToFile( string $filename )
public void RRDCreator::addArchive( string $description )
public void RRDCreator::addDataSource( string $description )
public void RRDGraph::setOptions( array $options )
public void RecursiveDirectoryIterator::next( void )
public void RecursiveDirectoryIterator::rewind( void )
public void RecursiveIteratorIterator::beginChildren( void )
public void RecursiveIteratorIterator::beginIteration( void )
public void RecursiveIteratorIterator::endChildren( void )
public void RecursiveIteratorIterator::endIteration( void )
public void RecursiveIteratorIterator::next( void )
public void RecursiveIteratorIterator::nextElement( void )
public void RecursiveIteratorIterator::rewind( void )
public void RecursiveIteratorIterator::setMaxDepth([ string $max_depth = -1 ])
public void RecursiveTreeIterator::beginChildren( void )
public void RecursiveTreeIterator::endChildren( void )
public void RecursiveTreeIterator::endIteration( void )
public void RecursiveTreeIterator::getPostfix( void )
public void RecursiveTreeIterator::next( void )
public void RecursiveTreeIterator::nextElement( void )
public void RecursiveTreeIterator::rewind( void )
public void RecursiveTreeIterator::setPrefixPart( int $part , string $value )
public void ReflectionClass::setStaticPropertyValue( string $name , string $value )
public void ReflectionExtension::info( void )
public void ReflectionExtension::isPersistent( void )
public void ReflectionExtension::isTemporary( void )
public void ReflectionMethod::setAccessible( bool $accessible )
public void ReflectionProperty::setAccessible( bool $accessible )
public void ReflectionProperty::setValue( object $object , mixed $value )
public void RegexIterator::setFlags( int $flags )
public void RegexIterator::setMode( int $mode )
public void RegexIterator::setPregFlags( int $preg_flags )
public void SQLite3::open( string $filename  [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE  [, string $encryption_key ]])
public void SimpleXMLElement::addAttribute( string $name  [, string $value  [, string $namespace ]])
public void SimpleXMLIterator::next( void )
public void SimpleXMLIterator::rewind( void )
public void SoapClient::__setCookie( string $name  [, string $value ])
public void SoapServer::addFunction( mixed $functions )
public void SoapServer::addSoapHeader( SoapHeader $object )
public void SoapServer::fault( string $code , string $string  [, string $actor  [, string $details  [, string $name ]]])
public void SoapServer::handle([ string $soap_request ])
public void SoapServer::setClass( string $class_name  [, mixed $args  [, mixed $... ]])
public void SoapServer::setObject( object $object )
public void SoapServer::setPersistence( int $mode )
public void SolrClient::__destruct( void )
public void SolrClient::addDocuments( array $docs  [, bool $overwrite = true  [, int $commitWithin = 0 ]])
public void SolrClient::setResponseWriter( string $responseWriter )
public void SolrClient::system( void )
public void SolrClient::threads( void )
public void SolrDocument::__clone( void )
public void SolrDocument::__destruct( void )
public void SolrDocument::next( void )
public void SolrDocument::offsetSet( string $fieldName , string $fieldValue )
public void SolrDocument::offsetUnset( string $fieldName )
public void SolrDocument::rewind( void )
public void SolrDocument::unserialize( string $serialized )
public void SolrDocumentField::__destruct( void )
public void SolrGenericResponse::__destruct( void )
public void SolrInputDocument::__clone( void )
public void SolrInputDocument::__destruct( void )
public void SolrModifiableParams::__destruct( void )
public void SolrObject::__destruct( void )
public void SolrObject::offsetSet( string $property_name , string $property_value )
public void SolrObject::offsetUnset( string $property_name )
public void SolrPingResponse::__destruct( void )
public void SolrQuery::__destruct( void )
public void SolrQueryResponse::__destruct( void )
public void SolrUpdateResponse::__destruct( void )
public void SphinxClient::resetFilters( void )
public void SphinxClient::resetGroupBy( void )
public void SplDoublyLinkedList::add( mixed $index , mixed $newval )
public void SplDoublyLinkedList::next( void )
public void SplDoublyLinkedList::offsetSet( mixed $index , mixed $newval )
public void SplDoublyLinkedList::offsetUnset( mixed $index )
public void SplDoublyLinkedList::prev( void )
public void SplDoublyLinkedList::push( mixed $value )
public void SplDoublyLinkedList::rewind( void )
public void SplDoublyLinkedList::setIteratorMode( int $mode )
public void SplDoublyLinkedList::unserialize( string $serialized )
public void SplDoublyLinkedList::unshift( mixed $value )
public void SplFileInfo::__toString( void )
public void SplFileInfo::setFileClass([ string $class_name = "SplFileObject" ])
public void SplFileInfo::setInfoClass([ string $class_name = "SplFileInfo" ])
public void SplFileObject::__toString( void )
public void SplFileObject::getChildren( void )
public void SplFileObject::next( void )
public void SplFileObject::rewind( void )
public void SplFileObject::seek( int $line_pos )
public void SplFileObject::setCsvControl([ string $delimiter = ","  [, string $enclosure = "\""  [, string $escape = "\\" ]]])
public void SplFileObject::setFlags( int $flags )
public void SplFileObject::setMaxLineLen( int $max_len )
public void SplFixedArray::__wakeup( void )
public void SplFixedArray::next( void )
public void SplFixedArray::offsetSet( int $index , mixed $newval )
public void SplFixedArray::offsetUnset( int $index )
public void SplFixedArray::rewind( void )
public void SplHeap::insert( mixed $value )
public void SplHeap::next( void )
public void SplHeap::recoverFromCorruption( void )
public void SplHeap::rewind( void )
public void SplObjectStorage::addAll( SplObjectStorage $storage )
public void SplObjectStorage::attach( object $object  [, mixed $data = NULL ])
public void SplObjectStorage::detach( object $object )
public void SplObjectStorage::next( void )
public void SplObjectStorage::offsetSet( object $object  [, mixed $data = NULL ])
public void SplObjectStorage::offsetUnset( object $object )
public void SplObjectStorage::removeAll( SplObjectStorage $storage )
public void SplObjectStorage::removeAllExcept( SplObjectStorage $storage )
public void SplObjectStorage::rewind( void )
public void SplObjectStorage::setInfo( mixed $data )
public void SplObjectStorage::unserialize( string $serialized )
public void SplPriorityQueue::insert( mixed $value , mixed $priority )
public void SplPriorityQueue::next( void )
public void SplPriorityQueue::recoverFromCorruption( void )
public void SplPriorityQueue::rewind( void )
public void SplPriorityQueue::setExtractFlags( int $flags )
public void Spoofchecker::setAllowedLocales( string $locale_list )
public void Spoofchecker::setChecks( long $checks )
public void Stomp::setReadTimeout( int $seconds  [, int $microseconds  ])
public void Thread::detach( void )
public void Thread::kill( void )
public void Threaded::run( void )
public void TokyoTyrantIterator::rewind( void )
public void TokyoTyrantTable::add( string $key , mixed $increment  [, string $type ])
public void TokyoTyrantTable::out( mixed $keys  )
public void TokyoTyrantTable::putCat( string $key , array $columns )
public void TokyoTyrantTable::putKeep( string $key , array $columns )
public void TokyoTyrantTable::putNr( mixed $keys  [, string $value ])
public void TokyoTyrantTable::putShl( string $key , string $value , int $width )
public void UConverter::setDestinationEncoding( string $encoding )
public void UConverter::setSourceEncoding( string $encoding )
public void UConverter::setSubstChars( string $chars )
public void VarnishAdmin::setCompat( int $compat )
public void VarnishAdmin::setHost( string $host )
public void VarnishAdmin::setIdent( string $ident )
public void VarnishAdmin::setPort( int $port )
public void VarnishAdmin::setSecret( string $secret )
public void VarnishAdmin::setTimeout( int $timeout )
public void WeakMap::next( void )
public void WeakMap::offsetSet( object $object , mixed $value )
public void WeakMap::offsetUnset( object $object )
public void WeakMap::rewind( void )
public void Yaf_Application::__destruct( void )
public void Yaf_Application::bootstrap([ Yaf_Bootstrap_Abstract $bootstrap ])
public void Yaf_Application::environ( void )
public void Yaf_Application::execute( callable $entry , string $... )
public void Yaf_Application::run( void )
public void Yaf_Config_Ini::__get([ string $name ])
public void Yaf_Config_Ini::__isset( string $name )
public void Yaf_Config_Ini::__set( string $name , mixed $value )
public void Yaf_Config_Ini::count( void )
public void Yaf_Config_Ini::current( void )
public void Yaf_Config_Ini::key( void )
public void Yaf_Config_Ini::next( void )
public void Yaf_Config_Ini::offsetExists( string $name )
public void Yaf_Config_Ini::offsetGet( string $name )
public void Yaf_Config_Ini::offsetSet( string $name , string $value )
public void Yaf_Config_Ini::offsetUnset( string $name )
public void Yaf_Config_Ini::readonly( void )
public void Yaf_Config_Ini::rewind( void )
public void Yaf_Config_Ini::valid( void )
public void Yaf_Config_Simple::__get([ string $name ])
public void Yaf_Config_Simple::__isset( string $name )
public void Yaf_Config_Simple::__set( string $name , string $value )
public void Yaf_Config_Simple::count( void )
public void Yaf_Config_Simple::current( void )
public void Yaf_Config_Simple::key( void )
public void Yaf_Config_Simple::next( void )
public void Yaf_Config_Simple::offsetExists( string $name )
public void Yaf_Config_Simple::offsetGet( string $name )
public void Yaf_Config_Simple::offsetSet( string $name , string $value )
public void Yaf_Config_Simple::offsetUnset( string $name )
public void Yaf_Config_Simple::readonly( void )
public void Yaf_Config_Simple::rewind( void )
public void Yaf_Config_Simple::valid( void )
public void Yaf_Controller_Abstract::forward( string $action  [, array $paramters ])
public void Yaf_Controller_Abstract::getInvokeArg( string $name )
public void Yaf_Controller_Abstract::getInvokeArgs( void )
public void Yaf_Controller_Abstract::getViewpath( void )
public void Yaf_Controller_Abstract::init( void )
public void Yaf_Controller_Abstract::initView([ array $options ])
public void Yaf_Controller_Abstract::setViewpath( string $view_directory )
public void Yaf_Exception::getPrevious( void )
public void Yaf_Loader::autoload( void )
public void Yaf_Loader::clearLocalNamespace( void )
public void Yaf_Loader::getLocalNamespace( void )
public void Yaf_Loader::isLocalName( void )
public void Yaf_Loader::registerLocalNamespace( mixed $prefix )
public void Yaf_Plugin_Abstract::dispatchLoopShutdown( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
public void Yaf_Plugin_Abstract::dispatchLoopStartup( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
public void Yaf_Plugin_Abstract::postDispatch( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
public void Yaf_Plugin_Abstract::preDispatch( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
public void Yaf_Plugin_Abstract::preResponse( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
public void Yaf_Plugin_Abstract::routerShutdown( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
public void Yaf_Plugin_Abstract::routerStartup( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
public void Yaf_Request_Abstract::getActionName( void )
public void Yaf_Request_Abstract::getBaseUri( void )
public void Yaf_Request_Abstract::getControllerName( void )
public void Yaf_Request_Abstract::getEnv( string $name  [, string $default ])
public void Yaf_Request_Abstract::getException( void )
public void Yaf_Request_Abstract::getLanguage( void )
public void Yaf_Request_Abstract::getMethod( void )
public void Yaf_Request_Abstract::getModuleName( void )
public void Yaf_Request_Abstract::getParam( string $name  [, string $default ])
public void Yaf_Request_Abstract::getParams( void )
public void Yaf_Request_Abstract::getRequestUri( void )
public void Yaf_Request_Abstract::getServer( string $name  [, string $default ])
public void Yaf_Request_Abstract::isCli( void )
public void Yaf_Request_Abstract::isDispatched( void )
public void Yaf_Request_Abstract::isGet( void )
public void Yaf_Request_Abstract::isHead( void )
public void Yaf_Request_Abstract::isOptions( void )
public void Yaf_Request_Abstract::isPost( void )
public void Yaf_Request_Abstract::isPut( void )
public void Yaf_Request_Abstract::isRouted( void )
public void Yaf_Request_Abstract::isXmlHttpRequest( void )
public void Yaf_Request_Abstract::setActionName( string $action )
public void Yaf_Request_Abstract::setControllerName( string $controller )
public void Yaf_Request_Abstract::setDispatched( void )
public void Yaf_Request_Abstract::setModuleName( string $module )
public void Yaf_Request_Abstract::setParam( string $name  [, string $value ])
public void Yaf_Request_Abstract::setRequestUri( string $uir )
public void Yaf_Request_Abstract::setRouted([ string $flag ])
public void Yaf_Request_Http::getFiles( void )
public void Yaf_Request_Http::getRequest( void )
public void Yaf_Request_Simple::get( void )
public void Yaf_Request_Simple::getCookie( void )
public void Yaf_Request_Simple::getFiles( void )
public void Yaf_Request_Simple::getPost( void )
public void Yaf_Request_Simple::getQuery( void )
public void Yaf_Request_Simple::getRequest( void )
public void Yaf_Request_Simple::isXmlHttpRequest( void )
public void Yaf_Response_Abstract::__destruct( void )
public void Yaf_Response_Abstract::clearHeaders( void )
public void Yaf_Response_Abstract::getHeader( void )
public void Yaf_Response_Abstract::response( void )
public void Yaf_Response_Abstract::setHeader( void )
public void Yaf_Response_Abstract::setRedirect( void )
public void Yaf_Route_Static::match( string $uri )
public void Yaf_Session::__get( string $name )
public void Yaf_Session::__isset( string $name )
public void Yaf_Session::__set( string $name , string $value )
public void Yaf_Session::__unset( string $name )
public void Yaf_Session::count( void )
public void Yaf_Session::current( void )
public void Yaf_Session::del( string $name )
public void Yaf_Session::has( string $name )
public void Yaf_Session::key( void )
public void Yaf_Session::next( void )
public void Yaf_Session::offsetExists( string $name )
public void Yaf_Session::offsetGet( string $name )
public void Yaf_Session::offsetSet( string $name , string $value )
public void Yaf_Session::offsetUnset( string $name )
public void Yaf_Session::rewind( void )
public void Yaf_Session::start( void )
public void Yaf_Session::valid( void )
public void Yaf_View_Simple::__get([ string $name ])
public void Yaf_View_Simple::__isset( string $name )
public void Yaf_View_Simple::__set( string $name , mixed $value )
public void Yar_Client::__call( string $method , array $parameters )
public void Yar_Client_Exception::getType( void )
public void ZMQDevice::run( void )
public void mysqli_warning::next( void )
public void php_user_filter::onClose( void )
public void streamWrapper::stream_close( void )
publicYaf_Controller_Abstract Yaf_Action_Abstract::getController( void )
publicint QuickHashIntSet::getSize ( void )
reference fann_create_shortcut( int $num_layers , int $num_neurons1 , int $num_neurons2  [, int $... ])
resource Counter::getNamed  ( string $name  )
resource PDF_new ( void )
resource ZipArchive::getStream( string $name )
resource bbcode_create([ array $bbcode_initial_tags = NULL ])
resource bzopen( mixed $file , string $mode )
resource counter_create  ( string $name   [, integer $initial_value   [, integer $flags   ]])
resource crack_opendict( string $dictionary )
resource cubrid_connect( string $host  , int $port  , string $dbname   [, string $userid   [, string $passwd   [, bool $new_link = false  ]]])
resource cubrid_connect_with_url( string $conn_url   [, string $userid   [, string $passwd   [, bool $new_link = false ]]])
resource cubrid_execute( resource $conn_identifier  , string $sql   [, int $option  ])
resource cubrid_lob2_new([ resource $conn_identifier  [, string $type = "BLOB"  ]])
resource cubrid_pconnect( string $host  , int $port  , string $dbname   [, string $userid   [, string $passwd  ]])
resource cubrid_pconnect_with_url( string $conn_url   [, string $userid   [, string $passwd  ]])
resource cubrid_prepare( resource $conn_identifier  , string $prepare_stmt   [, int $option = 0  ])
resource cubrid_query( string $query  [, resource $conn_identifier ])
resource cubrid_unbuffered_query( string $query  [, resource $conn_identifier ])
resource curl_multi_init( void )
resource curl_share_init( void )
resource cyrus_connect([ string $host  [, string $port  [, int $flags ]]])
resource db2_column_privileges( resource $connection  [, string $qualifier  [, string $schema  [, string $table-name  [, string $column-name ]]]])
resource db2_columns( resource $connection  [, string $qualifier  [, string $schema  [, string $table-name  [, string $column-name ]]]])
resource db2_connect( string $database , string $username , string $password  [, array $options ])
resource db2_exec( resource $connection , string $statement  [, array $options ])
resource db2_foreign_keys( resource $connection , string $qualifier , string $schema , string $table-name )
resource db2_next_result( resource $stmt )
resource db2_pconnect( string $database , string $username , string $password  [, array $options ])
resource db2_prepare( resource $connection , string $statement  [, array $options ])
resource db2_primary_keys( resource $connection , string $qualifier , string $schema , string $table-name )
resource db2_procedure_columns( resource $connection , string $qualifier , string $schema , string $procedure , string $parameter )
resource db2_procedures( resource $connection , string $qualifier , string $schema , string $procedure )
resource db2_special_columns( resource $connection , string $qualifier , string $schema , string $table_name , int $scope )
resource db2_statistics( resource $connection , string $qualifier , string $schema , string $table-name , bool $unique )
resource db2_table_privileges( resource $connection  [, string $qualifier  [, string $schema  [, string $table_name ]]])
resource db2_tables( resource $connection  [, string $qualifier  [, string $schema  [, string $table-name  [, string $table-type ]]]])
resource dba_popen( string $path , string $mode  [, string $handler  [, mixed $... ]])
resource dbplus_aql( string $query  [, string $server  [, string $dbpath ]])
resource dbplus_open( string $name )
resource dbplus_rcreate( string $name , mixed $domlist  [, bool $overwrite ])
resource dbplus_ropen( string $name )
resource dbplus_rquery( string $query  [, string $dbpath ])
resource dbplus_sql( string $query  [, string $server  [, string $dbpath ]])
resource dio_open( string $filename , int $flags  [, int $mode = 0  ])
resource eio_busy( int $delay  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_chmod( string $path , int $mode  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_chown( string $path , int $uid  [, int $gid = -1  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]]])
resource eio_close( mixed $fd  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_custom( callable $execute , int $pri , callable $callback  [, mixed $data = NULL ])
resource eio_dup2( mixed $fd , mixed $fd2  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_fallocate( mixed $fd , int $mode , int $offset , int $length  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_fchmod( mixed $fd , int $mode  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_fchown( mixed $fd , int $uid  [, int $gid = -1  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]]])
resource eio_fdatasync( mixed $fd  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_fstat( mixed $fd , int $pri , callable $callback  [, mixed $data ])
resource eio_fstatvfs( mixed $fd , int $pri , callable $callback  [, mixed $data ])
resource eio_fsync( mixed $fd  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_ftruncate( mixed $fd  [, int $offset = 0  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]]])
resource eio_futime( mixed $fd , float $atime , float $mtime  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_grp( callable $callback  [, string $data = NULL ])
resource eio_link( string $path , string $new_path  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_lstat( string $path , int $pri , callable $callback  [, mixed $data = NULL ])
resource eio_mkdir( string $path , int $mode  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_mknod( string $path , int $mode , int $dev  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_nop([ int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_open( string $path , int $flags , int $mode , int $pri , callable $callback  [, mixed $data = NULL ])
resource eio_read( mixed $fd , int $length , int $offset , int $pri , callable $callback  [, mixed $data = NULL ])
resource eio_readahead( mixed $fd , int $offset , int $length  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_readdir( string $path , int $flags , int $pri , callable $callback  [, string $data = NULL ])
resource eio_readlink( string $path , int $pri , callable $callback  [, string $data = NULL ])
resource eio_realpath( string $path , int $pri , callable $callback  [, string $data = NULL ])
resource eio_rename( string $path , string $new_path  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_rmdir( string $path  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_seek( mixed $fd , int $offset , int $whence  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_sendfile( mixed $out_fd , mixed $in_fd , int $offset , int $length  [, int $pri  [, callable $callback  [, string $data ]]])
resource eio_stat( string $path , int $pri , callable $callback  [, mixed $data = NULL ])
resource eio_statvfs( string $path , int $pri , callable $callback  [, mixed $data ])
resource eio_symlink( string $path , string $new_path  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_sync([ int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_sync_file_range( mixed $fd , int $offset , int $nbytes , int $flags  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_syncfs( mixed $fd  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_truncate( string $path  [, int $offset = 0  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]]])
resource eio_unlink( string $path  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_utime( string $path , float $atime , float $mtime  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]])
resource eio_write( mixed $fd , string $str  [, int $length = 0  [, int $offset = 0  [, int $pri = EIO_PRI_DEFAULT  [, callable $callback = NULL  [, mixed $data = NULL ]]]]])
resource enchant_broker_init( void )
resource enchant_broker_request_dict( resource $broker , string $tag )
resource enchant_broker_request_pwl_dict( resource $broker , string $filename )
resource event_base_new( void )
resource event_buffer_new( resource $stream , mixed $readcb , mixed $writecb , mixed $errorcb  [, mixed $arg ])
resource event_new( void )
resource expect_popen( string $command )
resource fam_monitor_collection( resource $fam , string $dirname , int $depth , string $mask )
resource fam_monitor_directory( resource $fam , string $dirname )
resource fam_monitor_file( resource $fam , string $filename )
resource fam_open([ string $appname ])
resource fann_copy( resource $ann )
resource fann_create_from_file( string $configuration_file )
resource fann_create_shortcut_array( int $num_layers , array $layers )
resource fann_create_standard( int $num_layers , int $num_neurons1 , int $num_neurons2  [, int $... ])
resource fann_create_standard_array( int $num_layers , array $layers )
resource fann_create_train( int $num_data , int $num_input , int $num_output )
resource fann_create_train_from_callback( int $num_data , int $num_input , int $num_output , callable $user_function )
resource fann_duplicate_train_data( resource $data )
resource fann_merge_train_data( resource $data1 , resource $data2 )
resource fann_read_train_from_file( string $filename )
resource fann_subset_train_data( resource $data , int $pos , int $length )
resource fbsql_connect([ string $hostname = ini_get("fbsql.default_host")  [, string $username = ini_get("fbsql.default_user")  [, string $password = ini_get("fbsql.default_password") ]]])
resource fbsql_db_query( string $database , string $query  [, resource $link_identifier ])
resource fbsql_list_dbs([ resource $link_identifier ])
resource fbsql_list_fields( string $database_name , string $table_name  [, resource $link_identifier ])
resource fbsql_list_tables( string $database  [, resource $link_identifier ])
resource fbsql_pconnect([ string $hostname = ini_get("fbsql.default_host")  [, string $username = ini_get("fbsql.default_user")  [, string $password = ini_get("fbsql.default_password") ]]])
resource fbsql_query( string $query  [, resource $link_identifier  [, int $batch_size ]])
resource fdf_create( void )
resource fdf_open( string $filename )
resource fdf_open_string( string $fdf_data )
resource finfo_open([ int $options = FILEINFO_NONE  [, string $magic_file = NULL ]])
resource ftp_connect( string $host  [, int $port = 21  [, int $timeout = 90 ]])
resource ftp_ssl_connect( string $host  [, int $port = 21  [, int $timeout = 90 ]])
resource gnupg_init( void )
resource gupnp_context_new([ string $host_ip  [, int $port = 0 ]])
resource gupnp_control_point_new( resource $context , string $target )
resource gupnp_device_info_get_service( resource $root_device , string $type )
resource gupnp_root_device_new( resource $context , string $location , string $description_dir )
resource gzopen( string $filename , string $mode  [, int $use_include_path = 0 ])
resource hash_copy( resource $context )
resource hash_init( string $algo  [, int $options = 0  [, string $key = NULL ]])
resource ibase_blob_create([ resource $link_identifier = NULL ])
resource ibase_blob_open( resource $link_identifier , string $blob_id )
resource ibase_connect([ string $database  [, string $username  [, string $password  [, string $charset  [, int $buffers  [, int $dialect  [, string $role  [, int $sync ]]]]]]]])
resource ibase_execute( resource $query  [, mixed $bind_arg  [, mixed $... ]])
resource ibase_pconnect([ string $database  [, string $username  [, string $password  [, string $charset  [, int $buffers  [, int $dialect  [, string $role  [, int $sync ]]]]]]]])
resource ibase_prepare( string $query )
resource ibase_query([ resource $link_identifier  ], string $query  [, int $bind_args ])
resource ibase_service_attach( string $host , string $dba_username , string $dba_password )
resource ibase_set_event_handler( callable $event_handler , string $event_name1  [, string $event_name2  [, string $... ]])
resource ibase_trans([ int $trans_args  [, resource $link_identifier ]])
resource ifx_connect([ string $database  [, string $userid  [, string $password ]]])
resource ifx_pconnect([ string $database  [, string $userid  [, string $password ]]])
resource ifx_prepare( string $query , resource $link_identifier  [, int $cursor_def  ], mixed $blobidarray )
resource ifx_query( string $query , resource $link_identifier  [, int $cursor_type  [, mixed $blobidarray ]])
resource imagecreatefromgd( string $filename )
resource imagecreatefromgd2( string $filename )
resource imagecreatefromgd2part( string $filename , int $srcX , int $srcY , int $width , int $height )
resource imagecreatefromgif( string $filename )
resource imagecreatefrompng( string $filename )
resource imagecreatefromstring( string $image )
resource imagecreatefromwbmp( string $filename )
resource imagecreatefromwebp( string $filename )
resource imagecreatefromxbm( string $filename )
resource imagecreatefromxpm( string $filename )
resource imagecrop( resource $image , array $rect )
resource imagecropauto( resource $image  [, int $mode = -1  [, float $threshold = .5  [, int $color = -1 ]]])
resource imagegrabscreen( void )
resource imagegrabwindow( int $window_handle  [, int $client_area = 0 ])
resource imagepsloadfont( string $filename )
resource imagescale( resource $image , int $new_width  [, int $new_height = -1  [, int $mode = IMG_BILINEAR_FIXED ]])
resource imap_open( string $mailbox , string $username , string $password  [, int $options = 0  [, int $n_retries = 0  [, array $params = NULL ]]])
resource ingres_pconnect([ string $database  [, string $username  [, string $password  [, array $options ]]]])
resource inotify_init( void )
resource kadm5_init_with_password( string $admin_server , string $realm , string $principal , string $password )
resource ldap_connect([ string $host = NULL  [, int $port = 389 ]])
resource ldap_first_entry( resource $link_identifier , resource $result_identifier )
resource ldap_first_reference( resource $link , resource $result )
resource ldap_list( resource $link_identifier , string $base_dn , string $filter  [, array $attributes  [, int $attrsonly  [, int $sizelimit  [, int $timelimit  [, int $deref ]]]]])
resource ldap_next_entry( resource $link_identifier , resource $result_entry_identifier )
resource ldap_next_reference( resource $link , resource $entry )
resource ldap_read( resource $link_identifier , string $base_dn , string $filter  [, array $attributes  [, int $attrsonly  [, int $sizelimit  [, int $timelimit  [, int $deref ]]]]])
resource ldap_search( resource $link_identifier , string $base_dn , string $filter  [, array $attributes  [, int $attrsonly  [, int $sizelimit  [, int $timelimit  [, int $deref ]]]]])
resource m_initconn( void )
resource mailparse_msg_create( void )
resource mailparse_msg_get_part( resource $mimemail , string $mimesection )
resource mailparse_msg_parse_file( string $filename )
resource maxdb_connect([ string $host  [, string $username  [, string $passwd  [, string $dbname  [, int $port = 0  [, string $socket ]]]]]])
resource maxdb_embedded_connect([ string $dbname ])
resource maxdb_init( void )
resource maxdb_prepare( resource $link , string $query )
resource maxdb_stmt_init( resource $link )
resource maxdb_stmt_result_metadata( resource $stmt )
resource maxdb_store_result( resource $link )
resource maxdb_use_result( resource $link )
resource mcrypt_module_open( string $algorithm , string $algorithm_directory , string $mode , string $mode_directory )
resource msg_get_queue( int $key  [, int $perms = 0666 ])
resource msql_connect([ string $hostname ])
resource msql_db_query( string $database , string $query  [, resource $link_identifier ])
resource msql_list_dbs([ resource $link_identifier ])
resource msql_list_fields( string $database , string $tablename  [, resource $link_identifier ])
resource msql_list_tables( string $database  [, resource $link_identifier ])
resource msql_pconnect([ string $hostname ])
resource msql_query( string $query  [, resource $link_identifier ])
resource mssql_init( string $sp_name  [, resource $link_identifier ])
resource mssql_pconnect([ string $servername  [, string $username  [, string $password  [, bool $new_link = false ]]]])
resource mysql_connect([ string $server = ini_get("mysql.default_host")  [, string $username = ini_get("mysql.default_user")  [, string $password = ini_get("mysql.default_password")  [, bool $new_link = false  [, int $client_flags = 0 ]]]]])
resource mysql_db_query( string $database , string $query  [, resource $link_identifier = NULL ])
resource mysql_list_dbs([ resource $link_identifier = NULL ])
resource mysql_list_fields( string $database_name , string $table_name  [, resource $link_identifier = NULL ])
resource mysql_list_processes([ resource $link_identifier = NULL ])
resource mysql_list_tables( string $database  [, resource $link_identifier = NULL ])
resource mysql_pconnect([ string $server = ini_get("mysql.default_host")  [, string $username = ini_get("mysql.default_user")  [, string $password = ini_get("mysql.default_password")  [, int $client_flags = 0 ]]]])
resource mysql_unbuffered_query( string $query  [, resource $link_identifier = NULL ])
resource mysqlnd_uh_convert_to_mysqlnd( mysqli &$mysql_connection )
resource ncurses_new_panel( resource $window )
resource ncurses_newpad( int $rows , int $cols )
resource ncurses_newwin( int $rows , int $cols , int $y , int $x )
resource ncurses_panel_above( resource $panel )
resource ncurses_panel_below( resource $panel )
resource ncurses_panel_window( resource $panel )
resource newt_button( int $left , int $top , string $text )
resource newt_button_bar( array &$buttons )
resource newt_checkbox( int $left , int $top , string $text , string $def_value  [, string $seq ])
resource newt_checkbox_tree( int $left , int $top , int $height  [, int $flags ])
resource newt_checkbox_tree_multi( int $left , int $top , int $height , string $seq  [, int $flags ])
resource newt_compact_button( int $left , int $top , string $text )
resource newt_create_grid( int $cols , int $rows )
resource newt_entry( int $left , int $top , int $width  [, string $init_value  [, int $flags ]])
resource newt_form([ resource $vert_bar  [, string $help  [, int $flags ]]])
resource newt_form_get_current( resource $form )
resource newt_grid_basic_window( resource $text , resource $middle , resource $buttons )
resource newt_grid_h_close_stacked( int $element1_type , resource $element1  [, int $...  [, resource $... ]])
resource newt_grid_h_stacked( int $element1_type , resource $element1  [, int $...  [, resource $... ]])
resource newt_grid_simple_window( resource $text , resource $middle , resource $buttons )
resource newt_grid_v_close_stacked( int $element1_type , resource $element1  [, int $...  [, resource $... ]])
resource newt_grid_v_stacked( int $element1_type , resource $element1  [, int $...  [, resource $... ]])
resource newt_label( int $left , int $top , string $text )
resource newt_listbox( int $left , int $top , int $height  [, int $flags ])
resource newt_listitem( int $left , int $top , string $text , bool $is_default , resouce $prev_item , mixed $data  [, int $flags ])
resource newt_radio_get_current( resource $set_member )
resource newt_radiobutton( int $left , int $top , string $text , bool $is_default  [, resource $prev_button ])
resource newt_run_form( resource $form )
resource newt_scale( int $left , int $top , int $width , int $full_value )
resource newt_textbox( int $left , int $top , int $width , int $height  [, int $flags ])
resource newt_textbox_reflowed( int $left , int $top , char $*text , int $width , int $flex_down , int $flex_up  [, int $flags ])
resource newt_vertical_scrollbar( int $left , int $top , int $height  [, int $normal_colorset  [, int $thumb_colorset ]])
resource oci_get_implicit_resultset( resource $statement )
resource oci_new_connect( string $username , string $password  [, string $connection_string  [, string $character_set  [, int $session_mode ]]])
resource oci_new_cursor( resource $connection )
resource oci_parse( resource $connection , string $sql_text )
resource oci_pconnect( string $username , string $password  [, string $connection_string  [, string $character_set  [, int $session_mode ]]])
resource odbc_columnprivileges( resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name )
resource odbc_columns( resource $connection_id  [, string $qualifier  [, string $schema  [, string $table_name  [, string $column_name ]]]])
resource odbc_exec( resource $connection_id , string $query_string  [, int $flags ])
resource odbc_foreignkeys( resource $connection_id , string $pk_qualifier , string $pk_owner , string $pk_table , string $fk_qualifier , string $fk_owner , string $fk_table )
resource odbc_gettypeinfo( resource $connection_id  [, int $data_type ])
resource odbc_pconnect( string $dsn , string $user , string $password  [, int $cursor_type ])
resource odbc_prepare( resource $connection_id , string $query_string )
resource odbc_primarykeys( resource $connection_id , string $qualifier , string $owner , string $table )
resource odbc_procedurecolumns( resource $connection_id )
resource odbc_procedures( resource $connection_id )
resource odbc_specialcolumns( resource $connection_id , int $type , string $qualifier , string $owner , string $table , int $scope , int $nullable )
resource odbc_statistics( resource $connection_id , string $qualifier , string $owner , string $table_name , int $unique , int $accuracy )
resource odbc_tableprivileges( resource $connection_id , string $qualifier , string $owner , string $name )
resource odbc_tables( resource $connection_id  [, string $qualifier  [, string $owner  [, string $name  [, string $types ]]]])
resource openal_buffer_create( void )
resource openal_context_create( resource $device )
resource openal_device_open([ string $device_desc ])
resource openal_source_create( void )
resource openal_stream( resource $source , int $format , int $rate )
resource opendir( string $path  [, resource $context ])
resource openssl_csr_get_public_key( mixed $csr  [, bool $use_shortnames = true ])
resource openssl_csr_sign( mixed $csr , mixed $cacert , mixed $priv_key , int $days  [, array $configargs  [, int $serial = 0 ]])
resource openssl_pkey_get_private( mixed $key  [, string $passphrase = "" ])
resource openssl_pkey_get_public( mixed $certificate )
resource openssl_pkey_new([ array $configargs ])
resource openssl_x509_read( mixed $x509certdata )
resource pfsockopen( string $hostname  [, int $port = -1  [, int &$errno  [, string &$errstr  [, float $timeout = ini_get("default_socket_timeout") ]]]])
resource pg_execute([ resource $connection  ], string $stmtname , array $params )
resource pg_get_result([ resource $connection ])
resource pg_lo_open( resource $connection , int $oid , string $mode )
resource pg_pconnect( string $connection_string  [, int $connect_type ])
resource pg_prepare([ resource $connection  ], string $stmtname , string $query )
resource pg_query([ resource $connection  ], string $query )
resource pg_query_params([ resource $connection  ], string $query , array $params )
resource pg_socket( resource $connection )
resource popen( string $command , string $mode )
resource ps_new( void )
resource px_new( void )
resource radius_acct_open( void )
resource radius_auth_open( void )
resource rpm_open( string $filename )
resource sem_get( int $key  [, int $max_acquire = 1  [, int $perm = 0666  [, int $auto_release = 1 ]]])
resource shm_attach( int $key  [, int $memsize  [, int $perm = 0666 ]])
resource socket_accept( resource $socket )
resource socket_create( int $domain , int $type , int $protocol )
resource socket_create_listen( int $port  [, int $backlog = 128 ])
resource socket_import_stream( resource $stream )
resource sqlite_open( string $filename  [, int $mode = 0666  [, string &$error_message ]])
resource sqlite_popen( string $filename  [, int $mode = 0666  [, string &$error_message ]])
resource sqlite_query( resource $dbhandle , string $query  [, int $result_type = SQLITE_BOTH  [, string &$error_msg ]])
resource sqlite_unbuffered_query( resource $dbhandle , string $query  [, int $result_type = SQLITE_BOTH  [, string &$error_msg ]])
resource sqlsrv_connect( string $serverName  [, array $connectionInfo ])
resource ssh2_connect( string $host  [, int $port = 22  [, array $methods  [, array $callbacks ]]])
resource ssh2_exec( resource $session , string $command  [, string $pty  [, array $env  [, int $width = 80  [, int $height = 25  [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]])
resource ssh2_fetch_stream( resource $channel , int $streamid )
resource ssh2_publickey_init( resource $session )
resource ssh2_sftp( resource $session )
resource ssh2_shell( resource $session  [, string $term_type = "vanilla"  [, array $env  [, int $width = 80  [, int $height = 25  [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]])
resource ssh2_tunnel( resource $session , string $host , int $port )
resource stream_context_create([ array $options  [, array $params ]])
resource stream_context_get_default([ array $options ])
resource stream_context_set_default( array $options )
resource stream_filter_append( resource $stream , string $filtername  [, int $read_write  [, mixed $params ]])
resource stream_filter_prepend( resource $stream , string $filtername  [, int $read_write  [, mixed $params ]])
resource stream_socket_accept( resource $server_socket  [, float $timeout = ini_get("default_socket_timeout")  [, string &$peername ]])
resource svn_fs_apply_text( resource $root , string $path )
resource svn_fs_begin_txn2( resource $repos , int $rev )
resource svn_fs_file_contents( resource $fsroot , string $path )
resource svn_fs_revision_root( resource $fs , int $revnum )
resource svn_fs_txn_root( resource $txn )
resource svn_repos_create( string $path  [, array $config  [, array $fsconfig ]])
resource svn_repos_fs( resource $repos )
resource svn_repos_fs_begin_txn_for_commit( resource $repos , int $rev , string $author , string $log_msg )
resource svn_repos_open( string $path )
resource sybase_connect([ string $servername  [, string $username  [, string $password  [, string $charset  [, string $appname  [, bool $new = false ]]]]]])
resource sybase_pconnect([ string $servername  [, string $username  [, string $password  [, string $charset  [, string $appname ]]]]])
resource sybase_unbuffered_query( string $query , resource $link_identifier  [, bool $store_result ])
resource tmpfile( void )
resource udm_alloc_agent( string $dbaddr  [, string $dbmode ])
resource udm_alloc_agent_array( array $databases )
resource udm_find( resource $agent , string $query )
resource wddx_packet_start([ string $comment ])
resource xml_parser_create([ string $encoding ])
resource xml_parser_create_ns([ string $encoding  [, string $separator = ":" ]])
resource xmlrpc_server_create( void )
resource zip_open( string $filename )
resource zip_read( resource $zip )
static Counter Counter::getNamed  ( string $name  )
static protected string MongoCollection::toIndexString( mixed $keys )
static voidCounter::setCounterClass  ( string $name  )
streamWrapper::__construct( void )
streamWrapper::__destruct( void )
string DOMCharacterData::substringData( int $offset , int $count )
string HaruDoc::getInfoAttr( int $type )
string HaruDoc::loadTTC( string $fontfile , int $index  [, bool $embed = false ])
string HaruDoc::loadTTF( string $fontfile  [, bool $embed = false ])
string HaruDoc::loadType1( string $afmfile  [, string $pfmfile ])
string HaruDoc::readFromStream( int $bytes )
string HaruFont::getEncodingName( void )
string HaruFont::getFontName( void )
string HaruImage::getColorSpace( void )
string Imagick::__toString( void )
string Imagick::getCopyright( void )
string Imagick::getFilename( void )
string Imagick::getFont( void )
string Imagick::getFormat( void )
string Imagick::getHomeURL( void )
string Imagick::getImageArtifact( string $artifact )
string Imagick::getImageBlob( void )
string Imagick::getImageFilename( void )
string Imagick::getImageFormat( void )
string Imagick::getImageMagickLicense( void )
string Imagick::getImageProfile( string $name )
string Imagick::getImageProperty( string $name )
string Imagick::getImageSignature( void )
string Imagick::getImagesBlob( void )
string Imagick::getOption( string $key )
string Imagick::getPackageName( void )
string Imagick::getReleaseDate( void )
string Imagick::removeImageProfile( string $name )
string ImagickDraw::getClipPath( void )
string ImagickDraw::getFont( void )
string ImagickDraw::getFontFamily( void )
string ImagickDraw::getTextEncoding( void )
string ImagickDraw::getVectorGraphics( void )
string ImagickPixel::getColorAsString( void )
string Memcache::get( string $key  [, int &$flags ])
string Memcache::getVersion( void )
string MongoDB\BSON\fromJSON( string $json )
string MongoDB\BSON\fromPHP( array|object $value )
string MongoDB\BSON\toJSON( string $bson )
string OCI-Lob::load( void )
string OCI-Lob::read( int $length )
string PDF_fit_table ( resource $pdfdoc , int $table , float $llx , float $lly , float $urx , float $ury , string $optlist )
string PDF_fit_textflow ( resource $pdfdoc , int $textflow , float $llx , float $lly , float $urx , float $ury , string $optlist )
string PDF_get_apiname ( resource $pdfdoc )
string PDF_get_buffer ( resource $p )
string PDF_get_errmsg ( resource $pdfdoc )
string PDF_get_parameter ( resource $p , string $key , float $modifier )
string PDF_get_pdi_parameter ( resource $p , string $key , int $doc , int $page , int $reserved )
string PDF_pcos_get_stream ( resource $p , int $doc , string $optlist , string $path )
string PDF_pcos_get_string ( resource $p , int $doc , string $path )
string PDF_utf16_to_utf8 ( resource $pdfdoc , string $utf16string )
string PDF_utf32_to_utf16 ( resource $pdfdoc , string $utf32string , string $ordering )
string PDF_utf8_to_utf16 ( resource $pdfdoc , string $utf8string , string $ordering )
string SAMConnection::send( string $target , SAMMessage $msg  [, array $properties ])
string SAMConnection::subscribe( string $targetTopic )
string SDO_DAS_Setting::getPropertyName( void )
string SDO_DAS_XML::saveString( SDO_XMLDocument $xdoc  [, int $indent ])
string SDO_DAS_XML_Document::getRootElementName( void )
string SDO_DAS_XML_Document::getRootElementURI( void )
string SDO_DataObject::getTypeName( void )
string SDO_DataObject::getTypeNamespaceURI( void )
string SDO_Model_Property::getName( void )
string SDO_Model_Type::getName( void )
string SDO_Model_Type::getNamespaceURI( void )
string SWFFont::getShape( int $code )
string XMLWriter::outputMemory([ bool $flush = true ])
string XSLTProcessor::getParameter( string $namespaceURI , string $localName )
string XSLTProcessor::transformToXML( object $doc )
string ZipArchive::getArchiveComment([ int $flags ])
string ZipArchive::getCommentIndex( int $index  [, int $flags ])
string ZipArchive::getCommentName( string $name  [, int $flags ])
string ZipArchive::getFromIndex( int $index  [, int $length = 0  [, int $flags ]])
string ZipArchive::getFromName( string $name  [, int $length = 0  [, int $flags ]])
string ZipArchive::getNameIndex( int $index  [, int $flags ])
string ZipArchive::getStatusString( void )
string addcslashes( string $str , string $charlist )
string addslashes( string $str )
string apache_get_version( void )
string apache_getenv( string $variable  [, bool $walk_to_top = false ])
string apache_note( string $note_name  [, string $note_value = "" ])
string apc_bin_dump([ array $files = NULL  [, array $user_vars = NULL ]])
string apd_set_pprof_trace([ string $dump_directory = ini_get("apd.dumpdir")  [, string $fragment = "pprof" ]])
string base64_decode( string $data  [, bool $strict = false ])
string base64_encode( string $data )
string base_convert ( string $number , int $frombase , int $tobase )
string basename( string $path  [, string $suffix ])
string bbcode_parse( resource $bbcode_container , string $to_parse )
string bcadd( string $left_operand , string $right_operand  [, int $scale = 0 ])
string bcdiv( string $left_operand , string $right_operand  [, int $scale = 0 ])
string bcmod( string $left_operand , string $modulus )
string bcpow( string $left_operand , string $right_operand  [, int $scale = 0 ])
string bcpowmod( string $left_operand , string $right_operand , string $modulus  [, int $scale = 0 ])
string bcsqrt( string $operand  [, int $scale = 0 ])
string bcsub( string $left_operand , string $right_operand  [, int $scale = 0 ])
string bin2hex( string $str )
string bind_textdomain_codeset( string $domain , string $codeset )
string bindtextdomain( string $domain , string $directory )
string blenc_encrypt( string $plaintext , string $encodedfile  [, string $encryption_key ])
string bson_encode( mixed $anything )
string bzerrstr( resource $bz )
string bzread( resource $bz  [, int $length = 1024 ])
string cairo_image_surface_get_data( CairoImageSurface $surface )
string cairo_ps_level_to_string( int $level )
string cairo_svg_version_to_string( int $version )
string calcul_hmac( string $clent , string $siretcode , string $price , string $reference , string $validity , string $taxation , string $devise , string $language )
string calculhmac( string $clent , string $data )
string cli_get_process_title( void )
string com_create_guid( void )
string convert_uudecode( string $data )
string convert_uuencode( string $data )
string crack_getlastmessage( void )
string cubrid_client_encoding([ resource $conn_identifier  ])
string cubrid_current_oid( resource $req_identifier )
string cubrid_db_name( array $result , int $index )
string cubrid_error([ resource $connection ])
string cubrid_error_msg( void )
string cubrid_field_flags( resource $result , int $field_offset )
string cubrid_field_name( resource $result , int $field_offset )
string cubrid_field_table( resource $result , int $field_offset )
string cubrid_field_type ( resource $result , int $field_offset )
string cubrid_get_charset( resource $conn_identifier  )
string cubrid_get_class_name( resource $conn_identifier  , string $oid  )
string cubrid_get_client_info( void )
string cubrid_get_server_info( resource $conn_identifier  )
string cubrid_insert_id([ resource $conn_identifier ])
string cubrid_lob2_read( resource $lob_identifier , int $len )
string cubrid_lob2_size64( resource $lob_identifier )
string cubrid_lob2_tell64( resource $lob_identifier )
string cubrid_lob_size( resource $lob_identifier  )
string cubrid_new_glo( resource $conn_identifier  , string $class_name  , string $file_name  )
string cubrid_real_escape_string( string $unescaped_string  [, resource $conn_identifier ])
string cubrid_result( resource $result , int $row  [, mixed $field = 0 ])
string cubrid_version( void )
string curl_error( resource $ch )
string curl_multi_getcontent( resource $ch )
string curl_multi_strerror( int $errornum )
string curl_strerror( int $errornum )
string date_default_timezone_get( void )
string db2_conn_error([ resource $connection ])
string db2_conn_errormsg([ resource $connection ])
string db2_escape_string( string $string_literal )
string db2_field_name( resource $stmt , mixed $column )
string db2_field_type( resource $stmt , mixed $column )
string db2_get_option( resource $resource    , string $option )
string db2_last_insert_id( resource $resource    )
string db2_lob_read( resource $stmt , int $colnum , int $length )
string db2_stmt_error([ resource $stmt ])
string db2_stmt_errormsg([ resource $stmt ])
string dba_firstkey( resource $handle )
string dba_nextkey( resource $handle )
string dbplus_chdir([ string $newdir ])
string dbplus_errcode([ int $errno ])
string dbplus_tcl( int $sid , string $script )
string dbx_error( object $link_identifier )
string dbx_escape_string( object $link_identifier , string $text )
string dcgettext( string $domain , string $message , int $category )
string dcngettext( string $domain , string $msgid1 , string $msgid2 , int $n , int $category )
string decbin( int $number )
string dechex ( int $number )
string decoct ( int $number )
string dgettext( string $domain , string $message )
string dio_read( resource $fd  [, int $len = 1024 ])
string dngettext( string $domain , string $msgid1 , string $msgid2 , int $n )
string eio_get_last_error( resource $req )
string enchant_broker_get_error( resource $broker )
string enchant_dict_get_error( resource $dict )
string ereg_replace( string $pattern , string $replacement , string $string )
string escapeshellcmd( string $command )
string event_buffer_read( resource $bevent , int $data_size )
string exif_tagname   ( int $index )
string exif_thumbnail( string $filename  [, int &$width  [, int &$height  [, int &$imagetype ]]])
string fann_get_errstr( resource $errdat )
string fbsql_create_blob( string $blob_data  [, resource $link_identifier ])
string fbsql_create_clob( string $clob_data  [, resource $link_identifier ])
string fbsql_database( resource $link_identifier  [, string $database ])
string fbsql_database_password( resource $link_identifier  [, string $database_password ])
string fbsql_error([ resource $link_identifier ])
string fbsql_field_flags( resource $result  [, int $field_offset ])
string fbsql_field_name( resource $result  [, int $field_index ])
string fbsql_field_table( resource $result  [, int $field_offset ])
string fbsql_field_type( resource $result  [, int $field_offset ])
string fbsql_hostname( resource $link_identifier  [, string $host_name ])
string fbsql_password( resource $link_identifier  [, string $password ])
string fbsql_read_blob( string $blob_handle  [, resource $link_identifier ])
string fbsql_read_clob( string $clob_handle  [, resource $link_identifier ])
string fbsql_table_name( resource $result , int $index )
string fbsql_username( resource $link_identifier  [, string $username ])
string fdf_error([ int $error_code = -1 ])
string fdf_get_encoding( resource $fdf_document )
string fdf_get_file( resource $fdf_document )
string fdf_get_status( resource $fdf_document )
string fdf_get_version([ resource $fdf_document ])
string fdf_next_field_name( resource $fdf_document  [, string $fieldname ])
string fgetc( resource $handle )
string fgets( resource $handle  [, int $length ])
string fgetss( resource $handle  [, int $length  [, string $allowable_tags ]])
string file_get_contents( string $filename  [, bool $use_include_path = false  [, resource $context  [, int $offset = 0  [, int $maxlen ]]]])
string filepro_fieldname( int $field_number )
string filepro_fieldtype( int $field_number )
string filepro_retrieve( int $row_number , int $field_number )
string fribidi_log2vis( string $str , string $direction , int $charset )
string ftp_mkdir( resource $ftp_stream , string $directory )
string ftp_pwd( resource $ftp_stream )
string ftp_systype( resource $ftp_stream )
string geoip_asnum_by_name( string $hostname )
string geoip_continent_code_by_name( string $hostname )
string geoip_country_code3_by_name( string $hostname )
string geoip_country_code_by_name( string $hostname )
string geoip_country_name_by_name( string $hostname )
string geoip_database_info([ int $database = GEOIP_COUNTRY_EDITION ])
string geoip_db_filename( int $database )
string geoip_domain_by_name( string $hostname )
string geoip_isp_by_name( string $hostname )
string geoip_netspeedcell_by_name( string $hostname )
string geoip_org_by_name( string $hostname )
string geoip_region_name_by_code( string $country_code , string $region_code )
string geoip_time_zone_by_country_and_region( string $country_code  [, string $region_code ])
string get_called_class( void )
string get_cfg_var( string $option )
string get_class([ object $object = NULL ])
string get_current_user( void )
string get_include_path( void )
string get_parent_class([ mixed $object ])
string get_resource_type( resource $handle )
string getcwd( void )
string gethostbyaddr( string $ip_address )
string getprotobynumber( int $number )
string getservbyport( int $port , string $protocol )
string gettext( string $message )
string gmdate( string $format  [, int $timestamp = time() ])
string gmp_export( GMP $gmpnumber , integer $word_size , integer $options )
string gmp_strval( GMP $gmpnumber  [, int $base = 10 ])
string gmstrftime( string $format  [, int $timestamp = time() ])
string gnupg_decrypt( resource $identifier , string $text )
string gnupg_encrypt( resource $identifier , string $plaintext )
string gnupg_encryptsign( resource $identifier , string $plaintext )
string gnupg_export( resource $identifier , string $fingerprint )
string gnupg_geterror( resource $identifier )
string gnupg_sign( resource $identifier , string $plaintext )
string grapheme_stristr( string $haystack , string $needle  [, bool $before_needle = false ])
string grapheme_strstr( string $haystack , string $needle  [, bool $before_needle = false ])
string gupnp_context_get_host_ip( resource $context )
string gupnp_root_device_get_relative_location( resource $root_device )
string gzcompress( string $data  [, int $level = -1  [, int $encoding = ZLIB_ENCODING_DEFLATE ]])
string gzdecode( string $data  [, int $length ])
string gzgetc( resource $zp )
string gzgets( resource $zp  [, int $length ])
string gzgetss( resource $zp , int $length  [, string $allowable_tags ])
string gzinflate( string $data  [, int $length = 0 ])
string gzread( resource $zp , int $length )
string gzuncompress( string $data  [, int $length = 0 ])
string hash( string $algo , string $data  [, bool $raw_output = false ])
string hash_final( resource $context  [, bool $raw_output = false ])
string hash_hmac( string $algo , string $data , string $key  [, bool $raw_output = false ])
string hash_hmac_file( string $algo , string $filename , string $key  [, bool $raw_output = false ])
string hash_pbkdf2( string $algo , string $password , string $salt , int $iterations  [, int $length = 0  [, bool $raw_output = false ]])
string hebrev( string $hebrew_text  [, int $max_chars_per_line = 0 ])
string hebrevc( string $hebrew_text  [, int $max_chars_per_line = 0 ])
string hex2bin( string $data )
string htmlspecialchars_decode( string $string  [, int $flags = ENT_COMPAT | ENT_HTML401 ])
string hw_api_attribute::key( void )
string hw_api_attribute::langdepvalue( string $language )
string hw_api_attribute::value( void )
string hw_api_content::mimetype( void )
string hw_api_content::read( string $buffer , int $len )
string hw_api_object::title( array $parameter )
string hw_api_object::value( string $name )
string hw_api_reason::description( void )
string ibase_blob_get( resource $blob_handle , int $len )
string ibase_blob_import( resource $link_identifier , resource $file_handle )
string ibase_db_info( resource $service_handle , string $db , int $action  [, int $argument = 0 ])
string ibase_errmsg( void )
string ibase_server_info( resource $service_handle , int $action )
string ibase_wait_event( string $event_name1  [, string $event_name2  [, string $... ]])
string iconv_substr( string $str , int $offset  [, int $length = iconv_strlen($str, $charset)  [, string $charset = ini_get("iconv.internal_encoding") ]])
string id3_get_frame_long_name( string $frameId )
string id3_get_frame_short_name( string $frameId )
string id3_get_genre_name( int $genre_id )
string ifx_error([ resource $link_identifier ])
string ifx_errormsg([ int $errorcode ])
string ifx_get_blob( int $bid )
string ifx_get_char( int $bid )
string ifxus_read_slob( int $bid , int $nbytes )
string iis_get_script_map( int $server_instance , string $virtual_path , string $script_extension )
string image_type_to_mime_type( int $imagetype )
string imap_base64( string $text )
string imap_binary( string $string )
string imap_body( resource $imap_stream , int $msg_number  [, int $options = 0 ])
string imap_fetchbody( resource $imap_stream , int $msg_number , string $section  [, int $options = 0 ])
string imap_fetchheader( resource $imap_stream , int $msg_number  [, int $options = 0 ])
string imap_fetchmime( resource $imap_stream , int $msg_number , string $section  [, int $options = 0 ])
string imap_last_error( void )
string imap_mail_compose( array $envelope , array $body )
string imap_qprint( string $string )
string imap_rfc822_write_address( string $mailbox , string $host , string $personal )
string imap_utf7_decode( string $text )
string implode( string $glue , array $pieces )
string inet_ntop( string $in_addr )
string inet_pton( string $address )
string ingres_charset( resource $link )
string ingres_cursor( resource $result )
string ingres_error([ resource $link ])
string ingres_errsqlstate([ resource $link ])
string ingres_escape_string( resource $link , string $source_string )
string ingres_field_name( resource $result , int $index )
string ingres_field_type( resource $result , int $index )
string ini_get( string $varname )
string intl_error_name( int $error_code )
string intl_get_error_message( void )
string jdmonthname( int $julianday , int $mode )
string jdtogregorian( int $julianday )
string jdtojulian( int $julianday )
string json_last_error_msg( void )
string judy_version( void )
string ldap_8859_to_t61( string $value )
string ldap_dn2ufn( string $dn )
string ldap_err2str( int $errno )
string ldap_error( resource $link_identifier )
string ldap_escape( string $value  [, string $ignore  [, int $flags ]])
string ldap_first_attribute( resource $link_identifier , resource $result_entry_identifier )
string ldap_get_dn( resource $link_identifier , resource $result_entry_identifier )
string ldap_next_attribute( resource $link_identifier , resource $result_entry_identifier )
string ldap_t61_to_8859( string $value )
string long2ip( string $proper_address )
string ltrim( string $str  [, string $character_mask ])
string lzf_compress( string $data )
string lzf_decompress( string $data )
string m_connectionerror( resource $conn )
string m_getcell( resource $conn , int $identifier , string $column , int $row )
string m_getcellbynum( resource $conn , int $identifier , int $column , int $row )
string m_getcommadelimited( resource $conn , int $identifier )
string m_getheader( resource $conn , int $identifier , int $column_num )
string m_responseparam( resource $conn , int $identifier , string $key )
string m_sslcert_gen_hash( string $filename )
string mailparse_determine_best_xfer_encoding( resource $fp )
string mailparse_msg_extract_part_file( resource $mimemail , mixed $filename  [, callable $callbackfunc ])
string mailparse_msg_extract_whole_part_file( resource $mimemail , string $filename  [, callable $callbackfunc ])
string maxdb_character_set_name( resource $link )
string maxdb_connect_error( void )
string maxdb_error( resource $link )
string maxdb_get_client_info( void )
string maxdb_get_host_info( resource $link )
string maxdb_get_server_info( resource $link )
string maxdb_info( resource $link )
string maxdb_real_escape_string( resource $link , string $escapestr )
string maxdb_sqlstate( resource $link )
string maxdb_stat( resource $link )
string maxdb_stmt_error( resource $stmt )
string maxdb_stmt_sqlstate( resource $stmt )
string mb_convert_variables( string $to_encoding , mixed $from_encoding , mixed &$vars  [, mixed &$... ])
string mb_decode_mimeheader( string $str )
string mb_ereg_replace_callback( string $pattern , callable $callback , string $string  [, string $option = "msr" ])
string mb_output_handler( string $contents , int $status )
string mb_preferred_mime_name( string $encoding )
string mb_regex_set_options([ string $options = mb_regex_set_options() ])
string mb_strcut( string $str , int $start  [, int $length = NULL  [, string $encoding = mb_internal_encoding() ]])
string mb_strimwidth( string $str , int $start , int $width  [, string $trimmarker = ""  [, string $encoding = mb_internal_encoding() ]])
string mb_stristr( string $haystack , string $needle  [, bool $before_needle = false  [, string $encoding = mb_internal_encoding() ]])
string mb_strrchr( string $haystack , string $needle  [, bool $part = false  [, string $encoding = mb_internal_encoding() ]])
string mb_strrichr( string $haystack , string $needle  [, bool $part = false  [, string $encoding = mb_internal_encoding() ]])
string mb_strstr( string $haystack , string $needle  [, bool $before_needle = false  [, string $encoding = mb_internal_encoding() ]])
string mcrypt_cbc( int $cipher , string $key , string $data , int $mode  [, string $iv ])
string mcrypt_cfb( int $cipher , string $key , string $data , int $mode , string $iv )
string mcrypt_create_iv( int $size  [, int $source = MCRYPT_DEV_URANDOM ])
string mcrypt_ecb( int $cipher , string $key , string $data , int $mode )
string mcrypt_enc_get_algorithms_name( resource $td )
string mcrypt_enc_get_modes_name( resource $td )
string mcrypt_encrypt( string $cipher , string $key , string $data , string $mode  [, string $iv ])
string mcrypt_generic( resource $td , string $data )
string mcrypt_get_cipher_name( int $cipher )
string mcrypt_ofb( int $cipher , string $key , string $data , int $mode , string $iv )
string md5_file( string $filename  [, bool $raw_output = false ])
string mdecrypt_generic( resource $td , string $data )
string mhash( int $hash , string $data  [, string $key ])
string mhash_get_hash_name( int $hash )
string mhash_keygen_s2k( int $hash , string $password , string $salt , int $bytes )
string mime_content_type( string $filename )
string mqseries_strerror( int $reason )
string msession_get( string $session , string $name , string $value )
string msession_get_data( string $session )
string msession_inc( string $session , string $name )
string msession_plugin( string $session , string $val  [, string $param ])
string msession_randstr( int $param )
string msession_uniq( int $param  [, string $classname  [, string $data ]])
string msql_error( void )
string msql_field_flags( resource $result , int $field_offset )
string msql_field_name( resource $result , int $field_offset )
string msql_field_type( resource $result , int $field_offset )
string msql_result( resource $result , int $row  [, mixed $field ])
string mssql_field_name( resource $result  [, int $offset = -1 ])
string mssql_field_type( resource $result  [, int $offset = -1 ])
string mssql_get_last_message( void )
string mssql_guid_string( string $binary  [, bool $short_format = false ])
string mssql_result( resource $result , int $row , mixed $field )
string mysql_client_encoding([ resource $link_identifier = NULL ])
string mysql_db_name( resource $result , int $row  [, mixed $field = NULL ])
string mysql_error([ resource $link_identifier = NULL ])
string mysql_escape_string( string $unescaped_string )
string mysql_field_flags( resource $result , int $field_offset )
string mysql_field_name( resource $result , int $field_offset )
string mysql_field_type( resource $result , int $field_offset )
string mysql_get_client_info( void )
string mysql_get_host_info([ resource $link_identifier = NULL ])
string mysql_get_server_info([ resource $link_identifier = NULL ])
string mysql_info([ resource $link_identifier = NULL ])
string mysql_real_escape_string( string $unescaped_string  [, resource $link_identifier = NULL ])
string mysql_result( resource $result , int $row  [, mixed $field = 0 ])
string mysql_stat([ resource $link_identifier = NULL ])
string mysql_tablename( resource $result , int $i )
string mysqli::character_set_name( void )
string mysqli::escape_string( string $escapestr )
string mysqli::get_client_info( void )
string mysqli::stat( void )
string mysqli_connect_error( void )
string mysqli_error( mysqli $link )
string mysqli_get_client_info( mysqli $link )
string mysqli_get_host_info( mysqli $link )
string mysqli_get_server_info( mysqli $link )
string mysqli_info( mysqli $link )
string mysqli_sqlstate( mysqli $link )
string mysqli_stmt_error( mysqli_stmt $stmt )
string mysqli_stmt_sqlstate( mysqli_stmt $stmt )
string mysqlnd_ms_get_last_gtid( mixed $connection )
string ncurses_erasechar( void )
string ncurses_inch( void )
string ncurses_killchar( void )
string ncurses_longname( void )
string ncurses_termname( void )
string newt_checkbox_get_value( resource $checkbox )
string newt_checkbox_tree_get_entry_value( resource $checkboxtree , mixed $data )
string newt_entry_get_value( resource $entry )
string newt_listbox_get_current( resource $listbox )
string newt_reflow_text( string $text , int $width , int $flex_down , int $flex_up , int &$actual_width , int &$actual_height )
string nl2br( string $string  [, bool $is_xhtml = true ])
string nthmac( string $clent , string $data )
string oauth_get_sbs( string $http_method , string $uri  [, array $request_parameters ])
string oauth_urlencode( string $uri )
string ob_get_clean( void )
string ob_get_contents( void )
string ob_get_flush( void )
string ob_iconv_handler( string $contents , int $status )
string ob_tidyhandler( string $input  [, int $mode ])
string oci_client_version( void )
string oci_field_name( resource $statement , mixed $field )
string oci_server_version( resource $connection )
string oci_statement_type( resource $statement )
string odbc_cursor( resource $result_id )
string odbc_error([ resource $connection_id ])
string odbc_errormsg([ resource $connection_id ])
string odbc_field_type( resource $result_id , int $field_number )
string openssl_decrypt( string $data , string $method , string $password  [, int $options = 0  [, string $iv = "" ]])
string openssl_dh_compute_key( string $pub_key , resource $dh_key )
string openssl_encrypt( string $data , string $method , string $password  [, int $options = 0  [, string $iv = "" ]])
string openssl_error_string( void )
string openssl_pbkdf2( string $password , string $salt , int $key_length , int $iterations  [, string $digest_algorithm ])
string openssl_random_pseudo_bytes( int $length  [, bool &$crypto_strong ])
string openssl_spki_export( string &$spkac )
string openssl_spki_export_challenge( string &$spkac )
string openssl_spki_new( resource &$privkey , string &$challenge  [, int $algorithm = 0 ])
string openssl_spki_verify( string &$spkac )
string pcntl_strerror( int $errno )
string pg_client_encoding([ resource $connection ])
string pg_dbname([ resource $connection ])
string pg_escape_identifier([ resource $connection  ], string $data )
string pg_escape_literal([ resource $connection  ], string $data )
string pg_escape_string([ resource $connection  ], string $data )
string pg_fetch_result( resource $result , int $row , mixed $field )
string pg_field_name( resource $result , int $field_number )
string pg_field_type( resource $result , int $field_number )
string pg_host([ resource $connection ])
string pg_last_error([ resource $connection ])
string pg_last_notice( resource $connection )
string pg_last_oid( resource $result )
string pg_lo_read( resource $large_object  [, int $len = 8192 ])
string pg_options([ resource $connection ])
string pg_parameter_status([ resource $connection  ], string $param_name )
string pg_result_error( resource $result )
string pg_result_error_field( resource $result , int $fieldcode )
string pg_tty([ resource $connection ])
string pg_unescape_bytea( string $data )
string php_ini_loaded_file( void )
string php_ini_scanned_files( void )
string php_logo_guid( void )
string php_sapi_name( void )
string php_strip_whitespace( string $filename )
string php_uname([ string $mode = "a" ])
string phpversion([ string $extension ])
string posix_ctermid( void )
string posix_getcwd( void )
string posix_getlogin( void )
string posix_strerror( int $errno )
string posix_ttyname( mixed $fd )
string ps_get_buffer( resource $psdoc )
string ps_get_parameter( resource $psdoc , string $name  [, float $modifier ])
string ps_symbol_name( resource $psdoc , int $ord  [, int $fontid = 0 ])
string px_date2string( resource $pxdoc , int $value , string $format )
string px_get_parameter( resource $pxdoc , string $name )
string px_timestamp2string( resource $pxdoc , float $value , string $format )
string quoted_printable_encode( string $str )
string radius_cvt_addr( string $data )
string radius_cvt_string( string $data )
string radius_demangle( resource $radius_handle , string $mangled )
string radius_demangle_mppe_key( resource $radius_handle    , string $mangled )
string radius_get_tagged_attr_data( string $data )
string radius_request_authenticator( resource $radius_handle )
string radius_salt_encrypt_attr( resource $radius_handle , string $data )
string radius_server_secret( resource $radius_handle )
string radius_strerror( resource $radius_handle )
string random_bytes( int $length )
string rar_wrapper_cache_stats( void )
string readline([ string $prompt ])
string readlink( string $path )
string rpm_version( void )
string rrd_error( void )
string rrd_version( void )
string rtrim( string $str  [, string $character_mask ])
string session_cache_limiter([ string $cache_limiter ])
string session_encode( void )
string session_id([ string $id ])
string session_module_name([ string $module ])
string session_name([ string $name ])
string session_pgsql_get_field( void )
string session_save_path([ string $path ])
string set_include_path( string $new_include_path )
string sha1( string $str  [, bool $raw_output = false ])
string sha1_file( string $filename  [, bool $raw_output = false ])
string shmop_read( int $shmid , int $start , int $count )
string snmp2_get( string $host , string $community , string $object_id  [, string $timeout = 1000000  [, string $retries = 5 ]])
string snmp2_getnext( string $host , string $community , string $object_id  [, string $timeout = 1000000  [, string $retries = 5 ]])
string snmp3_get( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id  [, string $timeout = 1000000  [, string $retries = 5 ]])
string snmp3_getnext( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id  [, string $timeout = 1000000  [, string $retries = 5 ]])
string snmpget( string $hostname , string $community , string $object_id  [, int $timeout = 1000000  [, int $retries = 5 ]])
string snmpgetnext( string $host , string $community , string $object_id  [, int $timeout = 1000000  [, int $retries = 5 ]])
string socket_read( resource $socket , int $length  [, int $type = PHP_BINARY_READ ])
string socket_strerror( int $errno )
string solr_get_version( void )
string spl_autoload_extensions([ string $file_extensions ])
string sqlite_error_string( int $error_code )
string sqlite_escape_string( string $item )
string sqlite_fetch_single( resource $result  [, bool $decode_binary = true ])
string sqlite_field_name( resource $result , int $field_index )
string sqlite_libencoding( void )
string sqlite_libversion( void )
string sqlite_udf_decode_binary( string $data )
string sqlite_udf_encode_binary( string $data )
string ssdeep_fuzzy_hash( string $to_hash )
string ssdeep_fuzzy_hash_filename( string $file_name )
string ssh2_fingerprint( resource $session  [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX ])
string ssh2_sftp_readlink( resource $sftp , string $link )
string ssh2_sftp_realpath( resource $sftp , string $filename )
string stomp_connect_error( void )
string stomp_version( void )
string stream_get_contents( resource $handle  [, int $maxlength = -1  [, int $offset = -1 ]])
string stream_get_line( resource $handle , int $length  [, string $ending ])
string stream_resolve_include_path( string $filename  )
string stream_socket_get_name( resource $handle , bool $want_peer )
string stream_socket_recvfrom( resource $socket , int $length  [, int $flags = 0  [, string &$address ]])
string strip_tags( string $str  [, string $allowable_tags ])
string stripcslashes( string $str )
string strpbrk( string $haystack , string $char_list )
string strrchr( string $haystack , mixed $needle )
string strrev( string $string )
string strtok( string $str , string $token )
string svn_auth_get_parameter( string $key )
string svn_cat( string $repos_url  [, int $revision_no ])
string svn_client_version( void )
string svn_fs_node_prop( resource $fsroot , string $path , string $propname )
string svn_fs_revision_prop( resource $fs , int $revnum , string $propname )
string sybase_get_last_message( void )
string sybase_result( resource $result , int $row , mixed $field )
string sys_get_temp_dir( void )
string system( string $command  [, int &$return_var ])
string tempnam( string $dir , string $prefix )
string textdomain  ( string $text_domain  )
string tidy::getOptDoc( string $optname )
string tidy::getRelease( void )
string tidy::repairFile( string $filename  [, mixed $config  [, string $encoding  [, bool $use_include_path = false ]]])
string tidy::repairString( string $data  [, mixed $config  [, string $encoding ]])
string tidy_get_error_buffer( tidy $tidy )
string tidy_get_output( tidy $object )
string timezone_name_from_abbr( string $abbr  [, int $gmtOffset = -1  [, int $isdst = -1 ]])
string timezone_version_get( void )
string token_name( int $token )
string udm_error( resource $agent )
string udm_get_res_field( resource $res , int $row , int $field )
string udm_get_res_param( resource $res , int $param )
string vpopmail_error( void )
string wddx_packet_end( resource $packet_id )
string wddx_serialize_value( mixed $var  [, string $comment ])
string wddx_serialize_vars( mixed $var_name  [, mixed $... ])
string xattr_get( string $filename , string $name  [, int $flags = 0 ])
string xdiff_string_bdiff( string $old_data , string $new_data )
string xdiff_string_bpatch( string $str , string $patch )
string xdiff_string_diff( string $old_data , string $new_data  [, int $context = 3  [, bool $minimal = false ]])
string xdiff_string_patch( string $str , string $patch  [, int $flags  [, string &$error ]])
string xdiff_string_patch_binary( string $str , string $patch )
string xml_error_string( int $code )
string xmlrpc_encode( mixed $value )
string xmlrpc_encode_request( string $method , mixed $params  [, array $output_options ])
string xmlrpc_get_type( mixed $value )
string xmlrpc_server_call_method( resource $server , string $xml , mixed $user_data  [, array $output_options ])
string yaml_emit( mixed $data  [, int $encoding = YAML_ANY_ENCODING  [, int $linebreak = YAML_ANY_BREAK  [, array $callbacks ]]])
string yaz_addinfo( resource $id )
string yaz_error( resource $id )
string yaz_get_option( resource $id , string $name )
string yaz_record( resource $id , int $pos , string $type )
string yp_err_string( int $errorcode )
string yp_get_default_domain( void )
string yp_master( string $domain , string $map )
string yp_match( string $domain , string $map , string $key )
string zend_logo_guid( void )
string zend_version( void )
string zip_entry_compressionmethod( resource $zip_entry )
string zip_entry_name( resource $zip_entry )
string zip_entry_read( resource $zip_entry  [, int $length = 1024 ])
string zlib_decode( string $data  [, string $max_decoded_len ])
string zlib_encode( string $data , string $encoding  [, string $level = -1 ])
string zlib_get_coding_type( void )
tidy::__construct([ string $filename  [, mixed $config  [, string $encoding  [, bool $use_include_path ]]]])
tidyNode tidy::body( void )
tidyNode tidy::head( void )
tidyNode tidy::html( void )
tidyNode tidy::root( void )
tidyNode tidyNode::getParent( void )
variant com_get_active_object( string $progid  [, int $code_page ])
variant variant_cast( variant $variant , int $type )
variant variant_date_from_timestamp( int $timestamp )
void DOMCharacterData::appendData( string $data )
void DOMCharacterData::deleteData( int $offset , int $count )
void DOMCharacterData::insertData( int $offset , string $data )
void DOMCharacterData::replaceData( int $offset , int $count , string $data )
void PharData::offsetSet( string $offset , string $value )
void Runkit_Sandbox::__construct([ array $options ])
void Runkit_Sandbox_Parent::__construct( void )
void SAMConnection::setDebug( bool $switch )
void SDO_DAS_ChangeSummary::beginLogging( void )
void SDO_DAS_ChangeSummary::endLogging( void )
void SDO_DAS_DataFactory::addPropertyToType( string $parent_type_namespace_uri , string $parent_type_name , string $property_name , string $type_namespace_uri , string $type_name  [, array $options ])
void SDO_DAS_DataFactory::addType( string $type_namespace_uri , string $type_name  [, array $options ])
void SDO_DAS_Relational::applyChanges( PDO $database_handle , SDODataObject $root_data_object )
void SDO_DAS_XML::addTypes( string $xsd_file )
void SDO_DAS_XML::saveFile( SDO_XMLDocument $xdoc , string $xml_file  [, int $indent ])
void SDO_DAS_XML_Document::setEncoding( string $encoding )
void SDO_DAS_XML_Document::setXMLDeclaration( bool $xmlDeclatation )
void SDO_DAS_XML_Document::setXMLVersion( string $xmlVersion )
void SDO_DataFactory::create( string $type_namespace_uri , string $type_name )
void SDO_DataObject::clear( void )
void SDO_List::insert( mixed $value  [, int $index ])
void SDO_Sequence::insert( mixed $value  [, int $sequenceIndex  [, mixed $propertyIdentifier ]])
void SDO_Sequence::move ( int $toIndex, int $fromIndex )
void SWFButton::addAction( SWFAction $action , int $flags )
void SWFButton::addShape( SWFShape $shape , int $flags )
void SWFButton::setAction( SWFAction $action )
void SWFButton::setDown( SWFShape $shape )
void SWFButton::setHit( SWFShape $shape )
void SWFButton::setMenu( int $flag )
void SWFButton::setOver( SWFShape $shape )
void SWFButton::setUp( SWFShape $shape )
void SWFDisplayItem::addAction( SWFAction $action , int $flags )
void SWFDisplayItem::addColor( int $red , int $green , int $blue  [, int $a ])
void SWFDisplayItem::endMask( void )
void SWFDisplayItem::move( float $dx , float $dy )
void SWFDisplayItem::moveTo( float $x , float $y )
void SWFDisplayItem::multColor( float $red , float $green , float $blue  [, float $a ])
void SWFDisplayItem::remove( void )
void SWFDisplayItem::rotate( float $angle )
void SWFDisplayItem::rotateTo( float $angle )
void SWFDisplayItem::scale( float $dx , float $dy )
void SWFDisplayItem::setDepth( int $depth )
void SWFDisplayItem::setMaskLevel( int $level )
void SWFDisplayItem::setMatrix( float $a , float $b , float $c , float $d , float $x , float $y )
void SWFDisplayItem::setName( string $name )
void SWFDisplayItem::setRatio( float $ratio )
void SWFDisplayItem::skewX( float $ddegrees )
void SWFDisplayItem::skewXTo( float $degrees )
void SWFDisplayItem::skewY( float $ddegrees )
void SWFDisplayItem::skewYTo( float $degrees )
void SWFFill::moveTo( float $x , float $y )
void SWFFill::rotateTo( float $angle )
void SWFFill::scaleTo( float $x  [, float $y ])
void SWFFill::skewXTo( float $x )
void SWFFill::skewYTo( float $y )
void SWFFontChar::addChars( string $char )
void SWFFontChar::addUTF8Chars( string $char )
void SWFGradient::addEntry( float $ratio , int $red , int $green , int $blue  [, int $alpha = 255 ])
void SWFMovie::addExport( SWFCharacter $char , string $name )
void SWFMovie::labelFrame( string $label )
void SWFMovie::nextFrame( void )
void SWFMovie::remove( object $instance )
void SWFMovie::setDimension( float $width , float $height )
void SWFMovie::setFrames( int $number )
void SWFMovie::setRate( float $rate )
void SWFMovie::setbackground( int $red , int $green , int $blue )
void SWFMovie::stopSound( SWFSound $sound )
void SWFMovie::writeExports( void )
void SWFShape::drawArc( float $r , float $startAngle , float $endAngle )
void SWFShape::drawCircle( float $r )
void SWFShape::drawGlyph( SWFFont $font , string $character  [, int $size ])
void SWFShape::drawLine( float $dx , float $dy )
void SWFShape::drawLineTo( float $x , float $y )
void SWFShape::movePen( float $dx , float $dy )
void SWFShape::movePenTo( float $x , float $y )
void SWFShape::setLeftFill( SWFGradient $fill )
void SWFShape::setLine( SWFShape $shape )
void SWFShape::setRightFill( SWFGradient $fill )
void SWFSoundInstance::loopCount( int $point )
void SWFSoundInstance::loopInPoint( int $point )
void SWFSoundInstance::loopOutPoint( int $point )
void SWFSoundInstance::noMultiple( void )
void SWFSprite::add( object $object )
void SWFSprite::labelFrame( string $label )
void SWFSprite::nextFrame( void )
void SWFSprite::remove( object $object )
void SWFSprite::setFrames( int $number )
void SWFSprite::stopSound( SWFSound $sount )
void SWFText::addString( string $string )
void SWFText::addUTF8String( string $text )
void SWFText::moveTo( float $x , float $y )
void SWFText::setColor( int $red , int $green , int $blue  [, int $a = 255 ])
void SWFText::setFont( SWFFont $font )
void SWFText::setHeight( float $height )
void SWFText::setSpacing( float $spacing )
void SWFTextField::addChars( string $chars )
void SWFTextField::addString( string $string )
void SWFTextField::align( int $alignement )
void SWFTextField::setBounds( float $width , float $height )
void SWFTextField::setColor( int $red , int $green , int $blue  [, int $a = 255 ])
void SWFTextField::setFont( SWFFont $font )
void SWFTextField::setHeight( float $height )
void SWFTextField::setIndentation( float $width )
void SWFTextField::setLeftMargin( float $width )
void SWFTextField::setLineSpacing( float $height )
void SWFTextField::setMargins( float $left , float $right )
void SWFTextField::setName( string $name )
void SWFTextField::setPadding( float $padding )
void SWFTextField::setRightMargin( float $width )
void SWFVideoStream::setDimension( int $x , int $y )
void SplQueue::enqueue( mixed $value )
void SplQueue::setIteratorMode( int $mode )
void SplStack::setIteratorMode( int $mode )
void Swish::__construct( string $index_names )
void SwishSearch::resetLimit( void )
void SwishSearch::setLimit( string $property , string $low , string $high )
void SwishSearch::setPhraseDelimiter( string $delimiter )
void SwishSearch::setSort( string $sort )
void SwishSearch::setStructure( int $structure )
void XSLTProcessor::registerPHPFunctions([ mixed $restrict ])
void __autoload( string $class )
void __halt_compiler( void )
void apd_clunk( string $warning  [, string $delimiter = "" ])
void apd_croak( string $warning  [, string $delimiter = "" ])
void apd_dump_function_table( void )
void apd_set_session( int $debug_level )
void apd_set_session_trace( int $debug_level  [, string $dump_directory = ini_get("apd.dumpdir") ])
void cairo_font_options_merge( CairoFontOptions $options , CairoFontOptions $other )
void cairo_font_options_set_antialias( CairoFontOptions $options , int $antialias )
void cairo_font_options_set_hint_metrics( CairoFontOptions $options , int $hint_metrics )
void cairo_font_options_set_hint_style( CairoFontOptions $options , int $hint_style )
void cairo_font_options_set_subpixel_order( CairoFontOptions $options , int $subpixel_order )
void cairo_matrix_invert( CairoMatrix $matrix )
void cairo_matrix_rotate( CairoMatrix $matrix , float $radians )
void cairo_matrix_translate( CairoMatrix $matrix , float $tx , float $ty )
void cairo_pattern_add_color_stop_rgb( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue )
void cairo_pattern_add_color_stop_rgba( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue , float $alpha )
void cairo_pattern_set_extend( string $pattern , string $extend )
void cairo_pattern_set_filter( CairoSurfacePattern $pattern , int $filter )
void cairo_pattern_set_matrix( CairoPattern $pattern , CairoMatrix $matrix )
void cairo_pdf_surface_set_size( CairoPdfSurface $surface , float $width , float $height )
void cairo_ps_surface_dsc_begin_page_setup( CairoPsSurface $surface )
void cairo_ps_surface_dsc_begin_setup( CairoPsSurface $surface )
void cairo_ps_surface_dsc_comment( CairoPsSurface $surface , string $comment )
void cairo_ps_surface_restrict_to_level( CairoPsSurface $surface , int $level )
void cairo_ps_surface_set_eps( CairoPsSurface $surface , bool $level )
void cairo_ps_surface_set_size( CairoPsSurface $surface , float $width , float $height )
void cairo_surface_copy_page( CairoSurface $surface )
void cairo_surface_finish( CairoSurface $surface )
void cairo_surface_flush( CairoSurface $surface )
void cairo_surface_mark_dirty( CairoSurface $surface )
void cairo_surface_mark_dirty_rectangle( CairoSurface $surface , float $x , float $y , float $width , float $height )
void cairo_surface_set_device_offset( CairoSurface $surface , float $x , float $y )
void cairo_surface_set_fallback_resolution( CairoSurface $surface , float $x , float $y )
void cairo_surface_show_page( CairoSurface $surface )
void cairo_surface_write_to_png( CairoSurface $surface , resource $stream )
void cairo_svg_surface_restrict_to_version( CairoSvgSurface $surface , int $version )
void clearstatcache([ bool $clear_realpath_cache = false  [, string $filename ]])
void closedir([ resource $dir_handle ])
void curl_close( resource $ch )
void curl_multi_close( resource $mh )
void curl_reset( resource $ch )
void curl_share_close( resource $sh )
void cyrus_authenticate( resource $connection  [, string $mechlist  [, string $service  [, string $user  [, int $minssf  [, int $maxssf  [, string $authname  [, string $password ]]]]]]])
void dba_close( resource $handle )
void debug_print_backtrace ([ int $options = 0   [, int $limit = 0  ]])
void debug_zval_dump( mixed $variable  [, mixed $... ])
void define_syslog_variables( void )
void dio_close( resource $fd )
void echo( string $arg1  [, string $... ])
void eio_cancel( resource $req )
void eio_grp_add( resource $grp , resource $req )
void eio_grp_cancel( resource $grp )
void eio_grp_limit( resource $grp , int $limit )
void eio_init( void )
void eio_set_max_idle( int $nthreads )
void eio_set_max_parallel( int $nthreads )
void eio_set_max_poll_reqs( int $nreqs )
void eio_set_max_poll_time( float $nseconds )
void eio_set_min_parallel( string $nthreads )
void enchant_dict_add_to_personal( resource $dict , string $word )
void enchant_dict_add_to_session( resource $dict , string $word )
void enchant_dict_store_replacement( resource $dict , string $mis , string $cor )
void error_clear_last( void )
void event_base_free( resource $event_base )
void event_buffer_fd_set( resource $bevent , resource $fd )
void event_buffer_free( resource $bevent )
void event_buffer_timeout_set( resource $bevent , int $read_timeout , int $write_timeout )
void event_buffer_watermark_set( resource $bevent , int $events , int $lowmark , int $highmark )
void exit([ string $status ])
void fam_close( resource $fam )
void fann_print_error( string $errdat )
void fann_reset_errno( resource $errdat )
void fann_reset_errstr( resource $errdat )
void fann_set_error_log( resource $errdat , string $log_file )
void fbsql_set_characterset( resource $link_identifier , int $characterset  [, int $in_out_both ])
void fbsql_set_transaction( resource $link_identifier , int $locking , int $isolation )
void fdf_close( resource $fdf_document )
void fdf_header( void )
void gc_disable( void )
void gc_enable( void )
void geoip_setup_custom_directory( string $path )
void gmp_clrbit( GMP $a , int $index )
void gmp_setbit( GMP &$a , int $index  [, bool $bit_on = true ])
void gnupg_seterrormode( resource $identifier , int $errormode )
void gupnp_context_set_subscription_timeout( resource $context , int $timeout )
void header_remove([ string $name ])
void ibase_blob_add( resource $blob_handle , string $data )
void imagecolorset( resource $image , int $index , int $red , int $green , int $blue  [, int $alpha = 0 ])
void imagepalettecopy( resource $destination , resource $source )
void ini_restore( string $varname )
void libxml_clear_errors( void )
void libxml_set_external_entity_loader( callable $resolver_function )
void libxml_set_streams_context( resource $streams_context )
void m_destroyengine( void )
void mailparse_msg_extract_part( resource $mimemail , string $msgbody  [, callable $callbackfunc ])
void maxdb_debug( string $debug )
void maxdb_free_result( resource $result )
void maxdb_server_end( void )
void maxdb_stmt_free_result( resource $stmt )
void ming_setcubicthreshold( int $threshold )
void ming_setscale( float $scale )
void ming_setswfcompression( int $level )
void ming_useconstants( int $use )
void ming_useswfversion( int $version )
void mqseries_back( resource $hconn , resource &$compCode , resource &$reason )
void mqseries_begin( resource $hconn , array $beginOptions , resource &$compCode , resource &$reason )
void mqseries_close( resource $hconn , resource $hobj , int $options , resource &$compCode , resource &$reason )
void mqseries_cmit( resource $hconn , resource &$compCode , resource &$reason )
void mqseries_conn( string $qManagerName , resource &$hconn , resource &$compCode , resource &$reason )
void mqseries_connx( string $qManagerName , array &$connOptions , resource &$hconn , resource &$compCode , resource &$reason )
void mqseries_disc( resource $hconn , resource &$compCode , resource &$reason )
void mqseries_get( resource $hConn , resource $hObj , array &$md , array &$gmo , int &$bufferLength , string &$msg , int &$data_length , resource &$compCode , resource &$reason )
void mqseries_inq( resource $hconn , resource $hobj , int $selectorCount , array $selectors , int $intAttrCount , resource &$intAttr , int $charAttrLength , resource &$charAttr , resource &$compCode , resource &$reason )
void mqseries_open( resource $hconn , array &$objDesc , int $option , resource &$hobj , resource &$compCode , resource &$reason )
void mqseries_put( resource $hConn , resource $hObj , array &$md , array &$pmo , string $message , resource &$compCode , resource &$reason )
void mqseries_put1( resource $hconn , resource &$objDesc , resource &$msgDesc , resource &$pmo , string $buffer , resource &$compCode , resource &$reason )
void mqseries_set( resource $hconn , resource $hobj , int $selectorcount , array $selectors , int $intattrcount , array $intattrs , int $charattrlength , array $charattrs , resource &$compCode , resource &$reason )
void msession_disconnect( void )
void msession_set_array( string $session , array $tuples )
void mssql_min_error_severity( int $severity )
void mssql_min_message_severity( int $severity )
void mysqli::disable_reads_from_master( void )
void mysqli_driver::embedded_server_end( void )
void mysqli_result::free( void )
void mysqli_set_local_infile_default( mysqli $link )
void mysqli_stmt::data_seek( int $offset )
void mysqli_stmt::free_result( void )
void ncurses_bkgdset( int $attrchar )
void ncurses_filter( void )
void ncurses_getmaxyx( resource $window , int &$y , int &$x )
void ncurses_getyx( resource $window , int &$y , int &$x )
void ncurses_init( void )
void ncurses_noqiflush( void )
void ncurses_qiflush( void )
void ncurses_timeout( int $millisec )
void ncurses_update_panels( void )
void ncurses_use_env( bool $flag )
void newt_bell( void )
void newt_checkbox_set_flags( resource $checkbox , int $flags , int $sense )
void newt_checkbox_set_value( resource $checkbox , string $value )
void newt_checkbox_tree_add_item( resource $checkboxtree , string $text , mixed $data , int $flags , int $index  [, int $... ])
void newt_checkbox_tree_set_current( resource $checkboxtree , mixed $data )
void newt_checkbox_tree_set_entry( resource $checkboxtree , mixed $data , string $text )
void newt_checkbox_tree_set_entry_value( resource $checkboxtree , mixed $data , string $value )
void newt_checkbox_tree_set_width( resource $checkbox_tree , int $width )
void newt_clear_key_buffer( void )
void newt_cls( void )
void newt_component_add_callback( resource $component , mixed $func_name , mixed $data )
void newt_component_takes_focus( resource $component , bool $takes_focus )
void newt_cursor_off( void )
void newt_cursor_on( void )
void newt_delay( int $microseconds )
void newt_draw_form( resource $form )
void newt_draw_root_text( int $left , int $top , string $text )
void newt_entry_set( resource $entry , string $value  [, bool $cursor_at_end ])
void newt_entry_set_filter( resource $entry , callable $filter , mixed $data )
void newt_entry_set_flags( resource $entry , int $flags , int $sense )
void newt_form_add_component( resource $form , resource $component )
void newt_form_add_components( resource $form , array $components )
void newt_form_add_hot_key( resource $form , int $key )
void newt_form_destroy( resource $form )
void newt_form_run( resource $form , array &$exit_struct )
void newt_form_set_background( resource $from , int $background )
void newt_form_set_height( resource $form , int $height )
void newt_form_set_size( resource $form )
void newt_form_set_timer( resource $form , int $milliseconds )
void newt_form_set_width( resource $form , int $width )
void newt_form_watch_fd( resource $form , resource $stream  [, int $flags ])
void newt_get_screen_size( int &$cols , int &$rows )
void newt_grid_add_components_to_form( resource $grid , resource $form , bool $recurse )
void newt_grid_free( resource $grid , bool $recurse )
void newt_grid_get_size( resouce $grid , int &$width , int &$height )
void newt_grid_place( resource $grid , int $left , int $top )
void newt_grid_set_field( resource $grid , int $col , int $row , int $type , resource $val , int $pad_left , int $pad_top , int $pad_right , int $pad_bottom , int $anchor  [, int $flags ])
void newt_grid_wrapped_window( resource $grid , string $title )
void newt_grid_wrapped_window_at( resource $grid , string $title , int $left , int $top )
void newt_label_set_text( resource $label , string $text )
void newt_listbox_append_entry( resource $listbox , string $text , mixed $data )
void newt_listbox_clear( resource $listobx )
void newt_listbox_clear_selection( resource $listbox )
void newt_listbox_delete_entry( resource $listbox , mixed $key )
void newt_listbox_insert_entry( resource $listbox , string $text , mixed $data , mixed $key )
void newt_listbox_select_item( resource $listbox , mixed $key , int $sense )
void newt_listbox_set_current( resource $listbox , int $num )
void newt_listbox_set_current_by_key( resource $listbox , mixed $key )
void newt_listbox_set_data( resource $listbox , int $num , mixed $data )
void newt_listbox_set_entry( resource $listbox , int $num , string $text )
void newt_listbox_set_width( resource $listbox , int $width )
void newt_listitem_set( resource $item , string $text )
void newt_pop_help_line( void )
void newt_pop_window( void )
void newt_push_help_line([ string $text ])
void newt_redraw_help_line( void )
void newt_refresh( void )
void newt_resize_screen([ bool $redraw ])
void newt_resume( void )
void newt_scale_set( resource $scale , int $amount )
void newt_scrollbar_set( resource $scrollbar , int $where , int $total )
void newt_set_help_callback( mixed $function )
void newt_set_suspend_callback( callable $function , mixed $data )
void newt_suspend( void )
void newt_textbox_set_height( resource $textbox , int $height )
void newt_textbox_set_text( resource $textbox , string $text )
void newt_wait_for_key( void )
void newt_win_message( string $title , string $button_text , string $format  [, mixed $args  [, mixed $... ]])
void newt_win_messagev( string $title , string $button_text , string $format , array $args )
void ob_clean( void )
void ob_flush( void )
void ob_implicit_flush([ int $flag = true ])
void oci_internal_debug( bool $onoff )
void odbc_close( resource $connection_id )
void odbc_close_all( void )
void openssl_free_key( resource $key_identifier )
void openssl_pkey_free( resource $key )
void openssl_x509_free( resource $x509cert )
void passthru( string $command  [, int &$return_var ])
void ps_close_image( resource $psdoc , int $imageid )
void px_set_tablename( resource $pxdoc , string $name )
void readline_callback_read_char( void )
void readline_on_new_line( void )
void readline_redisplay( void )
void register_shutdown_function( callable $callback  [, mixed $parameter  [, mixed $... ]])
void restore_include_path( void )
void rewinddir([ resource $dir_handle ])
void rrdc_disconnect( void )
void session_abort( void )
void session_register_shutdown( void )
void session_reset( void )
void session_set_cookie_params( int $lifetime  [, string $path  [, string $domain  [, bool $secure = false  [, bool $httponly = false ]]]])
void session_unset( void )
void session_write_close( void )
void shmop_close( int $shmid )
void snmp_set_oid_numeric_print( int $oid_format )
void socket_clear_error([ resource $socket ])
void socket_close( resource $socket )
void spl_autoload( string $class_name  [, string $file_extensions = spl_autoload_extensions() ])
void spl_autoload_call( string $class_name )
void sqlite_busy_timeout( resource $dbhandle , int $milliseconds )
void sqlite_close( resource $dbhandle )
void sqlite_create_aggregate( resource $dbhandle , string $function_name , callable $step_func , callable $finalize_func  [, int $num_args = -1 ])
void sqlite_create_function( resource $dbhandle , string $function_name , callable $callback  [, int $num_args = -1 ])
void stats_rand_setall( int $iseed1 , int $iseed2 )
void stream_bucket_append( resource $brigade , object $bucket )
void stream_bucket_prepend( resource $brigade , object $bucket )
void stream_notification_callback( int $notification_code , int $severity , string $message , int $message_code , int $bytes_transferred , int $bytes_max )
void svn_auth_set_parameter( string $key , string $value )
void sybase_deadlock_retry_count( int $retry_count )
void sybase_min_client_severity( int $severity )
void sybase_min_error_severity( int $severity )
void sybase_min_message_severity( int $severity )
void sybase_min_server_severity( int $severity )
void tidy_load_config( string $filename , string $encoding )
void trader_set_compat( integer $compatId )
void trader_set_unstable_period( integer $functionId , integer $timePeriod )
void unregister_tick_function( string $function_name )
void uopz_backup( string $class , string $function )
void uopz_compose( string $name , array $classes  [, array $methods  [, array $properties  [, int $flags ]]])
void uopz_delete( string $class , string $function )
void uopz_extend( string $class , string $parent )
void uopz_function( string $class , string $function , Closure $handler  [, int $modifiers ])
void uopz_implement( string $class , string $interface )
void uopz_overload( int $opcode , Callable $callable )
void uopz_redefine( string $class , string $constant , mixed $value )
void uopz_rename( string $class , string $function , string $rename )
void uopz_restore( string $class , string $function )
void uopz_undefine( string $class , string $constant )
void usleep( int $micro_seconds )
void variant_set( variant $variant , mixed $value )
void variant_set_type( variant $variant , int $type )
void xhprof_enable([ int $flags = 0  [, array $options ]])
void xhprof_sample_enable( void )
void yaz_ccl_conf( resource $id , array $config )
void yaz_es( resource $id , string $type , array $args )
void yaz_itemorder( resource $id , array $args )
void yaz_range( resource $id , int $start , int $number )
void yaz_scan( resource $id , string $type , string $startterm  [, array $flags ])
void yaz_schema( resource $id , string $schema )
void yaz_set_option( resource $id , string $name , string $value )
void yaz_sort( resource $id , string $criteria )
void yaz_syntax( resource $id , string $syntax )
void yp_all( string $domain , string $map , string $callback )
void zip_close( resource $zip )
voidCounter::resetValue  ( void  )
voidcounter_bump  ( integer $offset  )
voidcounter_bump_value  ( resource $counter  , integer $offset  )
voidcounter_reset  ( void  )
voidcounter_reset_value  ( resource $counter  )
