 APCIterator::key    ( void   )
 APCUIterator::key    ( void   )
 ArrayIterator::offsetExists    ( string $index   )
 ArrayIterator::offsetGet    ( string $index   )
 ArrayIterator::offsetSet    ( string $index   , string $newval   )
 ArrayIterator::offsetUnset    ( string $index   )
 ArrayIterator::serialize    ( void   )
 ArrayIterator::setFlags    ( string $flags   )
 ArrayIterator::uasort    ( string $cmp_function   )
 ArrayIterator::uksort    ( string $cmp_function   )
 ArrayIterator::unserialize    ( string $serialized   )
 ArrayObject::getIteratorClass    ( void   )
 ArrayObject::serialize    ( void   )
 ArrayObject::setIteratorClass    ( string $iterator_class   )
 ArrayObject::unserialize    ( string $serialized   )
 CachingIterator::offsetExists    ( string $index   )
 CachingIterator::offsetGet    ( string $index   )
 CachingIterator::offsetSet    ( string $index   , string $newval   )
 CachingIterator::offsetUnset    ( string $index   )
 Cairo::statusToString    ( int $status    )
 Cairo::versionString    ( void    )
 CairoContext::inFill    ( string $x   , string $y    )
 CairoContext::inStroke    ( string $x   , string $y    )
 CairoContext::lineTo    ( string $x   , string $y    )
 CairoContext::mask    ( string $pattern    )
 CairoContext::maskSurface    ( string $surface   [, string $x   [, string $y   ]] )
 CairoContext::moveTo    ( string $x   , string $y    )
 CairoContext::paintWithAlpha    ( string $alpha    )
 CairoContext::pushGroupWithContent    ( string $content    )
 CairoContext::rectangle    ( string $x   , string $y   , string $width   , string $height    )
 CairoContext::relCurveTo    ( string $x1   , string $y1   , string $x2   , string $y2   , string $x3   , string $y3    )
 CairoContext::relLineTo    ( string $x   , string $y    )
 CairoContext::relMoveTo    ( string $x   , string $y    )
 CairoContext::rotate    ( string $angle    )
 CairoContext::scale    ( string $x   , string $y    )
 CairoContext::selectFontFace    ( string $family   [, string $slant   [, string $weight   ]] )
 CairoContext::setAntialias    ([ string $antialias   ] )
 CairoContext::setDash    ( string $dashes   [, string $offset   ] )
 CairoContext::setFillRule    ( string $setting    )
 CairoContext::setFontMatrix    ( string $matrix    )
 CairoContext::setFontOptions    ( string $fontoptions    )
 CairoContext::setFontSize    ( string $size    )
 CairoContext::setLineCap    ( string $setting    )
 CairoContext::setLineJoin    ( string $setting    )
 CairoContext::setLineWidth    ( string $width    )
 CairoContext::setMatrix    ( string $matrix    )
 CairoContext::setMiterLimit    ( string $limit    )
 CairoContext::setOperator    ( string $setting    )
 CairoContext::setScaledFont    ( string $scaledfont    )
 CairoContext::setSource    ( string $pattern    )
 CairoContext::setSourceRGB    ( string $red   , string $green   , string $blue    )
 CairoContext::setSourceRGBA    ( string $red   , string $green   , string $blue   , string $alpha    )
 CairoContext::setSourceSurface    ( string $surface   [, string $x   [, string $y   ]] )
 CairoContext::setTolerance    ( string $tolerance    )
 CairoContext::showText    ( string $text    )
 CairoContext::textExtents    ( string $text    )
 CairoContext::textPath    ( string $string   )
 CairoContext::transform    ( string $matrix    )
 CairoContext::translate    ( string $x   , string $y    )
 CairoContext::userToDevice    ( string $x   , string $y    )
 CairoContext::userToDeviceDistance    ( string $x   , string $y    )
 CairoFontOptions::equal    ( string $other   )
 CairoFontOptions::merge    ( string $other   )
 CairoFontOptions::setAntialias    ( string $antialias    )
 CairoFontOptions::setHintMetrics    ( string $hint_metrics   )
 CairoFontOptions::setHintStyle    ( string $hint_style   )
 CairoFontOptions::setSubpixelOrder    ( string $subpixel_order   )
 CairoGradientPattern::addColorStopRgb    ( string $offset   , string $red   , string $green   , string $blue   )
 CairoGradientPattern::addColorStopRgba    ( string $offset   , string $red   , string $green   , string $blue   , string $alpha   )
 CairoGradientPattern::getColorStopRgba    ( string $index   )
 CairoImageSurface CairoImageSurface::createFromPng    ( string $file   )
 CairoImageSurface::getData    ( void   )
 CairoMatrix::rotate    ( string $sx   , string $sy    )
 CairoMatrix::transformDistance    ( string $dx   , string $dy   )
 CairoMatrix::transformPoint    ( string $dx   , string $dy   )
 CairoMatrix::translate    ( string $tx   , string $ty    )
 CairoPattern::setMatrix    ( string $matrix    )
 CairoPdfSurface::setSize    ( string $width   , string $height   )
 CairoPsSurface::dscComment    ( string $comment   )
 CairoPsSurface::levelToString    ( int $level   )
 CairoPsSurface::restrictToLevel    ( string $level   )
 CairoPsSurface::setEps    ( string $level   )
 CairoPsSurface::setSize    ( string $width   , string $height   )
 CairoScaledFont::glyphExtents    ( string $glyphs   )
 CairoScaledFont::textExtents    ( string $text    )
 CairoSurface::createSimilar    ( CairoSurface $other   , int $content   , string $width   , string $height   )
 CairoSurface::markDirtyRectangle    ( string $x   , string $y   , string $width   , string $height   )
 CairoSurface::setDeviceOffset    ( string $x   , string $y   )
 CairoSurface::setFallbackResolution    ( string $x   , string $y   )
 CairoSurface::writeToPng    ( string $file   )
 CairoSurfacePattern::setFilter    ( string $filter   )
 CairoSvgSurface::restrictToVersion    ( string $version   )
 CairoSvgSurface::versionToString    ( int $version   )
 CallbackFilterIterator::accept    ( void   )
 Collator Collator::create    ( string $locale   )
 Collator::getErrorMessage    ( void   )
 Collator::getLocale    ( int $type   )
 Collator::getSortKey    ( string $str   )
 Counter::getNamed       ( string $name      )
 DOMCharacterData::appendData    ( string $data   )
 DOMCharacterData::insertData    ( int $offset   , string $data   )
 DOMCharacterData::replaceData    ( int $offset   , int $count   , string $data   )
 DOMDocument::load    ( string $filename   [, int $options = 0  ] )
 DOMDocument::loadHTML    ( string $source   [, int $options = 0  ] )
 DOMDocument::loadHTMLFile    ( string $filename   [, int $options = 0  ] )
 DOMDocument::loadXML    ( string $source   [, int $options = 0  ] )
 DOMDocument::registerNodeClass    ( string $baseclass   , string $extendedclass   )
 DOMDocument::relaxNGValidate    ( string $filename   )
 DOMDocument::relaxNGValidateSource    ( string $source   )
 DOMDocument::saveHTML    ([ DOMNode $node = NULL  ] )
 DOMDocument::saveXML    ([ DOMNode $node   [, int $options  ]] )
 DOMDocument::schemaValidate    ( string $filename   [, int $flags  ] )
 DOMDocument::schemaValidateSource    ( string $source   [, int $flags  ] )
 DOMDocumentFragment::appendXML    ( string $data   )
 DOMElement::getAttribute    ( string $name   )
 DOMElement::getAttributeNS    ( string $namespaceURI   , string $localName   )
 DOMElement::hasAttribute    ( string $name   )
 DOMElement::hasAttributeNS    ( string $namespaceURI   , string $localName   )
 DOMElement::removeAttribute    ( string $name   )
 DOMElement::removeAttributeNS    ( string $namespaceURI   , string $localName   )
 DOMElement::setAttributeNS    ( string $namespaceURI   , string $qualifiedName   , string $value   )
 DOMElement::setIdAttribute    ( string $name   , bool $isId   )
 DOMElement::setIdAttributeNS    ( string $namespaceURI   , string $localName   , bool $isId   )
 DOMImplementation::hasFeature    ( string $feature   , string $version   )
 DOMNode::C14N    ([ bool $exclusive   [, bool $with_comments   [, array $xpath   [, array $ns_prefixes  ]]]] )
 DOMNode::getNodePath    ( void   )
 DOMNode::isDefaultNamespace    ( string $namespaceURI   )
 DOMNode::isSupported    ( string $feature   , string $version   )
 DOMNode::lookupNamespaceURI    ( string $prefix   )
 DOMNode::lookupPrefix    ( string $namespaceURI   )
 DOMXPath::evaluate    ( string $expression   [, DOMNode $contextnode   [, bool $registerNodeNS = true  ]] )
 DOMXPath::registerNamespace    ( string $prefix   , string $namespaceURI         )
 DateInterval DateInterval::createFromDateString    ( string $time   )
 DateInterval::format    ( string $format   )
 DateTime DateTime::createFromFormat    ( string $format   , string $time   [, DateTimeZone $timezone  ] )
 DateTime::format    ( string $format   )
 DateTimeImmutable DateTimeImmutable::createFromFormat    ( string $format   , string $time   [, DateTimeZone $timezone  ] )
 DateTimeZone::getName    ( void   )
 Directory::read    ([ resource $dir_handle  ] )
 DirectoryIterator::__toString    ( void   )
 DirectoryIterator::getBasename    ([  string $suffix   ] )
 DirectoryIterator::getExtension    ( void   )
 DirectoryIterator::getFilename    ( void   )
 DirectoryIterator::getPath    ( void   )
 DirectoryIterator::getPathname    ( void   )
 DirectoryIterator::getType    ( void   )
 DirectoryIterator::key    ( void   )
 EvCheck EvLoop::check    (  string $callback    [,  string $data    [,  string $priority   ]] )
 EvChild EvLoop::child    (  string $pid    ,  string $trace    ,  string $callback    [,  string $data    [,  string $priority   ]] )
 EvEmbed EvLoop::embed    (  string $other    [,  string $callback    [,  string $data    [,  string $priority   ]]] )
 EvStat EvLoop::stat    (  string $path    ,  double $interval    ,  callable $callback    [,  mixed $data  = NULL    [,  int $priority  = 0   ]] )
 EvStat::set    (  string $path    ,  double $interval    )
 EventBase::getMethod    ([  EventConfig $cfg   ] )
 EventBuffer::add    (  string $data    )
 EventBuffer::prepend    (  string $data    )
 EventBuffer::pullup    (  int $size    )
 EventBuffer::read    (  int $max_bytes    )
 EventBuffer::readLine    (  int $eol_style    )
 EventBuffer::search    (  string $what    [,  int $start  = -1    [,  int $end  = -1   ]] )
 EventBuffer::substr    (  int $start    [,  int $length   ] )
 EventBufferEvent::connect    (  string $addr    )
 EventBufferEvent::connectHost    (  EventDnsBase $dns_base    ,  string $hostname    ,  int $port    [,  int $family  = EventUtil::AF_UNSPEC   ] )
 EventBufferEvent::getDnsErrorString    ( void   )
 EventBufferEvent::read    (  int $size    )
 EventBufferEvent::setCallbacks    (  callable $readcb    ,  callable $writecb    ,  callable $eventcb    [,  string $arg   ] )
 EventBufferEvent::sslError    ( void   )
 EventBufferEvent::sslGetCipherInfo    ( void   )
 EventBufferEvent::sslGetCipherName    ( void   )
 EventBufferEvent::sslGetCipherVersion    ( void   )
 EventBufferEvent::sslGetProtocol    ( void   )
 EventBufferEvent::write    (  string $data    )
 EventDnsBase::addNameserverIp    (  string $ip    )
 EventDnsBase::addSearch    (  string $domain    )
 EventDnsBase::loadHosts    (  string $hosts    )
 EventDnsBase::parseResolvConf    (  int $flags    ,  string $filename    )
 EventDnsBase::setOption    (  string $option    ,  string $value    )
 EventHttp::addServerAlias    (  string $alias    )
 EventHttp::bind    (  string $address    ,  int $port    )
 EventHttp::removeServerAlias    (  string $alias    )
 EventHttp::setCallback    (  string $path    ,  string $cb    [,  string $arg   ] )
 EventHttp::setDefaultCallback    (  string $cb    [,  string $arg   ] )
 EventHttpConnection::getPeer    (  string &$address    ,  int &$port    )
 EventHttpConnection::makeRequest    (  EventHttpRequest $req    ,  int $type    ,  string $uri    )
 EventHttpConnection::setLocalAddress    (  string $address    )
 EventHttpConnection::setMaxBodySize    (  string $max_size    )
 EventHttpConnection::setMaxHeadersSize    (  string $max_size    )
 EventHttpRequest::addHeader    (  string $key    ,  string $value    ,  int $type    )
 EventHttpRequest::findHeader    (  string $key    ,  string $type    )
 EventHttpRequest::getHost    ( void   )
 EventHttpRequest::getUri    ( void   )
 EventHttpRequest::removeHeader    (  string $key    ,  string $type    )
 EventHttpRequest::sendError    (  int $error    [,  string $reason  = NULL   ] )
 EventHttpRequest::sendReply    (  int $code    ,  string $reason    [,  EventBuffer $buf   ] )
 EventHttpRequest::sendReplyStart    (  int $code    ,  string $reason    )
 EventListener::setErrorCallback    (  string $cb    )
 EventUtil::getLastSocketError    ([  mixed $socket   ] )
 Exception::__toString    ( void   )
 Exception::getFile    ( void   )
 Exception::getMessage    ( void   )
 Exception::getTraceAsString    ( void   )
 FilesystemIterator::key    ( void   )
 GearmanClient::addServer    ([ string $host = 127.0.0.1   [, int $port = 4730  ]] )
 GearmanClient::addServers    ([ string $servers = 127.0.0.1:4730  ] )
 GearmanClient::context    ( void   )
 GearmanClient::data    ( void   )
 GearmanClient::do    ( string $function_name   , string $workload   [, string $unique  ] )
 GearmanClient::doBackground    ( string $function_name   , string $workload   [, string $unique  ] )
 GearmanClient::doHigh    ( string $function_name   , string $workload   [, string $unique  ] )
 GearmanClient::doHighBackground    ( string $function_name   , string $workload   [, string $unique  ] )
 GearmanClient::doJobHandle    ( void   )
 GearmanClient::doLow    ( string $function_name   , string $workload   [, string $unique  ] )
 GearmanClient::doLowBackground    ( string $function_name   , string $workload   [, string $unique  ] )
 GearmanClient::doNormal    ( string $function_name   , string $workload   [, string $unique  ] )
 GearmanClient::echo    ( string $workload   )
 GearmanClient::error    ( void   )
 GearmanClient::jobStatus    ( string $job_handle    )
 GearmanClient::ping    ( string $workload   )
 GearmanClient::setContext    ( string $context   )
 GearmanClient::setCreatedCallback    ( string $callback   )
 GearmanClient::setData    ( string $data   )
 GearmanJob::complete    ( string $result   )
 GearmanJob::data    ( string $data   )
 GearmanJob::exception    ( string $exception   )
 GearmanJob::functionName    ( void   )
 GearmanJob::handle    ( void   )
 GearmanJob::sendComplete    ( string $result   )
 GearmanJob::sendData    ( string $data   )
 GearmanJob::sendException    ( string $exception   )
 GearmanJob::sendWarning    ( string $warning   )
 GearmanJob::unique    ( void   )
 GearmanJob::warning    ( string $warning   )
 GearmanJob::workload    ( void   )
 GearmanTask::data    ( void   )
 GearmanTask::function    ( void   )
 GearmanTask::functionName    ( void   )
 GearmanTask::jobHandle    ( void    )
 GearmanTask::unique    ( void   )
 GearmanTask::uuid    ( void   )
 GearmanWorker::addFunction    ( string $function_name   , callable $function   [, mixed &$context   [, int $timeout  ]] )
 GearmanWorker::addServer    ([ string $host = 127.0.0.1   [, int $port = 4730  ]] )
 GearmanWorker::addServers    ( string $servers = 127.0.0.1:4730   )
 GearmanWorker::echo    ( string $workload   )
 GearmanWorker::error    ( void   )
 GearmanWorker::register    ( string $function_name   [, int $timeout  ] )
 GearmanWorker::setId    ( string $id   )
 GearmanWorker::unregister    ( string $function_name   )
 Gender\Gender::isNick    ( string $name0   , string $name1   [, integer $country  ] )
 Gender\Gender::similarNames    ( string $name   [, integer $country  ] )
 Gmagick::getcopyright    ( void   )
 Gmagick::getfilename    ( void   )
 Gmagick::getimagefilename    ( void   )
 Gmagick::getimageformat    ( void   )
 Gmagick::getimageprofile    ( string $name   )
 Gmagick::getimagesignature    ( void   )
 Gmagick::getpackagename    ( void   )
 Gmagick::getreleasedate    ( void   )
 Gmagick::labelimage    ( string $label   )
 Gmagick::queryfontmetrics    ( GmagickDraw $draw   , string $text   )
 Gmagick::queryfonts    ([ string $pattern = "*"  ] )
 Gmagick::queryformats    ([ string $pattern = "*"  ] )
 Gmagick::removeimageprofile    ( string $name   )
 Gmagick::write    ( string $filename   )
 GmagickDraw::getfont    ( void   )
 GmagickDraw::gettextencoding    ( void   )
 Imagick::autoLevelImage    ([ string $CHANNEL = Imagick::CHANNEL_DEFAULT  ] )
 Imagick::brightnessContrastImage    ( string $brightness   , string $contrast   [, string $CHANNEL = Imagick::CHANNEL_DEFAULT  ] )
 Imagick::clampImage    ([ string $CHANNEL = Imagick::CHANNEL_DEFAULT  ] )
 Imagick::clipImagePath    ( string $pathname   , string $inside   )
 Imagick::colorMatrixImage    ( string $color_matrix = Imagick::CHANNEL_DEFAULT   )
 Imagick::count    ([ string $mode  ] )
 Imagick::deleteImageProperty    ( string $name   )
 Imagick::exportImagePixels    ( int $x   , int $y   , int $width   , int $height   , string $map   , int $STORAGE   )
 Imagick::getImageAttribute    ( string $key   )
 Imagick::getImageMimeType    ( void   )
 Imagick::getRegistry    ( string $key   )
 Imagick::importImagePixels    ( int $x   , int $y   , int $width   , int $height   , string $map   , int $storage   , array $pixels   )
 Imagick::inverseFourierTransformImage    ( string $complement   , string $magnitude   )
 Imagick::morphology    ( int $morphologyMethod   , int $iterations   , ImagickKernel $ImagickKernel   [, string $CHANNEL  ] )
 Imagick::rotationalBlurImage    ( string $angle   [, string $CHANNEL = Imagick::CHANNEL_DEFAULT  ] )
 Imagick::setImageAttribute    ( string $key   , string $value   )
 Imagick::setImageBiasQuantum    ( string $bias   )
 Imagick::statisticImage    ( int $type   , int $width   , int $height   [, string $CHANNEL = Imagick::CHANNEL_DEFAULT  ] )
 ImagickDraw::setResolution    ( string $x_resolution   , string $y_resolution   )
 ImagickPixel::isPixelSimilarQuantum    ( string $color   [, string $fuzz  ] )
 ImagickPixel::setcolorcount    ( string $colorCount   )
 IntlCalendar IntlCalendar::createInstance    ([ mixed $timeZone = NULL   [, string $locale = ""  ]] )
 IntlCalendar::getErrorMessage    ( void    )
 IntlCalendar::getLocale    ( int $localeType   )
 IntlCalendar::getType    ( void   )
 IntlChar::charName    ( mixed $codepoint   [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME  ] )
 IntlChar::chr    ( mixed $codepoint   )
 IntlChar::getFC_NFKC_Closure    ( mixed $codepoint   )
 IntlChar::getPropertyName    ( int $property   [, int $nameChoice = IntlChar::LONG_PROPERTY_NAME  ] )
 IntlChar::getPropertyValueName    ( int $property   , int $value   [, int $nameChoice = IntlChar::LONG_PROPERTY_NAME  ] )
 IntlDateFormatter IntlDateFormatter::create    ( string $locale   , int $datetype   , int $timetype   [, mixed $timezone = NULL   [, mixed $calendar = NULL   [, string $pattern = ""  ]]] )
 IntlDateFormatter::format     ( mixed $value    )
 IntlDateFormatter::formatObject    ( object $object   [, mixed $format = NULL   [, string $locale = NULL  ]] )
 IntlDateFormatter::getErrorMessage    ( void   )
 IntlDateFormatter::getLocale    ([ int $which  ] )
 IntlDateFormatter::getPattern    ( void   )
 IntlDateFormatter::getTimeZoneId    ( void   )
 IntlDateFormatter::localtime     ( string $value    [, int &$position   ] )
 IntlDateFormatter::setPattern     ( string $pattern    )
 IntlDateFormatter::setTimeZoneId     ( string $zone    )
 IntlTimeZone IntlTimeZone::createTimeZone    ( string $zoneId   )
 IntlTimeZone::getCanonicalID    ( string $zoneId   [, bool &$isSystemID  ] )
 IntlTimeZone::getDisplayName    ([ bool $isDaylight   [, integer $style   [, string $locale  ]]] )
 IntlTimeZone::getEquivalentID    ( string $zoneId   , integer $index   )
 IntlTimeZone::getErrorMessage    ( void    )
 IntlTimeZone::getID    ( void   )
 IntlTimeZone::getTZDataVersion    ( void   )
 Iterator IntlCalendar::getKeywordValuesForLocale    ( string $key   , string $locale   , boolean $commonlyUsed   )
 Judy::last    ([ string $index  ] )
 KTaglib_ID3v2_AttachedPictureFrame::getDescription       ( void     )
 KTaglib_ID3v2_AttachedPictureFrame::getMimeType       ( void     )
 KTaglib_ID3v2_AttachedPictureFrame::getMimeType    ( string $type   )
 KTaglib_ID3v2_AttachedPictureFrame::savePicture       ( string $filename     )
 KTaglib_ID3v2_AttachedPictureFrame::setPicture    ( string $filename   )
 KTaglib_ID3v2_Frame::__toString       ( void     )
 KTaglib_Tag::getAlbum       ( void     )
 KTaglib_Tag::getArtist       ( void     )
 KTaglib_Tag::getComment       ( void     )
 KTaglib_Tag::getGenre       ( void     )
 KTaglib_Tag::getTitle       ( void     )
 Locale::acceptFromHttp    ( string $header   )
 Locale::canonicalize    ( string $locale   )
 Locale::composeLocale    ( array $subtags   )
 Locale::getDefault    ( void   )
 Locale::getDisplayLanguage    ( string $locale   [, string $in_locale  ] )
 Locale::getDisplayName    ( string $locale   [, string $in_locale  ] )
 Locale::getDisplayRegion    ( string $locale   [, string $in_locale  ] )
 Locale::getDisplayScript    ( string $locale   [, string $in_locale  ] )
 Locale::getDisplayVariant    ( string $locale   [, string $in_locale  ] )
 Locale::getPrimaryLanguage    ( string $locale   )
 Locale::getRegion    ( string $locale   )
 Locale::getScript    ( string $locale   )
 Locale::lookup    ( array $langtag   , string $locale   [, bool $canonicalize = false   [, string $default  ]] )
 Lua::assign    ( string $name   , string $value   )
 Lua::eval    ( string $statements   )
 Lua::getVersion    ( void   )
 Lua::include    ( string $file   )
 Lua::registerCallback    ( string $name   , callable $function   )
 Memcache::pconnect    ( string $host   [, int $port   [, int $timeout  ]] )
 Memcached::add    ( string $key   , mixed $value   [, int $expiration  ] )
 Memcached::addByKey    ( string $server_key   , string $key   , mixed $value   [, int $expiration  ] )
 Memcached::addServer    ( string $host   , int $port   [, int $weight = 0  ] )
 Memcached::append    ( string $key   , string $value   )
 Memcached::appendByKey    ( string $server_key   , string $key   , string $value   )
 Memcached::cas    ( float $cas_token   , string $key   , mixed $value   [, int $expiration  ] )
 Memcached::casByKey    ( float $cas_token   , string $server_key   , string $key   , mixed $value   [, int $expiration  ] )
 Memcached::delete    ( string $key   [, int $time = 0  ] )
 Memcached::deleteByKey    ( string $server_key   , string $key   [, int $time = 0  ] )
 Memcached::deleteMultiByKey    ( string $server_key   , array $keys   [, int $time = 0  ] )
 Memcached::get    ( string $key   [, callable $cache_cb   [, float &$cas_token  ]] )
 Memcached::getByKey    ( string $server_key   , string $key   [, callable $cache_cb   [, float &$cas_token  ]] )
 Memcached::getDelayedByKey    ( string $server_key   , array $keys   [, bool $with_cas   [, callable $value_cb  ]] )
 Memcached::getMultiByKey    ( string $server_key   , array $keys   [, string &$cas_tokens   [, int $flags  ]] )
 Memcached::getResultMessage    ( void   )
 Memcached::getServerByKey    ( string $server_key   )
 Memcached::prepend    ( string $key   , string $value   )
 Memcached::prependByKey    ( string $server_key   , string $key   , string $value   )
 Memcached::replace    ( string $key   , mixed $value   [, int $expiration  ] )
 Memcached::replaceByKey    ( string $server_key   , string $key   , mixed $value   [, int $expiration  ] )
 Memcached::set    ( string $key   , mixed $value   [, int $expiration  ] )
 Memcached::setByKey    ( string $server_key   , string $key   , mixed $value   [, int $expiration  ] )
 Memcached::setMultiByKey    ( string $server_key   , array $items   [, int $expiration  ] )
 Memcached::setSaslAuthData    ( string $username   , string $password   )
 Memcached::touch    ( string $key   , int $expiration   )
 Memcached::touchByKey    ( string $server_key   , string $key   , int $expiration   )
 MessageFormatter MessageFormatter::create    ( string $locale   , string $pattern   )
 MessageFormatter::format    ( array $args   )
 MessageFormatter::formatMessage    ( string $locale   , string $pattern   , array $args   )
 MessageFormatter::getErrorMessage    ( void   )
 MessageFormatter::getLocale    ( void   )
 MessageFormatter::getPattern    ( void   )
 MessageFormatter::parse    ( string $value   )
 MessageFormatter::setPattern    ( string $pattern   )
 Mongo::getSlave    ( void   )
 Mongo::switchSlave    ( void   )
 MongoBinData::__toString    ( void   )
 MongoClient::__toString    ( void   )
 MongoClient::close    ([ boolean|string $connection  ] )
 MongoClient::killCursor    ( string $server_hash   , int|MongoInt64 $id   )
 MongoClient::setReadPreference    ( string $read_preference   [, array $tags  ] )
 MongoCode::__toString    ( void   )
 MongoCollection::__toString    ( void   )
 MongoCollection::distinct    ( string $key   [, array $query  ] )
 MongoCollection::getName    ( void   )
 MongoCollection::setReadPreference    ( string $read_preference   [, array $tags  ] )
 MongoCommandCursor MongoCommandCursor::createFromDocument    ( MongoClient $connection   , string $hash   , array $document   )
 MongoCursorException::getHost    ( void   )
 MongoDB::__toString    ( void   )
 MongoDB::authenticate    ( string $username   , string $password   )
 MongoDB::command    ( array $command   [, array $options = array()   [, string &$hash  ]] )
 MongoDB::createDBRef    ( string $collection   , mixed $document_or_id   )
 MongoDB::setReadPreference    ( string $read_preference   [, array $tags  ] )
 MongoDB\BSON\Binary::__construct    ( string $data   , integer $type   )
 MongoDB\BSON\Binary::getData    ( void   )
 MongoDB\BSON\Javascript::__construct    ( string $code   [, array|object $scope  ] )
 MongoDB\BSON\ObjectID::__construct    ([ string $id  ] )
 MongoDB\BSON\ObjectID::__toString    ( void   )
 MongoDB\BSON\Regex::__construct    ( string $pattern   , string $flags   )
 MongoDB\BSON\Regex::__toString    ( void   )
 MongoDB\BSON\Regex::getPattern    ( void   )
 MongoDB\BSON\Timestamp::__toString    ( void   )
 MongoDB\BSON\UTCDateTime::__toString    ( void   )
 MongoDB\Driver\Cursor MongoDB\Driver\Manager::executeCommand    ( string $db   , MongoDB\Driver\Command $command   [, MongoDB\Driver\ReadPreference $readPreference  ] )
 MongoDB\Driver\Cursor MongoDB\Driver\Manager::executeQuery    ( string $namespace   , MongoDB\Driver\Query $query   [, MongoDB\Driver\ReadPreference $readPreference  ] )
 MongoDB\Driver\Cursor MongoDB\Driver\Server::executeCommand    ( string $db   , MongoDB\Driver\Command $command   [, MongoDB\Driver\ReadPreference $readPreference  ] )
 MongoDB\Driver\CursorId::__toString    ( void   )
 MongoDB\Driver\Manager::__construct    ( string $uri   [, array $options   [, array $driverOptions  ]] )
 MongoDB\Driver\ReadConcern::__construct    ([ string $level  ] )
 MongoDB\Driver\ReadPreference::__construct    ( string $mode   [, array $tagSets  ] )
 MongoDB\Driver\Server::getHost    ( void   )
 MongoDB\Driver\Server::getLatency    ( void   )
 MongoDB\Driver\WriteConcern::__construct    ( string $w   [, integer $wtimeout   [, boolean $journal  ]] )
 MongoDB\Driver\WriteResult MongoDB\Driver\Manager::executeBulkWrite    ( string $namespace   , MongoDB\Driver\BulkWrite $bulk   [, MongoDB\Driver\WriteConcern $writeConcern  ] )
 MongoDB\Driver\WriteResult MongoDB\Driver\Server::executeBulkWrite    ( string $namespace   , MongoDB\Driver\BulkWrite $bulk   [, MongoDB\Driver\WriteConcern $writeConcern  ] )
 MongoDate::__toString    ( void   )
 MongoGridFS::put    ( string $filename   [, array $metadata = array()   [, array $options = array()  ]] )
 MongoGridFS::storeBytes    ( string $bytes   [, array $metadata = array()   [, array $options = array()  ]] )
 MongoGridFS::storeUpload    ( string $name   [, array $metadata  ] )
 MongoGridFSCursor::key    ( void   )
 MongoGridFSFile::getBytes    ( void   )
 MongoGridFSFile::getFilename    ( void   )
 MongoId::__toString    ( void   )
 MongoId::getHostname    ( void   )
 MongoInt32::__toString    ( void   )
 MongoInt64::__toString    ( void   )
 MongoRegex::__toString    ( void   )
 MongoTimestamp::__toString    ( void   )
 MultipleIterator::attachIterator    ( Iterator $iterator   [, string $infos  ] )
 MysqlndUhConnection::changeUser    ( mysqlnd_connection $connection   , string $user   , string $password   , string $database   , bool $silent   , int $passwd_len   )
 MysqlndUhConnection::charsetName    ( mysqlnd_connection $connection   )
 MysqlndUhConnection::connect    ( mysqlnd_connection $connection   , string $host   , string $use"   , string $password   , string $database   , int $port   , string $socket   , int $mysql_flags   )
 MysqlndUhConnection::escapeString    ( mysqlnd_connection $connection   , string $escape_string   )
 MysqlndUhConnection::getErrorString    ( mysqlnd_connection $connection   )
 MysqlndUhConnection::getHostInformation    ( mysqlnd_connection $connection   )
 MysqlndUhConnection::getProtocolInformation    ( mysqlnd_connection $connection   )
 MysqlndUhConnection::getServerInformation    ( mysqlnd_connection $connection   )
 MysqlndUhConnection::getServerStatistics    ( mysqlnd_connection $connection   )
 MysqlndUhConnection::getSqlstate    ( mysqlnd_connection $connection   )
 MysqlndUhConnection::listFields    ( mysqlnd_connection $connection   , string $table   , string $achtung_wild   )
 MysqlndUhConnection::listMethod    ( mysqlnd_connection $connection   , string $query   , string $achtung_wild   , string $par1   )
 MysqlndUhConnection::query    ( mysqlnd_connection $connection   , string $query   )
 MysqlndUhConnection::selectDb    ( mysqlnd_connection $connection   , string $database   )
 MysqlndUhConnection::sendQuery    ( mysqlnd_connection $connection   , string $query   )
 MysqlndUhConnection::setCharset    ( mysqlnd_connection $connection   , string $charset   )
 MysqlndUhConnection::shutdownServer    ( string $MYSQLND_UH_RES_MYSQLND_NAME   , string $"level"   )
 MysqlndUhConnection::simpleCommand    ( mysqlnd_connection $connection   , int $command   , string $arg   , int $ok_packet   , bool $silent   , bool $ignore_upsert_status   )
 MysqlndUhConnection::sslSet    ( mysqlnd_connection $connection   , string $key   , string $cert   , string $ca   , string $capath   , string $cipher   )
 MysqlndUhPreparedStatement::prepare    ( mysqlnd_prepared_statement $statement   , string $query   )
 Normalizer::normalize     ( string $input    [, int $form = Normalizer::FORM_C   ] )
 NumberFormatter NumberFormatter::create    ( string $locale   , int $style   [, string $pattern  ] )
 NumberFormatter::format    ( number $value   [, int $type  ] )
 NumberFormatter::formatCurrency    ( float $value   , string $currency   )
 NumberFormatter::getErrorMessage    ( void   )
 NumberFormatter::getLocale    ([ int $type  ] )
 NumberFormatter::getPattern    ( void   )
 NumberFormatter::getSymbol    ( int $attr   )
 NumberFormatter::getTextAttribute    ( int $attr   )
 NumberFormatter::parse    ( string $value   [, int $type   [, int &$position  ]] )
 NumberFormatter::setPattern    ( string $pattern   )
 NumberFormatter::setSymbol    ( int $attr   , string $value   )
 NumberFormatter::setTextAttribute    ( int $attr   , string $value   )
 OAuth::fetch    ( string $protected_resource_url   [, array $extra_parameters   [, string $http_method   [, array $http_headers  ]]] )
 OAuth::generateSignature    ( string $http_method   , string $url   [, mixed $extra_parameters  ] )
 OAuth::getAccessToken    ( string $access_token_url   [, string $auth_session_handle   [, string $verifier_token   [, string $http_method  ]]] )
 OAuth::getLastResponse    ( void   )
 OAuth::getLastResponseHeaders    ( void   )
 OAuth::getRequestHeader    ( string $http_method   , string $url   [, mixed $extra_parameters  ] )
 OAuth::getRequestToken    ( string $request_token_url   [, string $callback_url   [, string $http_method  ]] )
 OAuth::setCAPath    ([ string $ca_path   [, string $ca_info  ]] )
 OAuth::setNonce    ( string $nonce   )
 OAuth::setRSACertificate    ( string $cert   )
 OAuth::setTimestamp    ( string $timestamp   )
 OAuth::setToken    ( string $token   , string $token_secret   )
 OAuth::setVersion    ( string $version   )
 OAuthProvider::checkOAuthRequest    ([ string $uri   [, string $method  ]] )
 PDO::cubrid_schema    ( int $schema_type     [, string $table_name    [, string $col_name    ]] )
 PDO::lastInsertId    ([ string $name = NULL  ] )
 PDO::pgsqlCopyFromArray    ( string $table_name   , array $rows   [, string $delimiter = '\t'   [, string $null_as = "\\\\N"   [, string $fields  ]]] )
 PDO::pgsqlCopyFromFile    ( string $table_name   , string $filename   [, string $delimiter = '\t'   [, string $null_as = "\\\\N"   [, string $fields  ]]] )
 PDO::pgsqlCopyToArray    ( string $table_name   , array $rows   [, string $delimiter = '\t'   [, string $null_as = "\\\\N"   [, string $fields  ]]] )
 PDO::pgsqlCopyToFile    ( string $table_name   , string $filename   [, string $delimiter = '\t'   [, string $null_as = "\\\\N"   [, string $fields  ]]] )
 PDO::pgsqlLOBCreate    ( void   )
 PDO::pgsqlLOBOpen    ( string $oid   [, string $mode = "rb"  ] )
 PDO::pgsqlLOBUnlink    ( string $oid   )
 PDO::quote    ( string $string   [, int $parameter_type = PDO::PARAM_STR  ] )
 PDO::sqliteCreateAggregate    ( string $function_name   , callable $step_func   , callable $finalize_func   [, int $num_args  ] )
 PDO::sqliteCreateCollation    ( string $name   , callable $callback   )
 PDO::sqliteCreateFunction    ( string $function_name   , callable $callback   [, int $num_args  ] )
 PDOStatement::errorCode    ( void   )
 PDOStatement::fetchObject    ([ string $class_name = "stdClass"   [, array $ctor_args  ]] )
 Phar::addEmptyDir    ( string $dirname   )
 Phar::addFile    ( string $file   [, string $localname  ] )
 Phar::addFromString    ( string $localname   , string $contents   )
 Phar::buildFromDirectory    ( string $base_dir   [, string $regex  ] )
 Phar::buildFromIterator    ( Iterator $iter   [, string $base_directory  ] )
 Phar::copy    ( string $oldfile   , string $newfile   )
 Phar::delete    ( string $entry   )
 Phar::extractTo    ( string $pathto   [, string|array $files   [, bool $overwrite = false  ]] )
 Phar::getStub    ( void   )
 Phar::getVersion    ( void   )
 Phar::offsetExists    ( string $offset   )
 Phar::offsetSet    ( string $offset   , string $value   )
 Phar::offsetUnset    ( string $offset   )
 Phar::setAlias    ( string $alias   )
 Phar::setDefaultStub    ([ string $index   [, string $webindex  ]] )
 Phar::setStub    ( string $stub   [, int $len = -1  ] )
 PharData::offsetSet    ( string $offset   , string $value   )
 QuickHashIntHash QuickHashIntHash::loadFromFile    ( string $filename   [, int $options  ] )
 QuickHashIntHash QuickHashIntHash::loadFromString    ( string $contents   [, int $options  ] )
 QuickHashIntHash::saveToFile    ( string $filename   )
 QuickHashIntHash::saveToString ( void   )
 QuickHashIntSet QuickHashIntSet::loadFromFile    ( string $filename   [, int $size   [, int $options  ]] )
 QuickHashIntSet QuickHashIntSet::loadFromString    ( string $contents   [, int $size   [, int $options  ]] )
 QuickHashIntSet::saveToFile    ( string $filename   )
 QuickHashIntSet::saveToString ( void   )
 QuickHashIntStringHash QuickHashIntStringHash::loadFromFile    ( string $filename   [, int $size = 0   [, int $options = 0  ]] )
 QuickHashIntStringHash QuickHashIntStringHash::loadFromString    ( string $contents   [, int $size = 0   [, int $options = 0  ]] )
 QuickHashIntStringHash::add    ( int $key   , string $value   )
 QuickHashIntStringHash::saveToFile    ( string $filename   )
 QuickHashIntStringHash::saveToString ( void   )
 QuickHashIntStringHash::update    ( int $key   , string $value   )
 QuickHashStringIntHash QuickHashStringIntHash::loadFromFile    ( string $filename   [, int $size = 0   [, int $options = 0  ]] )
 QuickHashStringIntHash QuickHashStringIntHash::loadFromString    ( string $contents   [, int $size = 0   [, int $options = 0  ]] )
 QuickHashStringIntHash::add    ( string $key   , int $value   )
 QuickHashStringIntHash::delete    ( string $key   )
 QuickHashStringIntHash::exists    ( string $key   )
 QuickHashStringIntHash::get    ( string $key   )
 QuickHashStringIntHash::saveToFile    ( string $filename   )
 QuickHashStringIntHash::saveToString ( void   )
 QuickHashStringIntHash::update    ( string $key   , int $value   )
 RRDCreator::addArchive    ( string $description   )
 RRDCreator::addDataSource    ( string $description   )
 RRDUpdater::update     ( array $values    [, string $time  = time()    ] )
 RarArchive RarArchive::open    ( string $filename   [, string $password = NULL   [, callable $volume_callback = NULL   ]] )
 RarArchive::__toString    ( void   )
 RarArchive::getComment    ( void    )
 RarEntry::__toString    ( void   )
 RarEntry::extract     ( string $dir    [, string $filepath = ""    [, string $password = NULL    [, bool $extended_data = false   ]]] )
 RarEntry::getCrc    ( void   )
 RarEntry::getFileTime    ( void   )
 RarEntry::getName    ( void   )
 RarEntry::getStream    ([ string $password  ] )
 RecursiveDirectoryIterator::getSubPath    ( void   )
 RecursiveDirectoryIterator::getSubPathname    ( void   )
 RecursiveDirectoryIterator::key    ( void   )
 RecursiveIteratorIterator::setMaxDepth    ([ string $max_depth = -1  ] )
 RecursiveTreeIterator::current    ( void   )
 RecursiveTreeIterator::getEntry    ( void   )
 RecursiveTreeIterator::getPrefix    ( void   )
 RecursiveTreeIterator::key    ( void   )
 RecursiveTreeIterator::setPrefixPart    ( int $part   , string $value   )
 Reflection::export    ( Reflector $reflector   [, bool $return = false  ] )
 ReflectionClass::__toString    ( void   )
 ReflectionClass::export    ( mixed $argument   [, bool $return = false  ] )
 ReflectionClass::getConstant    ( string $name   )
 ReflectionClass::getDocComment    ( void   )
 ReflectionClass::getExtensionName    ( void   )
 ReflectionClass::getFileName    ( void   )
 ReflectionClass::getName    ( void   )
 ReflectionClass::getNamespaceName    ( void   )
 ReflectionClass::getShortName    ( void   )
 ReflectionClass::getStaticPropertyValue    ( string $name   [, mixed &$def_value  ] )
 ReflectionClass::hasConstant    ( string $name   )
 ReflectionClass::hasMethod    ( string $name   )
 ReflectionClass::hasProperty    ( string $name   )
 ReflectionClass::implementsInterface    ( string $interface   )
 ReflectionClass::isSubclassOf    ( string $class   )
 ReflectionClass::setStaticPropertyValue    ( string $name   , string $value   )
 ReflectionExtension::__toString    ( void   )
 ReflectionExtension::export    ( string $name   [, string $return = false  ] )
 ReflectionExtension::getName    ( void   )
 ReflectionExtension::getVersion    ( void   )
 ReflectionFunction::__toString    ( void   )
 ReflectionFunction::export    ( string $name   [, string $return  ] )
 ReflectionFunctionAbstract::getDocComment    ( void   )
 ReflectionFunctionAbstract::getExtensionName    ( void   )
 ReflectionFunctionAbstract::getFileName    ( void   )
 ReflectionFunctionAbstract::getName    ( void   )
 ReflectionFunctionAbstract::getNamespaceName    ( void   )
 ReflectionFunctionAbstract::getShortName    ( void   )
 ReflectionMethod::__toString    ( void   )
 ReflectionMethod::export    ( string $class   , string $name   [, bool $return = false  ] )
 ReflectionObject::export    ( string $argument   [, bool $return  ] )
 ReflectionParameter::__toString    ( void   )
 ReflectionParameter::export    ( string $function   , string $parameter   [, bool $return  ] )
 ReflectionParameter::getDefaultValueConstantName    ( void   )
 ReflectionParameter::getName    ( void   )
 ReflectionProperty::__toString    ( void   )
 ReflectionProperty::export    ( mixed $class   , string $name   [, bool $return  ] )
 ReflectionProperty::getDocComment    ( void   )
 ReflectionProperty::getName    ( void   )
 ReflectionZendExtension::__toString    ( void   )
 ReflectionZendExtension::export    ( string $name   [, string $return  ] )
 ReflectionZendExtension::getAuthor    ( void   )
 ReflectionZendExtension::getCopyright    ( void   )
 ReflectionZendExtension::getName    ( void   )
 ReflectionZendExtension::getURL    ( void   )
 ReflectionZendExtension::getVersion    ( void   )
 Reflector::__toString    ( void   )
 Reflector::export    ( void   )
 RegexIterator::getRegex    ( void   )
 ResourceBundle ResourceBundle::create    ( string $locale   , string $bundlename   [, bool $fallback  ] )
 ResourceBundle::getErrorMessage    ( void   )
 ResourceBundle::getLocales    ( string $bundlename   )
 ReturnType IntlBreakIterator::createCharacterInstance    ([ string $"locale"  ] )
 ReturnType IntlBreakIterator::createLineInstance    ([ string $"locale"  ] )
 ReturnType IntlBreakIterator::createSentenceInstance    ([ string $"locale"  ] )
 ReturnType IntlBreakIterator::createTitleInstance    ([ string $"locale"  ] )
 ReturnType IntlBreakIterator::createWordInstance    ([ string $"locale"  ] )
 SCA::getService    (  string $target    [,  string $binding       [,  array $config      ]] )
 SDO_DAS_DataFactory::addPropertyToType    ( string $parent_type_namespace_uri   , string $parent_type_name   , string $property_name   , string $type_namespace_uri   , string $type_name   [, array $options  ] )
 SDO_DAS_DataFactory::addType    ( string $type_namespace_uri   , string $type_name   [, array $options  ] )
 SDO_DAS_XML::addTypes    ( string $xsd_file   )
 SDO_DAS_XML::saveFile    ( SDO_XMLDocument $xdoc   , string $xml_file   [, int $indent  ] )
 SDO_DAS_XML_Document::setEncoding    ( string $encoding   )
 SDO_DAS_XML_Document::setXMLVersion    ( string $xmlVersion   )
 SDO_DataFactory::create    ( string $type_namespace_uri   , string $type_name   )
 SNMP::getError    ( void   )
 SNMP::setSecurity    ( string $sec_level   [, string $auth_protocol =    [, string $auth_passphrase =    [, string $priv_protocol =    [, string $priv_passphrase =    [, string $contextName =    [, string $contextEngineID =   ]]]]]] )
 SNMP::walk    ( string $object_id   [, bool $suffix_as_key = FALSE   [, int $max_repetitions   [, int $non_repeaters  ]]] )
 SQLite3::createAggregate    ( string $name   , mixed $step_callback   , mixed $final_callback   [, int $argument_count = -1  ] )
 SQLite3::createCollation    ( string $name   , callable $callback   )
 SQLite3::createFunction    ( string $name   , mixed $callback   [, int $argument_count = -1  ] )
 SQLite3::escapeString    ( string $value   )
 SQLite3::exec    ( string $query   )
 SQLite3::lastErrorMsg    ( void   )
 SQLite3::loadExtension    ( string $shared_library   )
 SQLite3::open    ( string $filename   [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE   [, string $encryption_key  ]] )
 SQLite3::querySingle    ( string $query   [, bool $entire_row = false  ] )
 SQLite3Result::columnName    ( int $column_number   )
 SQLite3Stmt::bindParam    ( string $sql_param   , mixed &$param   [, int $type  ] )
 SQLite3Stmt::bindValue    ( string $sql_param   , mixed $value   [, int $type  ] )
 SVMModel::load    ( string $filename   )
 SVMModel::save    ( string $filename   )
 SWFDisplayItem::setName    ( string $name   )
 SWFFontChar::addChars    ( string $char   )
 SWFFontChar::addUTF8Chars    ( string $char   )
 SWFMovie::addExport    ( SWFCharacter $char   , string $name   )
 SWFMovie::labelFrame    ( string $label   )
 SWFShape::drawGlyph    ( SWFFont $font   , string $character   [, int $size  ] )
 SWFSprite::labelFrame    ( string $label   )
 SWFText::addString    ( string $string   )
 SWFText::addUTF8String    ( string $text   )
 SWFTextField::addChars    ( string $chars   )
 SWFTextField::addString    ( string $string   )
 SWFTextField::setName    ( string $name   )
 SessionHandler::create_sid    ( void   )
 SessionHandler::destroy   ( string $session_id   )
 SessionHandler::open    ( string $save_path   , string $session_name   )
 SessionHandler::read    ( string $session_id   )
 SessionHandler::write    ( string $session_id   , string $session_data   )
 SimpleXMLElement::__toString    ( void   )
 SimpleXMLElement::addAttribute    ( string $name   [, string $value   [, string $namespace  ]] )
 SimpleXMLElement::asXML    ([ string $filename  ] )
 SimpleXMLElement::getName    ( void   )
 SimpleXMLElement::registerXPathNamespace    ( string $prefix   , string $ns   )
 SimpleXMLElement::xpath    ( string $path   )
 SoapClient::__call    ( string $function_name   , string $arguments   )
 SoapClient::__doRequest    ( string $request   , string $location   , string $action   , int $version   [, int $one_way = 0  ] )
 SoapClient::__getLastRequest    ( void   )
 SoapClient::__getLastRequestHeaders    ( void   )
 SoapClient::__getLastResponse    ( void   )
 SoapClient::__getLastResponseHeaders    ( void   )
 SoapClient::__setCookie    ( string $name   [, string $value  ] )
 SoapClient::__setLocation    ([ string $new_location  ] )
 SoapClient::__soapCall    ( string $function_name   , array $arguments   [, array $options   [, mixed $input_headers   [, array &$output_headers  ]]] )
 SoapFault::__toString    ( void   )
 SoapServer::fault    ( string $code   , string $string   [, string $actor   [, string $details   [, string $name  ]]] )
 SoapServer::handle    ([ string $soap_request  ] )
 SoapServer::setClass    ( string $class_name   [, mixed $args   [, mixed $...  ]] )
 SolrClient::getDebug    ( void   )
 SolrClient::setResponseWriter    ( string $responseWriter   )
 SolrClient::setServlet    ( int $type   , string $value   )
 SolrDocument::__isset    ( string $fieldName   )
 SolrDocument::__set    ( string $fieldName   , string $fieldValue   )
 SolrDocument::__unset    ( string $fieldName   )
 SolrDocument::addField    ( string $fieldName   , string $fieldValue   )
 SolrDocument::deleteField    ( string $fieldName   )
 SolrDocument::fieldExists    ( string $fieldName   )
 SolrDocument::key    ( void   )
 SolrDocument::offsetExists    ( string $fieldName   )
 SolrDocument::offsetSet    ( string $fieldName   , string $fieldValue   )
 SolrDocument::offsetUnset    ( string $fieldName   )
 SolrDocument::serialize    ( void   )
 SolrDocument::unserialize    ( string $serialized   )
 SolrInputDocument::addField    ( string $fieldName   , string $fieldValue   [, float $fieldBoostValue = 0.0  ] )
 SolrInputDocument::deleteField    ( string $fieldName   )
 SolrInputDocument::fieldExists    ( string $fieldName   )
 SolrInputDocument::setFieldBoost    ( string $fieldName   , float $fieldBoostValue   )
 SolrObject SolrUtils::digestXmlResponse    ( string $xmlresponse   [, int $parse_mode = 0  ] )
 SolrObject::offsetExists    ( string $property_name   )
 SolrObject::offsetGet    ( string $property_name   )
 SolrObject::offsetSet    ( string $property_name   , string $property_value   )
 SolrObject::offsetUnset    ( string $property_name   )
 SolrParams SolrParams::add    ( string $name   , string $value   )
 SolrParams::serialize    ( void   )
 SolrParams::toString    ([ bool $url_encode = false  ] )
 SolrPingResponse::getResponse    ( void   )
 SolrQuery::getFacetDateEnd    ([ string $field_override  ] )
 SolrQuery::getFacetDateGap    ([ string $field_override  ] )
 SolrQuery::getFacetDateHardEnd    ([ string $field_override  ] )
 SolrQuery::getFacetDateOther    ([ string $field_override  ] )
 SolrQuery::getFacetDateStart    ([ string $field_override  ] )
 SolrQuery::getFacetMethod    ([ string $field_override  ] )
 SolrQuery::getFacetMissing    ([ string $field_override  ] )
 SolrQuery::getFacetPrefix    ([ string $field_override  ] )
 SolrQuery::getGroupFormat    ( void   )
 SolrQuery::getHighlightAlternateField    ([ string $field_override  ] )
 SolrQuery::getHighlightFormatter    ([ string $field_override  ] )
 SolrQuery::getHighlightFragmenter    ([ string $field_override  ] )
 SolrQuery::getHighlightMergeContiguous    ([ string $field_override  ] )
 SolrQuery::getHighlightRegexPattern    ( void   )
 SolrQuery::getHighlightSimplePost    ([ string $field_override  ] )
 SolrQuery::getHighlightSimplePre    ([ string $field_override  ] )
 SolrQuery::getQuery    ( void   )
 SolrQuery::getTermsField    ( void   )
 SolrQuery::getTermsLowerBound    ( void   )
 SolrQuery::getTermsPrefix    ( void   )
 SolrQuery::getTermsUpperBound    ( void   )
 SolrResponse::getDigestedResponse    ( void   )
 SolrResponse::getHttpStatusMessage    ( void   )
 SolrResponse::getRawRequest    ( void   )
 SolrResponse::getRawRequestHeaders    ( void   )
 SolrResponse::getRawResponse    ( void   )
 SolrResponse::getRawResponseHeaders    ( void   )
 SolrResponse::getRequestUrl    ( void   )
 SolrUtils::escapeQueryChars    ( string $str   )
 SolrUtils::getSolrVersion    ( void   )
 SolrUtils::queryPhrase    ( string $str   )
 SphinxClient::buildExcerpts    ( array $docs   , string $index   , string $words   [, array $opts  ] )
 SphinxClient::buildKeywords    ( string $query   , string $index   , bool $hits   )
 SphinxClient::escapeString    ( string $string   )
 SphinxClient::getLastError    ( void   )
 SphinxClient::getLastWarning    ( void   )
 SphinxClient::query    ( string $query   [, string $index = "*"   [, string $comment = ""  ]] )
 SphinxClient::setFilter    ( string $attribute   , array $values   [, bool $exclude = false  ] )
 SphinxClient::setFilterFloatRange    ( string $attribute   , float $min   , float $max   [, bool $exclude = false  ] )
 SphinxClient::setFilterRange    ( string $attribute   , int $min   , int $max   [, bool $exclude = false  ] )
 SphinxClient::setGeoAnchor    ( string $attrlat   , string $attrlong   , float $latitude   , float $longitude   )
 SphinxClient::setGroupBy    ( string $attribute   , int $func   [, string $groupsort = "@group desc"  ] )
 SphinxClient::setGroupDistinct    ( string $attribute   )
 SphinxClient::setOverride    ( string $attribute   , int $type   , array $values   )
 SphinxClient::setSelect    ( string $clause   )
 SphinxClient::setServer    ( string $server   , int $port   )
 SphinxClient::setSortMode    ( int $mode   [, string $sortby  ] )
 SplDoublyLinkedList::serialize    ( void   )
 SplDoublyLinkedList::unserialize    ( string $serialized   )
 SplFileInfo::getBasename    ([ string $suffix  ] )
 SplFileInfo::getExtension    ( void   )
 SplFileInfo::getFilename    ( void   )
 SplFileInfo::getLinkTarget    ( void   )
 SplFileInfo::getPath    ( void   )
 SplFileInfo::getPathname    ( void   )
 SplFileInfo::getRealPath    ( void   )
 SplFileInfo::getType    ( void   )
 SplFileInfo::setFileClass    ([ string $class_name = "SplFileObject"  ] )
 SplFileInfo::setInfoClass    ([ string $class_name = "SplFileInfo"  ] )
 SplFileObject::fgetc    ( void   )
 SplFileObject::fgetcsv    ([ string $delimiter = ","   [, string $enclosure = "\""   [, string $escape = "\\"  ]]] )
 SplFileObject::fgets    ( void   )
 SplFileObject::fgetss    ([ string $allowable_tags  ] )
 SplFileObject::fread    ( int $length   )
 SplFileObject::fscanf    ( string $format   [, mixed &$...  ] )
 SplFileObject::setCsvControl    ([ string $delimiter = ","   [, string $enclosure = "\""   [, string $escape = "\\"  ]]] )
 SplObjectStorage::getHash    ( object $object   )
 SplObjectStorage::serialize    ( void   )
 SplObjectStorage::unserialize    ( string $serialized   )
 Spoofchecker::areConfusable    ( string $s1   , string $s2   [, string &$error  ] )
 Spoofchecker::isSuspicious    ( string $text   [, string &$error  ] )
 Spoofchecker::setAllowedLocales    ( string $locale_list   )
 Stomp::abort    ( string $transaction_id   [, array $headers   ] )
 Stomp::begin    ( string $transaction_id   [, array $headers   ] )
 Stomp::commit    ( string $transaction_id   [, array $headers   ] )
 Stomp::error    ( void    )
 Stomp::getSessionId    ( void    )
 Stomp::send    ( string $destination   , mixed $msg   [, array $headers   ] )
 Stomp::subscribe    ( string $destination   [, array $headers   ] )
 Stomp::unsubscribe    ( string $destination   [, array $headers   ] )
 StompException::getDetails    ( void    )
 Swish::__construct    ( string $index_names   )
 SwishSearch::setLimit    ( string $property   , string $low   , string $high   )
 SwishSearch::setPhraseDelimiter    ( string $delimiter   )
 SwishSearch::setSort    ( string $sort   )
 Threaded::extend    ( string $class   )
 TokyoTyrant::ext    ( string $name   , int $options   , string $key   , string $value   )
 TokyoTyrant::fwmKeys    ( string $prefix   , int $max_recs   )
 TokyoTyrant::putShl    ( string $key   , string $value   , int $width   )
 TokyoTyrant::restore    ( string $log_dir   , int $timestamp   [, bool $check_consistency = true  ] )
 TokyoTyrant::setMaster    ( string $host   , int $port   , int $timestamp   [, bool $check_consistency = true  ] )
 TokyoTyrantQuery::addCond    ( string $name   , int $op   , string $expr   )
 TokyoTyrantQuery::hint    ( void   )
 TokyoTyrantQuery::key    ( void   )
 TokyoTyrantQuery::setOrder    ( string $name   , int $type   )
 TokyoTyrantTable::add    ( string $key   , mixed $increment   [, string $type  ] )
 TokyoTyrantTable::putCat    ( string $key   , array $columns   )
 TokyoTyrantTable::putKeep    ( string $key   , array $columns   )
 TokyoTyrantTable::putNr    ( mixed $keys   [, string $value  ] )
 TokyoTyrantTable::putShl    ( string $key   , string $value   , int $width   )
 TokyoTyrantTable::setIndex    ( string $column   , int $type   )
 Transliterator Transliterator::create    ( string $id   [, int $direction  ] )
 Transliterator Transliterator::createFromRules    ( string $rules   [, string $direction  ] )
 Transliterator::getErrorMessage    ( void    )
 Transliterator::transliterate    ( string $subject   [, int $start   [, int $end  ]] )
 UConverter::convert    ( string $str   [, bool $reverse  ] )
 UConverter::fromUCallback    ( integer $reason   , string $source   , string $codePoint   , integer &$error   )
 UConverter::getDestinationEncoding    ( void   )
 UConverter::getErrorMessage    ( void    )
 UConverter::getSourceEncoding    ( void   )
 UConverter::getSubstChars    ( void   )
 UConverter::reasonText    ([ integer $reason  ] )
 UConverter::setDestinationEncoding    ( string $encoding   )
 UConverter::setSourceEncoding    ( string $encoding   )
 UConverter::setSubstChars    ( string $chars   )
 UConverter::toUCallback    ( integer $reason   , string $source   , string $codeUnits   , integer &$error   )
 UConverter::transcode    ( string $str   , string $toEncoding   , string $fromEncoding   [, array $options  ] )
 V8Js::executeString    ( string $script   [, string $identifier = "V8Js::executeString()"   [, int $flags = V8Js::FLAG_NONE  ]] )
 V8JsException::getJsFileName    ( void   )
 V8JsException::getJsSourceLine    ( void   )
 V8JsException::getJsTrace    ( void   )
 VarnishAdmin::getPanic    ( void   )
 VarnishAdmin::setHost    ( string $host   )
 VarnishAdmin::setIdent    ( string $ident   )
 VarnishAdmin::setSecret    ( string $secret   )
 VarnishLog::getTagName    ( int $index   )
 XMLDiff\File::diff    ( string $from   , string $to   )
 XMLDiff\File::merge    ( string $src   , string $diff   )
 XMLDiff\Memory::diff    ( string $from   , string $to   )
 XMLDiff\Memory::merge    ( string $src   , string $diff   )
 XMLReader::getAttribute    ( string $name   )
 XMLReader::getAttributeNo    ( int $index   )
 XMLReader::getAttributeNs    ( string $localName   , string $namespaceURI   )
 XMLReader::lookupNamespace    ( string $prefix   )
 XMLReader::moveToAttribute    ( string $name   )
 XMLReader::moveToAttributeNs    ( string $localName   , string $namespaceURI   )
 XMLReader::next    ([ string $localname   ] )
 XMLReader::open    ( string $URI   [, string $encoding   [, int $options = 0  ]] )
 XMLReader::readInnerXML    ( void   )
 XMLReader::readOuterXML    ( void   )
 XMLReader::readString    ( void   )
 XMLReader::setRelaxNGSchema    ( string $filename   )
 XMLReader::setRelaxNGSchemaSource    ( string $source   )
 XMLReader::setSchema    ( string $filename   )
 XMLReader::xml    ( string $source   [, string $encoding   [, int $options = 0  ]] )
 Yaf_Application::execute    ( callable $entry   , string $...   )
 Yaf_Application::getLastErrorMsg    ( void   )
 Yaf_Config_Ini::__get    ([ string $name  ] )
 Yaf_Config_Ini::__isset    ( string $name   )
 Yaf_Config_Ini::__set    ( string $name   , mixed $value   )
 Yaf_Config_Ini::offsetExists    ( string $name   )
 Yaf_Config_Ini::offsetGet    ( string $name   )
 Yaf_Config_Ini::offsetSet    ( string $name   , string $value   )
 Yaf_Config_Ini::offsetUnset    ( string $name   )
 Yaf_Config_Simple::__get    ([ string $name  ] )
 Yaf_Config_Simple::__isset    ( string $name   )
 Yaf_Config_Simple::__set    ( string $name   , string $value   )
 Yaf_Config_Simple::offsetExists    ( string $name   )
 Yaf_Config_Simple::offsetGet    ( string $name   )
 Yaf_Config_Simple::offsetSet    ( string $name   , string $value   )
 Yaf_Config_Simple::offsetUnset    ( string $name   )
 Yaf_Controller_Abstract::forward    ( string $action   [, array $paramters  ] )
 Yaf_Controller_Abstract::getInvokeArg    ( string $name   )
 Yaf_Controller_Abstract::getModuleName    ( void   )
 Yaf_Controller_Abstract::redirect    ( string $url   )
 Yaf_Controller_Abstract::setViewpath    ( string $view_directory   )
 Yaf_Request_Abstract::getEnv    ( string $name   [, string $default  ] )
 Yaf_Request_Abstract::getParam    ( string $name   [, string $default  ] )
 Yaf_Request_Abstract::getServer    ( string $name   [, string $default  ] )
 Yaf_Request_Abstract::setActionName    ( string $action   )
 Yaf_Request_Abstract::setBaseUri    ( string $uir   )
 Yaf_Request_Abstract::setControllerName    ( string $controller   )
 Yaf_Request_Abstract::setModuleName    ( string $module   )
 Yaf_Request_Abstract::setParam    ( string $name   [, string $value  ] )
 Yaf_Request_Abstract::setRequestUri    ( string $uir   )
 Yaf_Request_Abstract::setRouted    ([ string $flag  ] )
 Yaf_Request_Http::get    ( string $name   [, string $default  ] )
 Yaf_Request_Http::getCookie    ( string $name   [, string $default  ] )
 Yaf_Request_Http::getPost    ( string $name   [, string $default  ] )
 Yaf_Request_Http::getQuery    ( string $name   [, string $default  ] )
 Yaf_Response_Abstract::appendBody    ( string $content   [, string $key  ] )
 Yaf_Response_Abstract::clearBody    ([ string $key  ] )
 Yaf_Response_Abstract::getBody    ([ string $key  ] )
 Yaf_Response_Abstract::prependBody    ( string $content   [, string $key  ] )
 Yaf_Response_Abstract::setBody    ( string $content   [, string $key  ] )
 Yaf_Route_Map::assemble    ( array $info   [, array $query  ] )
 Yaf_Route_Regex::assemble    ( array $info   [, array $query  ] )
 Yaf_Route_Rewrite::assemble    ( array $info   [, array $query  ] )
 Yaf_Route_Simple::assemble    ( array $info   [, array $query  ] )
 Yaf_Route_Static::assemble    ( array $info   [, array $query  ] )
 Yaf_Route_Static::match    ( string $uri   )
 Yaf_Route_Supervar::assemble    ( array $info   [, array $query  ] )
 Yaf_Router::addRoute    ( string $name   , Yaf_Route_Abstract $route   )
 Yaf_Router::getCurrentRoute    ( void   )
 Yaf_Session::__get    ( string $name   )
 Yaf_Session::__isset    ( string $name   )
 Yaf_Session::__set    ( string $name   , string $value   )
 Yaf_Session::__unset    ( string $name   )
 Yaf_Session::del    ( string $name   )
 Yaf_Session::has    ( string $name   )
 Yaf_Session::offsetExists    ( string $name   )
 Yaf_Session::offsetGet    ( string $name   )
 Yaf_Session::offsetSet    ( string $name   , string $value   )
 Yaf_Session::offsetUnset    ( string $name   )
 Yaf_View_Simple::__construct    ( string $template_dir   [, array $options  ] )
 Yaf_View_Simple::__get    ([ string $name  ] )
 Yaf_View_Simple::__isset    ( string $name   )
 Yaf_View_Simple::__set    ( string $name   , mixed $value   )
 Yaf_View_Simple::assign    ( string $name   [, mixed $value  ] )
 Yaf_View_Simple::assignRef    ( string $name   , mixed &$value   )
 Yaf_View_Simple::clear    ([ string $name  ] )
 Yaf_View_Simple::display    ( string $tpl   [, array $tpl_vars  ] )
 Yaf_View_Simple::eval    ( string $tpl_content   [, array $tpl_vars  ] )
 Yaf_View_Simple::getScriptPath    ( void   )
 Yaf_View_Simple::render    ( string $tpl   [, array $tpl_vars  ] )
 Yaf_View_Simple::setScriptPath    ( string $template_dir   )
 Yar_Client::__call    ( string $method   , array $parameters   )
 Yar_Client::__construct    ( string $url   )
 Yar_Server_Exception::getType    ( void   )
 ZMQContext::getOpt    ( string $key   )
 ZMQPoll::add    ( mixed $entry   , integer $type   )
 ZMQSocket::getPersistentId    ( void   )
 ZMQSocket::getSockOpt    ( string $key   )
 ZMQSocket::recv    ([ integer $mode = 0  ] )
 ZMQSocket::recvMulti    ([ integer $mode = 0  ] )
 ZipArchive::getStream    ( string $name   )
 ZipArchive::open    ( string $filename   [, int $flags  ] )
 ZipArchive::setPassword    ( string $password   )
 apc_compile_file    ( string $filename   [, bool $atomic = true  ] )
 apc_delete    ( string $key   )
 apcu_delete    ( string $key   )
 apcu_entry    ( string $key   , callable $generator   [, int $ttl = 0  ] )
 apd_clunk    ( string $warning   [, string $delimiter = "<BR />"  ] )
 apd_croak    ( string $warning   [, string $delimiter = "<BR />"  ] )
 apd_set_session_trace    ( int $debug_level   [, string $dump_directory = ini_get("apd.dumpdir")  ] )
 array DateTimeZone::listIdentifiers    ([ int $what = DateTimeZone::ALL   [, string $country = NULL  ]] )
 array Locale::getAllVariants    ( string $locale   )
 array Locale::getKeywords    ( string $locale   )
 array Locale::parseLocale    ( string $locale   )
 array MessageFormatter::parseMessage    ( string $locale   , string $pattern   , string $source   )
 array MongoDBRef::create    ( string $collection   , mixed $id   [, string $database  ] )
 array UConverter::getAliases    ([ string $name  ] )
 bool EventListener::getSocketName    (  string &$address    [,  mixed &$port   ] )
 bool EventUtil::getSocketName    (  mixed $socket    ,  string &$address    [,  mixed &$port   ] )
 bool Locale::filterMatches    ( string $langtag   , string $locale   [, bool $canonicalize = false  ] )
 bool Locale::setDefault    ( string $locale   )
 bool Normalizer::isNormalized     ( string $input    [, int $form = Normalizer::FORM_C   ] )
 bool OAuthProvider::addRequiredParameter    ( string $req_params   )
 bool OAuthProvider::removeRequiredParameter    ( string $req_params   )
 bool OAuthProvider::setParam    ( string $param_key   [, mixed $param_val  ] )
 bool OAuthProvider::setRequestTokenPath    ( string $path   )
 bool V8Js::registerExtension    ( string $extension_name   , string $script   [, array $dependencies = array()   [, bool $auto_enable = FALSE  ]] )
 bool Yaf_Registry::has    ( string $name   )
 bool Yaf_Registry::set    ( string $name   , string $value   )
 bzcompress    ( string $source   [, int $blocksize = 4   [, int $workfactor = 0  ]] )
 bzdecompress    ( string $source   [, int $small = 0  ] )
 bzopen    ( mixed $file   , string $mode   )
 cairo_pattern_set_extend    ( string $pattern   , string $extend   )
 cairo_ps_surface_dsc_comment    ( CairoPsSurface $surface   , string $comment   )
 call_user_method    ( string $method_name   , object &$obj   [, mixed $parameter   [, mixed $...  ]] )
 call_user_method_array    ( string $method_name   , object &$obj   , array $params   )
 chdb::get    ( string $key   )
 clearstatcache    ([ bool $clear_realpath_cache = false   [, string $filename  ]] )
 constant    ( string $name   )
 count_chars    ( string $string   [, int $mode = 0  ] )
 counter_create       ( string $name      [, integer $initial_value      [, integer $flags     ]] )
 crack_opendict    ( string $dictionary   )
 cubrid_connect    ( string $host     , int $port     , string $dbname     [, string $userid     [, string $passwd     [, bool $new_link = false    ]]] )
 cubrid_connect_with_url    ( string $conn_url     [, string $userid     [, string $passwd     [, bool $new_link = false  ]]] )
 cubrid_execute    ( resource $conn_identifier     , string $sql     [, int $option    ] )
 cubrid_get    ( resource $conn_identifier     , string $oid     [, mixed $attr    ] )
 cubrid_lob2_new    ([ resource $conn_identifier   [, string $type = "BLOB"    ]] )
 cubrid_pconnect    ( string $host     , int $port     , string $dbname     [, string $userid     [, string $passwd    ]] )
 cubrid_pconnect_with_url    ( string $conn_url     [, string $userid     [, string $passwd    ]] )
 cubrid_prepare    ( resource $conn_identifier     , string $prepare_stmt     [, int $option = 0    ] )
 cubrid_query    ( string $query   [, resource $conn_identifier  ] )
 cubrid_unbuffered_query    ( string $query   [, resource $conn_identifier  ] )
 curl_init    ([ string $url = NULL  ] )
 cyrus_authenticate    ( resource $connection   [, string $mechlist   [, string $service   [, string $user   [, int $minssf   [, int $maxssf   [, string $authname   [, string $password  ]]]]]]] )
 cyrus_connect    ([ string $host   [, string $port   [, int $flags  ]]] )
 db2_column_privileges    ( resource $connection   [, string $qualifier   [, string $schema   [, string $table-name   [, string $column-name  ]]]] )
 db2_columns    ( resource $connection   [, string $qualifier   [, string $schema   [, string $table-name   [, string $column-name  ]]]] )
 db2_connect    ( string $database   , string $username   , string $password   [, array $options  ] )
 db2_exec    ( resource $connection   , string $statement   [, array $options  ] )
 db2_foreign_keys    ( resource $connection   , string $qualifier   , string $schema   , string $table-name   )
 db2_pconnect    ( string $database   , string $username   , string $password   [, array $options  ] )
 db2_prepare    ( resource $connection   , string $statement   [, array $options  ] )
 db2_primary_keys    ( resource $connection   , string $qualifier   , string $schema   , string $table-name   )
 db2_procedure_columns    ( resource $connection   , string $qualifier   , string $schema   , string $procedure   , string $parameter   )
 db2_procedures    ( resource $connection   , string $qualifier   , string $schema   , string $procedure   )
 db2_special_columns    ( resource $connection   , string $qualifier   , string $schema   , string $table_name   , int $scope   )
 db2_statistics    ( resource $connection   , string $qualifier   , string $schema   , string $table-name   , bool $unique   )
 db2_table_privileges    ( resource $connection   [, string $qualifier   [, string $schema   [, string $table_name  ]]] )
 db2_tables    ( resource $connection   [, string $qualifier   [, string $schema   [, string $table-name   [, string $table-type  ]]]] )
 dba_open    ( string $path   , string $mode   [, string $handler   [, mixed $...  ]] )
 dba_popen    ( string $path   , string $mode   [, string $handler   [, mixed $...  ]] )
 dbplus_aql    ( string $query   [, string $server   [, string $dbpath  ]] )
 dbplus_open    ( string $name   )
 dbplus_rcreate    ( string $name   , mixed $domlist   [, bool $overwrite  ] )
 dbplus_rcrtexact    ( string $name   , resource $relation   [, bool $overwrite  ] )
 dbplus_rcrtlike    ( string $name   , resource $relation   [, int $overwrite  ] )
 dbplus_ropen    ( string $name   )
 dbplus_rquery    ( string $query   [, string $dbpath  ] )
 dbplus_sql    ( string $query   [, string $server   [, string $dbpath  ]] )
 dbx_query    ( object $link_identifier   , string $sql_statement   [, int $flags  ] )
 dio_open    ( string $filename   , int $flags   [, int $mode = 0   ] )
 echo    ( string $arg1   [, string $...  ] )
 eio_chmod    ( string $path   , int $mode   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_chown    ( string $path   , int $uid   [, int $gid = -1   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]]] )
 eio_grp    ( callable $callback   [, string $data = NULL  ] )
 eio_link    ( string $path   , string $new_path   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_lstat    ( string $path   , int $pri   , callable $callback   [, mixed $data = NULL  ] )
 eio_mkdir    ( string $path   , int $mode   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_mknod    ( string $path   , int $mode   , int $dev   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_open    ( string $path   , int $flags   , int $mode   , int $pri   , callable $callback   [, mixed $data = NULL  ] )
 eio_readdir    ( string $path   , int $flags   , int $pri   , callable $callback   [, string $data = NULL  ] )
 eio_readlink    ( string $path   , int $pri   , callable $callback   [, string $data = NULL  ] )
 eio_realpath    ( string $path   , int $pri   , callable $callback   [, string $data = NULL  ] )
 eio_rename    ( string $path   , string $new_path   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_rmdir    ( string $path   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_sendfile    ( mixed $out_fd   , mixed $in_fd   , int $offset   , int $length   [, int $pri   [, callable $callback   [, string $data  ]]] )
 eio_set_min_parallel    ( string $nthreads   )
 eio_stat    ( string $path   , int $pri   , callable $callback   [, mixed $data = NULL  ] )
 eio_statvfs    ( string $path   , int $pri   , callable $callback   [, mixed $data  ] )
 eio_symlink    ( string $path   , string $new_path   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_truncate    ( string $path   [, int $offset = 0   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]]] )
 eio_unlink    ( string $path   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_utime    ( string $path   , float $atime   , float $mtime   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]] )
 eio_write    ( mixed $fd   , string $str   [, int $length = 0   [, int $offset = 0   [, int $pri = EIO_PRI_DEFAULT   [, callable $callback = NULL   [, mixed $data = NULL  ]]]]] )
 enchant_broker_request_dict    ( resource $broker   , string $tag   )
 enchant_broker_request_pwl_dict    ( resource $broker   , string $filename   )
 enchant_dict_add_to_personal    ( resource $dict   , string $word   )
 enchant_dict_add_to_session    ( resource $dict   , string $word   )
 enchant_dict_store_replacement    ( resource $dict   , string $mis   , string $cor   )
 eval    ( string $code   )
 exit    ([ string $status  ] )
 expect_popen    ( string $command   )
 fam_monitor_collection    ( resource $fam   , string $dirname   , int $depth   , string $mask   )
 fam_monitor_directory    ( resource $fam   , string $dirname   )
 fam_monitor_file    ( resource $fam   , string $filename   )
 fam_open    ([ string $appname  ] )
 fann_create_from_file    ( string $configuration_file   )
 fann_print_error    ( string $errdat   )
 fann_read_train_from_file    ( string $filename   )
 fann_set_error_log    ( resource $errdat   , string $log_file   )
 fbsql_connect    ([ string $hostname = ini_get("fbsql.default_host")   [, string $username = ini_get("fbsql.default_user")   [, string $password = ini_get("fbsql.default_password")  ]]] )
 fbsql_db_query    ( string $database   , string $query   [, resource $link_identifier  ] )
 fbsql_list_fields    ( string $database_name   , string $table_name   [, resource $link_identifier  ] )
 fbsql_list_tables    ( string $database   [, resource $link_identifier  ] )
 fbsql_pconnect    ([ string $hostname = ini_get("fbsql.default_host")   [, string $username = ini_get("fbsql.default_user")   [, string $password = ini_get("fbsql.default_password")  ]]] )
 fbsql_query    ( string $query   [, resource $link_identifier   [, int $batch_size  ]] )
 fdf_get_opt    ( resource $fdf_document   , string $fieldname   [, int $element = -1  ] )
 fdf_get_value    ( resource $fdf_document   , string $fieldname   [, int $which = -1  ] )
 fdf_open    ( string $filename   )
 fdf_open_string    ( string $fdf_data   )
 filter_input    ( int $type   , string $variable_name   [, int $filter = FILTER_DEFAULT   [, mixed $options  ]] )
 finfo::buffer    ( string $string = NULL   [, int $options = FILEINFO_NONE   [, resource $context = NULL  ]] )
 finfo::file    ( string $file_name = NULL   [, int $options = FILEINFO_NONE   [, resource $context = NULL  ]] )
 finfo_open    ([ int $options = FILEINFO_NONE   [, string $magic_file = NULL  ]] )
 fopen    ( string $filename   , string $mode   [, bool $use_include_path = false   [, resource $context  ]] )
 fscanf    ( resource $handle   , string $format   [, mixed &$...  ] )
 fsockopen    ( string $hostname   [, int $port = -1   [, int &$errno   [, string &$errstr   [, float $timeout = ini_get("default_socket_timeout")  ]]]] )
 ftp_connect    ( string $host   [, int $port = 21   [, int $timeout = 90  ]] )
 ftp_rawlist    ( resource $ftp_stream   , string $directory   [, bool $recursive = false  ] )
 ftp_ssl_connect    ( string $host   [, int $port = 21   [, int $timeout = 90  ]] )
 geoip_setup_custom_directory    ( string $path   )
 get_browser    ([ string $user_agent   [, bool $return_array = false  ]] )
 gupnp_context_new    ([ string $host_ip   [, int $port = 0  ]] )
 gupnp_control_point_new    ( resource $context   , string $target   )
 gupnp_device_info_get_service    ( resource $root_device   , string $type   )
 gupnp_root_device_new    ( resource $context   , string $location   , string $description_dir   )
 gupnp_service_action_get    ( resource $action   , string $name   , int $type   )
 gupnp_service_proxy_action_get    ( resource $proxy   , string $action   , string $name   , int $type   )
 gzopen    ( string $filename   , string $mode   [, int $use_include_path = 0  ] )
 hash_init    ( string $algo   [, int $options = 0   [, string $key = NULL  ]] )
 header    ( string $string   [, bool $replace = true   [, int $http_response_code  ]] )
 header_remove    ([ string $name  ] )
 highlight_file    ( string $filename   [, bool $return = false  ] )
 highlight_string    ( string $str   [, bool $return = false  ] )
 ibase_backup    ( resource $service_handle   , string $source_db   , string $dest_file   [, int $options = 0   [, bool $verbose = false  ]] )
 ibase_blob_add    ( resource $blob_handle   , string $data   )
 ibase_blob_open    ( resource $link_identifier   , string $blob_id   )
 ibase_connect    ([ string $database   [, string $username   [, string $password   [, string $charset   [, int $buffers   [, int $dialect   [, string $role   [, int $sync  ]]]]]]]] )
 ibase_gen_id    ( string $generator   [, int $increment = 1   [, resource $link_identifier = NULL  ]] )
 ibase_pconnect    ([ string $database   [, string $username   [, string $password   [, string $charset   [, int $buffers   [, int $dialect   [, string $role   [, int $sync  ]]]]]]]] )
 ibase_prepare    ( string $query   )
 ibase_query    ([ resource $link_identifier   ], string $query   [, int $bind_args  ] )
 ibase_restore    ( resource $service_handle   , string $source_file   , string $dest_db   [, int $options = 0   [, bool $verbose = false  ]] )
 ibase_service_attach    ( string $host   , string $dba_username   , string $dba_password   )
 ibase_set_event_handler    ( callable $event_handler   , string $event_name1   [, string $event_name2   [, string $...  ]] )
 iconv_get_encoding    ([ string $type = "all"  ] )
 ifx_connect    ([ string $database   [, string $userid   [, string $password  ]]] )
 ifx_pconnect    ([ string $database   [, string $userid   [, string $password  ]]] )
 ifx_prepare    ( string $query   , resource $link_identifier   [, int $cursor_def   ], mixed $blobidarray   )
 ifx_query    ( string $query   , resource $link_identifier   [, int $cursor_type   [, mixed $blobidarray  ]] )
 imagecreatefromgd    ( string $filename   )
 imagecreatefromgd2    ( string $filename   )
 imagecreatefromgd2part    ( string $filename   , int $srcX   , int $srcY   , int $width   , int $height   )
 imagecreatefromgif    ( string $filename   )
 imagecreatefromjpeg    ( string $filename   )
 imagecreatefrompng    ( string $filename   )
 imagecreatefromstring    ( string $image   )
 imagecreatefromwbmp    ( string $filename   )
 imagecreatefromwebp    ( string $filename   )
 imagecreatefromxbm    ( string $filename   )
 imagecreatefromxpm    ( string $filename   )
 imagepsloadfont    ( string $filename   )
 imap_open    ( string $mailbox   , string $username   , string $password   [, int $options = 0   [, int $n_retries = 0   [, array $params = NULL  ]]] )
 ingres_connect    ([ string $database   [, string $username   [, string $password   [, array $options  ]]]] )
 ingres_pconnect    ([ string $database   [, string $username   [, string $password   [, array $options  ]]]] )
 ingres_prepare    ( resource $link   , string $query   )
 ingres_query    ( resource $link   , string $query   [, array $params   [, string $types  ]] )
 ingres_unbuffered_query    ( resource $link   , string $query   [, array $params   [, string $types  ]] )
 ini_restore    ( string $varname   )
 int IntlChar::charFromName    ( string $characterName   [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME  ] )
 int IntlChar::digit    ( string $codepoint   [, int $radix = 10  ] )
 int IntlChar::getPropertyEnum    ( string $alias   )
 int IntlChar::getPropertyValueEnum    ( int $property   , string $name   )
 int Yar_Concurrent_Client::call    ( string $uri   , string $method   , array $parameters   [, callable $callback  ] )
 integer IntlTimeZone::countEquivalentIDs    ( string $zoneId   )
 iptcembed    ( string $iptcdata   , string $jpeg_file_name   [, int $spool  ] )
 json_decode    ( string $json   [, bool $assoc = false   [, int $depth = 512   [, int $options = 0  ]]] )
 kadm5_init_with_password    ( string $admin_server   , string $realm   , string $principal   , string $password   )
 ldap_compare    ( resource $link_identifier   , string $dn   , string $attribute   , string $value   )
 ldap_connect    ([ string $hostname = NULL   [, int $port = 389  ]] )
 ldap_list    ( resource $link_identifier   , string $base_dn   , string $filter   [, array $attributes   [, int $attrsonly   [, int $sizelimit   [, int $timelimit   [, int $deref  ]]]]] )
 ldap_read    ( resource $link_identifier   , string $base_dn   , string $filter   [, array $attributes   [, int $attrsonly   [, int $sizelimit   [, int $timelimit   [, int $deref  ]]]]] )
 ldap_search    ( resource $link_identifier   , string $base_dn   , string $filter   [, array $attributes   [, int $attrsonly   [, int $sizelimit   [, int $timelimit   [, int $deref  ]]]]] )
 mailparse_msg_extract_part    ( resource $mimemail   , string $msgbody   [, callable $callbackfunc  ] )
 mailparse_msg_get_part    ( resource $mimemail   , string $mimesection   )
 mailparse_msg_parse_file    ( string $filename   )
 maxdb_connect    ([ string $host   [, string $username   [, string $passwd   [, string $dbname   [, int $port = 0   [, string $socket  ]]]]]] )
 maxdb_debug    ( string $debug   )
 maxdb_embedded_connect    ([ string $dbname  ] )
 maxdb_prepare    ( resource $link   , string $query   )
 maxdb_query    ( resource $link   , string $query   [, int $resultmode  ] )
 mb_get_info    ([ string $type = "all"  ] )
 mb_http_input    ([ string $type = ""  ] )
 mb_http_output    ([ string $encoding = mb_http_output()  ] )
 mb_internal_encoding    ([ string $encoding = mb_internal_encoding()  ] )
 mb_language    ([ string $language = mb_language()  ] )
 mb_regex_encoding    ([ string $encoding = mb_regex_encoding()  ] )
 mb_strlen    ( string $str   [, string $encoding = mb_internal_encoding()  ] )
 mcrypt_module_open    ( string $algorithm   , string $algorithm_directory   , string $mode   , string $mode_directory   )
 mixed SolrParams::get    ( string $param_name   )
 mixed SolrParams::getParam    ([ string $param_name  ] )
 mixed Yaf_Registry::get    ( string $name   )
 mqseries_conn    ( string $qManagerName   , resource &$hconn   , resource &$compCode   , resource &$reason   )
 mqseries_connx    ( string $qManagerName   , array &$connOptions   , resource &$hconn   , resource &$compCode   , resource &$reason   )
 mqseries_get    ( resource $hConn   , resource $hObj   , array &$md   , array &$gmo   , int &$bufferLength   , string &$msg   , int &$data_length   , resource &$compCode   , resource &$reason   )
 mqseries_put    ( resource $hConn   , resource $hObj   , array &$md   , array &$pmo   , string $message   , resource &$compCode   , resource &$reason   )
 mqseries_put1    ( resource $hconn   , resource &$objDesc   , resource &$msgDesc   , resource &$pmo   , string $buffer   , resource &$compCode   , resource &$reason   )
 msession_set_array    ( string $session   , array $tuples   )
 msql_connect    ([ string $hostname  ] )
 msql_db_query    ( string $database   , string $query   [, resource $link_identifier  ] )
 msql_list_fields    ( string $database   , string $tablename   [, resource $link_identifier  ] )
 msql_list_tables    ( string $database   [, resource $link_identifier  ] )
 msql_pconnect    ([ string $hostname  ] )
 msql_query    ( string $query   [, resource $link_identifier  ] )
 mssql_connect    ([ string $servername   [, string $username   [, string $password   [, bool $new_link = false  ]]]] )
 mssql_init    ( string $sp_name   [, resource $link_identifier  ] )
 mssql_pconnect    ([ string $servername   [, string $username   [, string $password   [, bool $new_link = false  ]]]] )
 mssql_query    ( string $query   [, resource $link_identifier   [, int $batch_size = 0  ]] )
 mysql_connect    ([ string $server = ini_get("mysql.default_host")   [, string $username = ini_get("mysql.default_user")   [, string $password = ini_get("mysql.default_password")   [, bool $new_link = false   [, int $client_flags = 0  ]]]]] )
 mysql_db_query    ( string $database   , string $query   [, resource $link_identifier = NULL  ] )
 mysql_list_fields    ( string $database_name   , string $table_name   [, resource $link_identifier = NULL  ] )
 mysql_list_tables    ( string $database   [, resource $link_identifier = NULL  ] )
 mysql_pconnect    ([ string $server = ini_get("mysql.default_host")   [, string $username = ini_get("mysql.default_user")   [, string $password = ini_get("mysql.default_password")   [, int $client_flags = 0  ]]]] )
 mysql_query    ( string $query   [, resource $link_identifier = NULL  ] )
 mysql_unbuffered_query    ( string $query   [, resource $link_identifier = NULL  ] )
 mysqli::begin_transaction    ([ int $flags   [, string $name   ]] )
 mysqli::query    ( string $query   [, int $resultmode = MYSQLI_STORE_RESULT  ] )
 mysqli::release_savepoint    ( string $name    )
 mysqli::savepoint    ( string $name    )
 mysqli_stmt::prepare    ( string $query   )
 mysqlnd_qc_set_is_select    (  string $callback    )
 newt_button    ( int $left   , int $top   , string $text   )
 newt_checkbox    ( int $left   , int $top   , string $text   , string $def_value   [, string $seq  ] )
 newt_checkbox_set_value    ( resource $checkbox   , string $value   )
 newt_checkbox_tree_add_item    ( resource $checkboxtree   , string $text   , mixed $data   , int $flags   , int $index   [, int $...  ] )
 newt_checkbox_tree_multi    ( int $left   , int $top   , int $height   , string $seq   [, int $flags  ] )
 newt_checkbox_tree_set_entry    ( resource $checkboxtree   , mixed $data   , string $text   )
 newt_checkbox_tree_set_entry_value    ( resource $checkboxtree   , mixed $data   , string $value   )
 newt_compact_button    ( int $left   , int $top   , string $text   )
 newt_draw_root_text    ( int $left   , int $top   , string $text   )
 newt_entry    ( int $left   , int $top   , int $width   [, string $init_value   [, int $flags  ]] )
 newt_entry_set    ( resource $entry   , string $value   [, bool $cursor_at_end  ] )
 newt_form    ([ resource $vert_bar   [, string $help   [, int $flags  ]]] )
 newt_grid_wrapped_window    ( resource $grid   , string $title   )
 newt_grid_wrapped_window_at    ( resource $grid   , string $title   , int $left   , int $top   )
 newt_label    ( int $left   , int $top   , string $text   )
 newt_label_set_text    ( resource $label   , string $text   )
 newt_listbox_append_entry    ( resource $listbox   , string $text   , mixed $data   )
 newt_listbox_insert_entry    ( resource $listbox   , string $text   , mixed $data   , mixed $key   )
 newt_listbox_set_entry    ( resource $listbox   , int $num   , string $text   )
 newt_listitem    ( int $left   , int $top   , string $text   , bool $is_default   , resouce $prev_item   , mixed $data   [, int $flags  ] )
 newt_listitem_set    ( resource $item   , string $text   )
 newt_push_help_line    ([ string $text  ] )
 newt_radiobutton    ( int $left   , int $top   , string $text   , bool $is_default   [, resource $prev_button  ] )
 newt_textbox_set_text    ( resource $textbox   , string $text   )
 newt_win_message    ( string $title   , string $button_text   , string $format   [, mixed $args   [, mixed $...  ]] )
 newt_win_messagev    ( string $title   , string $button_text   , string $format   , array $args   )
 oci_connect    ( string $username   , string $password   [, string $connection_string   [, string $character_set   [, int $session_mode  ]]] )
 oci_new_connect    ( string $username   , string $password   [, string $connection_string   [, string $character_set   [, int $session_mode  ]]] )
 oci_parse    ( resource $connection   , string $sql_text   )
 oci_pconnect    ( string $username   , string $password   [, string $connection_string   [, string $character_set   [, int $session_mode  ]]] )
 odbc_columnprivileges    ( resource $connection_id   , string $qualifier   , string $owner   , string $table_name   , string $column_name   )
 odbc_columns    ( resource $connection_id   [, string $qualifier   [, string $schema   [, string $table_name   [, string $column_name  ]]]] )
 odbc_connect    ( string $dsn   , string $user   , string $password   [, int $cursor_type  ] )
 odbc_exec    ( resource $connection_id   , string $query_string   [, int $flags  ] )
 odbc_foreignkeys    ( resource $connection_id   , string $pk_qualifier   , string $pk_owner   , string $pk_table   , string $fk_qualifier   , string $fk_owner   , string $fk_table   )
 odbc_pconnect    ( string $dsn   , string $user   , string $password   [, int $cursor_type  ] )
 odbc_prepare    ( resource $connection_id   , string $query_string   )
 odbc_primarykeys    ( resource $connection_id   , string $qualifier   , string $owner   , string $table   )
 odbc_specialcolumns    ( resource $connection_id   , int $type   , string $qualifier   , string $owner   , string $table   , int $scope   , int $nullable   )
 odbc_statistics    ( resource $connection_id   , string $qualifier   , string $owner   , string $table_name   , int $unique   , int $accuracy   )
 odbc_tableprivileges    ( resource $connection_id   , string $qualifier   , string $owner   , string $name   )
 odbc_tables    ( resource $connection_id   [, string $qualifier   [, string $owner   [, string $name   [, string $types  ]]]] )
 openal_device_open    ([ string $device_desc  ] )
 opendir    ( string $path   [, resource $context  ] )
 openssl_pkcs7_verify    ( string $filename   , int $flags   [, string $outfilename   [, array $cainfo   [, string $extracerts   [, string $content  ]]]] )
 openssl_pkey_get_private    ( mixed $key   [, string $passphrase = ""  ] )
 parse_str    ( string $str   [, array &$arr  ] )
 parse_url    ( string $url   [, int $component = -1  ] )
 passthru    ( string $command   [, int &$return_var  ] )
 pathinfo    ( string $path   [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME  ] )
 pfsockopen    ( string $hostname   [, int $port = -1   [, int &$errno   [, string &$errstr   [, float $timeout = ini_get("default_socket_timeout")  ]]]] )
 pg_connect    ( string $connection_string   [, int $connect_type  ] )
 pg_delete    ( resource $connection   , string $table_name   , array $assoc_array   [, int $options = PGSQL_DML_EXEC  ] )
 pg_execute    ([ resource $connection   ], string $stmtname   , array $params   )
 pg_insert    ( resource $connection   , string $table_name   , array $assoc_array   [, int $options = PGSQL_DML_EXEC  ] )
 pg_lo_open    ( resource $connection   , int $oid   , string $mode   )
 pg_pconnect    ( string $connection_string   [, int $connect_type  ] )
 pg_prepare    ([ resource $connection   ], string $stmtname   , string $query   )
 pg_query    ([ resource $connection   ], string $query   )
 pg_query_params    ([ resource $connection   ], string $query   , array $params   )
 pg_select    ( resource $connection   , string $table_name   , array $assoc_array   [, int $options = PGSQL_DML_EXEC  ] )
 pg_update    ( resource $connection   , string $table_name   , array $data   , array $condition   [, int $options = PGSQL_DML_EXEC  ] )
 popen    ( string $command   , string $mode   )
 proc_open       ( string $cmd      , array $descriptorspec      , array &$pipes      [, string $cwd      [, array $env      [, array $other_options     ]]] )
 px_set_tablename    ( resource $pxdoc   , string $name   )
 readline_info    ([ string $varname   [, string $newvalue  ]] )
 rpm_open    ( string $filename   )
 session_set_cookie_params    ( int $lifetime   [, string $path   [, string $domain   [, bool $secure = false   [, bool $httponly = false  ]]]] )
 setproctitle    ( string $title   )
 spl_autoload    ( string $class_name   [, string $file_extensions = spl_autoload_extensions()  ] )
 spl_autoload_call    ( string $class_name   )
 sqlite_create_aggregate    ( resource $dbhandle   , string $function_name   , callable $step_func   , callable $finalize_func   [, int $num_args = -1  ] )
 sqlite_create_function    ( resource $dbhandle   , string $function_name   , callable $callback   [, int $num_args = -1  ] )
 sqlite_open    ( string $filename   [, int $mode = 0666   [, string &$error_message  ]] )
 sqlite_popen    ( string $filename   [, int $mode = 0666   [, string &$error_message  ]] )
 sqlite_query    ( resource $dbhandle   , string $query   [, int $result_type = SQLITE_BOTH   [, string &$error_msg  ]] )
 sqlite_unbuffered_query    ( resource $dbhandle   , string $query   [, int $result_type = SQLITE_BOTH   [, string &$error_msg  ]] )
 sqlsrv_connect    ( string $serverName   [, array $connectionInfo  ] )
 sqlsrv_fetch_object    ( resource $stmt   [, string $className   [, array $ctorParams   [, int $row   [, int $offset  ]]]] )
 sqlsrv_get_config    ( string $setting   )
 sqlsrv_prepare    ( resource $conn   , string $sql   [, array $params   [, array $options  ]] )
 sqlsrv_query    ( resource $conn   , string $sql   [, array $params   [, array $options  ]] )
 sscanf    ( string $str   , string $format   [, mixed &$...  ] )
 ssh2_auth_none    ( resource $session   , string $username   )
 ssh2_connect    ( string $host   [, int $port = 22   [, array $methods   [, array $callbacks  ]]] )
 ssh2_exec    ( resource $session   , string $command   [, string $pty   [, array $env   [, int $width = 80   [, int $height = 25   [, int $width_height_type = SSH2_TERM_UNIT_CHARS  ]]]]] )
 ssh2_shell    ( resource $session   [, string $term_type = "vanilla"   [, array $env   [, int $width = 80   [, int $height = 25   [, int $width_height_type = SSH2_TERM_UNIT_CHARS  ]]]]] )
 ssh2_tunnel    ( resource $session   , string $host   , int $port   )
 static bool Phar::isValidPharFilename    ( string $filename   [, bool $executable = true  ] )
 static bool Phar::loadPhar    ( string $filename   [, string $alias  ] )
 static bool Phar::mapPhar    ([ string $alias   [, int $dataoffset = 0  ]] )
 static bool Phar::unlinkArchive    ( string $archive   )
 static object EvCheck::createStopped    (  string $callback    [,  string $data    [,  string $priority   ]] )
 static object EvFork::createStopped    (  string $callback    [,  string $data    [,  string $priority   ]] )
 static object EvIdle::createStopped    (  string $callback    [,  mixed $data    [,  int $priority   ]] )
 static string OAuthProvider::generateToken    ( int $size   [, bool $strong = false  ] )
 static string OAuthProvider::reportProblem    ( string $oauthexception   [, bool $send_headers = true  ] )
 static string Phar::apiVersion    ( void   )
 static string Phar::createDefaultStub    ([ string $indexfile   [, string $webindexfile  ]] )
 static string Phar::running    ([ bool $retphar = true  ] )
 static void EvStat::createStopped    (  string $path    ,  double $interval    ,  callable $callback    [,  mixed $data  = NULL    [,  int $priority  = 0   ]] )
 static void Phar::mount    ( string $pharpath   , string $externalpath   )
 static void Phar::webPhar    ([ string $alias   [, string $index = "index.php"   [, string $f404   [, array $mimetypes   [, callable $rewrites  ]]]]] )
 str_word_count    ( string $string   [, int $format = 0   [, string $charlist  ]] )
 streamWrapper::dir_opendir    ( string $path   , int $options   )
 streamWrapper::dir_readdir    ( void   )
 streamWrapper::mkdir    ( string $path   , int $mode   , int $options   )
 streamWrapper::rename    ( string $path_from   , string $path_to   )
 streamWrapper::rmdir    ( string $path   , int $options   )
 streamWrapper::stream_metadata    ( string $path   , int $option   , mixed $value   )
 streamWrapper::stream_open    ( string $path   , string $mode   , int $options   , string &$opened_path   )
 streamWrapper::stream_read    ( int $count   )
 streamWrapper::unlink    ( string $path   )
 streamWrapper::url_stat    ( string $path   , int $flags   )
 stream_filter_append    ( resource $stream   , string $filtername   [, int $read_write   [, mixed $params  ]] )
 stream_filter_prepend    ( resource $stream   , string $filtername   [, int $read_write   [, mixed $params  ]] )
 stream_notification_callback    ( int $notification_code   , int $severity   , string $message   , int $message_code   , int $bytes_transferred   , int $bytes_max   )
 stream_socket_accept    ( resource $server_socket   [, float $timeout = ini_get("default_socket_timeout")   [, string &$peername  ]] )
 stream_socket_client    ( string $remote_socket   [, int &$errno   [, string &$errstr   [, float $timeout = ini_get("default_socket_timeout")   [, int $flags = STREAM_CLIENT_CONNECT   [, resource $context  ]]]]] )
 stream_socket_server    ( string $local_socket   [, int &$errno   [, string &$errstr   [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN   [, resource $context  ]]]] )
 stripos    ( string $haystack   , string $needle   [, int $offset = 0  ] )
 strpos    ( string $haystack   , mixed $needle   [, int $offset = 0  ] )
 substr_replace    ( mixed $string   , mixed $replacement   , mixed $start   [, mixed $length  ] )
 svn_auth_set_parameter    ( string $key   , string $value   )
 svn_fs_apply_text    ( resource $root   , string $path   )
 svn_fs_file_contents    ( resource $fsroot   , string $path   )
 svn_repos_create    ( string $path   [, array $config   [, array $fsconfig  ]] )
 svn_repos_fs_begin_txn_for_commit    ( resource $repos   , int $rev   , string $author   , string $log_msg   )
 svn_repos_open    ( string $path   )
 sybase_connect    ([ string $servername   [, string $username   [, string $password   [, string $charset   [, string $appname   [, bool $new = false  ]]]]]] )
 sybase_pconnect    ([ string $servername   [, string $username   [, string $password   [, string $charset   [, string $appname  ]]]]] )
 sybase_query    ( string $query   [, resource $link_identifier  ] )
 sybase_unbuffered_query    ( string $query   , resource $link_identifier   [, bool $store_result  ] )
 tidy::getOpt    ( string $option   )
 tidy_load_config    ( string $filename   , string $encoding   )
 udm_alloc_agent    ( string $dbaddr   [, string $dbmode  ] )
 udm_find    ( resource $agent   , string $query   )
 unregister_tick_function    ( string $function_name   )
 unserialize    ( string $str   )
 uopz_backup    ( string $class   , string $function   )
 uopz_compose    ( string $name   , array $classes   [, array $methods   [, array $properties   [, int $flags  ]]] )
 uopz_delete    ( string $class   , string $function   )
 uopz_extend    ( string $class   , string $parent   )
 uopz_function    ( string $class   , string $function   , Closure $handler   [, int $modifiers  ] )
 uopz_implement    ( string $class   , string $interface   )
 uopz_redefine    ( string $class   , string $constant   , mixed $value   )
 uopz_rename    ( string $class   , string $function   , string $rename   )
 uopz_restore    ( string $class   , string $function   )
 uopz_undefine    ( string $class   , string $constant   )
 version_compare    ( string $version1   , string $version2   [, string $operator  ] )
 void CairoImageSurface::createForData    ( string $data   , int $format   , int $width   , int $height   [, int $stride = -1  ] )
 void Imagick::setRegistry    ( string $key   , string $value   )
 void SolrParams::set    ( string $name   , string $value   )
 void SolrParams::unserialize    ( string $serialized   )
 void Yaf_Registry::del    ( string $name   )
 wddx_deserialize    ( string $packet   )
 wddx_packet_start    ([ string $comment  ] )
 win32_create_service    ( array $details   [, string $machine  ] )
 win32_delete_service    ( string $servicename   [, string $machine  ] )
 win32_query_service_status    ( string $servicename   [, string $machine  ] )
 win32_start_service_ctrl_dispatcher    ( string $name   )
 wincache_ucache_dec    ( string $key   [, int $dec_by = 1   [, bool &$success  ]] )
 wincache_ucache_inc    ( string $key   [, int $inc_by = 1   [, bool &$success  ]] )
 xdiff_file_merge3    ( string $old_file   , string $new_file1   , string $new_file2   , string $dest   )
 xdiff_file_patch    ( string $file   , string $patch   , string $dest   [, int $flags = DIFF_PATCH_NORMAL  ] )
 xdiff_string_merge3    ( string $old_data   , string $new_data1   , string $new_data2   [, string &$error  ] )
 xml_parser_create    ([ string $encoding  ] )
 xml_parser_create_ns    ([ string $encoding   [, string $separator = ":"  ]] )
 xmlrpc_decode    ( string $xml   [, string $encoding = "iso-8859-1"  ] )
 xmlrpc_decode_request    ( string $xml   , string &$method   [, string $encoding  ] )
 yaml_parse    ( string $input   [, int $pos = 0   [, int &$ndocs   [, array $callbacks  ]]] )
 yaml_parse_file    ( string $filename   [, int $pos = 0   [, int &$ndocs   [, array $callbacks  ]]] )
 yaml_parse_url    ( string $url   [, int $pos = 0   [, int &$ndocs   [, array $callbacks  ]]] )
 yaz_connect    ( string $zurl   [, mixed $options  ] )
 yaz_es    (  resource $id    ,  string $type    ,  array $args    )
 yaz_scan    ( resource $id   , string $type   , string $startterm   [, array $flags  ] )
 yaz_schema    ( resource $id   , string $schema   )
 yaz_set_option    ( resource $id   , string $name   , string $value   )
 yaz_sort    ( resource $id   , string $criteria   )
 yaz_syntax    ( resource $id   , string $syntax   )
 yp_all    ( string $domain   , string $map   , string $callback   )
 zip_open    ( string $filename   )
APCIterator::__construct    ( string $cache   [, mixed $search = null   [, int $format = APC_ITER_ALL   [, int $chunk_size = 100   [, int $list = APC_LIST_ACTIVE  ]]]] )
CachingIterator::__construct    ( Iterator $iterator   [, string $flags = self::CALL_TOSTRING  ] )
CairoImageSurface cairo_image_surface_create_for_data    ( string $data   , int $format   , int $width   , int $height   [, int $stride = -1  ] )
CairoImageSurface cairo_image_surface_create_from_png    ( string $file   )
CairoPdfSurface cairo_pdf_surface_create    ( string $file   , float $width   , float $height   )
CairoPdfSurface::__construct    ( string $file   , float $width   , float $height   )
CairoPsSurface cairo_ps_surface_create    ( string $file   , float $width   , float $height   )
CairoPsSurface::__construct    ( string $file   , float $width   , float $height   )
CairoSvgSurface cairo_svg_surface_create    ( string $file   , float $width   , float $height   )
CairoSvgSurface::__construct    ( string $file   , float $width   , float $height   )
Closure uopz_copy    ( string $class   , string $function   )
Counter Counter::getNamed       ( string $name      )
Counter::setCounterClass       ( string $name      )
DOMAttr DOMDocument::createAttribute    ( string $name   )
DOMAttr DOMDocument::createAttributeNS    ( string $namespaceURI   , string $qualifiedName   )
DOMAttr DOMElement::getAttributeNode    ( string $name   )
DOMAttr DOMElement::getAttributeNodeNS    ( string $namespaceURI   , string $localName   )
DOMAttr DOMElement::setAttribute    ( string $name   , string $value   )
DOMAttr::__construct    ( string $name   [, string $value  ] )
DOMCDATASection DOMDocument::createCDATASection    ( string $data   )
DOMCharacterData::substringData    ( int $offset   , int $count   )
DOMComment DOMDocument::createComment    ( string $data   )
DOMComment::__construct    ([ string $value  ] )
DOMDocument DOMImplementation::createDocument    ([ string $namespaceURI = NULL   [, string $qualifiedName = NULL   [, DOMDocumentType $doctype = NULL  ]]] )
DOMDocument::__construct    ([ string $version   [, string $encoding  ]] )
DOMDocumentType DOMImplementation::createDocumentType    ([ string $qualifiedName = NULL   [, string $publicId = NULL   [, string $systemId = NULL  ]]] )
DOMElement DOMDocument::createElement    ( string $name   [, string $value  ] )
DOMElement DOMDocument::createElementNS    ( string $namespaceURI   , string $qualifiedName   [, string $value  ] )
DOMElement DOMDocument::getElementById    ( string $elementId   )
DOMElement::__construct    ( string $name   [, string $value   [, string $namespaceURI  ]] )
DOMEntityReference DOMDocument::createEntityReference    ( string $name   )
DOMEntityReference::__construct    ( string $name   )
DOMNode DOMNamedNodeMap::getNamedItem    ( string $name   )
DOMNode DOMNamedNodeMap::getNamedItemNS    ( string $namespaceURI   , string $localName   )
DOMNodeList DOMDocument::getElementsByTagName    ( string $name   )
DOMNodeList DOMDocument::getElementsByTagNameNS    ( string $namespaceURI   , string $localName   )
DOMNodeList DOMElement::getElementsByTagName    ( string $name   )
DOMNodeList DOMElement::getElementsByTagNameNS    ( string $namespaceURI   , string $localName   )
DOMNodeList DOMXPath::query    ( string $expression   [, DOMNode $contextnode   [, bool $registerNodeNS = true  ]] )
DOMProcessingInstruction DOMDocument::createProcessingInstruction    ( string $target   [, string $data  ] )
DOMProcessingInstruction::__construct    ( string $name   [, string $value  ] )
DOMText DOMDocument::createTextNode    ( string $content   )
DateTime DateTime::modify    ( string $modify   )
DateTime date_create    ([ string $time = "now"   [, DateTimeZone $timezone = NULL  ]] )
DateTimeImmutable DateTimeImmutable::modify    ( string $modify   )
DateTimeImmutable date_create_immutable    ([ string $time = "now"   [, DateTimeZone $timezone = NULL  ]] )
DateTimeZone timezone_open    ( string $timezone   )
Directory dir    ( string $directory   [, resource $context  ] )
EvPeriodic::__construct    (  double $offset    ,  string $interval    ,  callable $reschedule_cb    ,  callable $callback    [,  mixed $data  = NULL    [,  int $priority  = 0   ]] )
EvPrepare::__construct    (  string $callback    [,  string $data    [,  string $priority   ]] )
EvStat::__construct    (  string $path    ,  double $interval    ,  callable $callback    [,  mixed $data  = NULL    [,  int $priority  = 0   ]] )
EventHttpConnection::__construct    (  EventBase $base    ,  EventDnsBase $dns_base    ,  string $address    ,  int $port    [,  EventSslContext $ctx  = NULL   ] )
EventSslContext::__construct    (  string $method    ,  string $options    )
FilesystemIterator::__construct    ( string $path   [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS  ] )
GMP gmp_import    ( string $data   , integer $word_size   , integer $options   )
GearmanTask GearmanClient::addTask    ( string $function_name   , string $workload   [, mixed &$context   [, string $unique  ]] )
GearmanTask GearmanClient::addTaskBackground    ( string $function_name   , string $workload   [, mixed &$context   [, string $unique  ]] )
GearmanTask GearmanClient::addTaskHigh    ( string $function_name   , string $workload   [, mixed &$context   [, string $unique  ]] )
GearmanTask GearmanClient::addTaskHighBackground    ( string $function_name   , string $workload   [, mixed &$context   [, string $unique  ]] )
GearmanTask GearmanClient::addTaskLow    ( string $function_name   , string $workload   [, mixed &$context   [, string $unique  ]] )
GearmanTask GearmanClient::addTaskLowBackground    ( string $function_name   , string $workload   [, mixed &$context   [, string $unique  ]] )
GearmanTask GearmanClient::addTaskStatus    ( string $job_handle   [, string &$context  ] )
Gender\Gender::__construct    ([ string $dsn  ] )
GlobIterator::__construct    ( string $path   [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO  ] )
Gmagick Gmagick::annotateimage    ( GmagickDraw $GmagickDraw   , float $x   , float $y   , float $angle   , string $text   )
Gmagick Gmagick::commentimage    ( string $comment   )
Gmagick Gmagick::newimage    ( int $width   , int $height   , string $background   [, string $format      ] )
Gmagick Gmagick::profileimage    ( string $name   , string $profile   )
Gmagick Gmagick::read    ( string $filename   )
Gmagick Gmagick::readimage    ( string $filename   )
Gmagick Gmagick::readimageblob    ( string $imageContents   [, string $filename  ] )
Gmagick Gmagick::readimagefile    ( resource $fp   [, string $filename  ] )
Gmagick Gmagick::setfilename    ( string $filename   )
Gmagick Gmagick::setimagefilename    ( string $filename   )
Gmagick Gmagick::setimageformat    ( string $imageFormat   )
Gmagick Gmagick::setimageprofile    ( string $name   , string $profile   )
Gmagick Gmagick::writeimage    ( string $filename   [, bool $all_frames = false  ] )
Gmagick::__construct    ([ string $filename  ] )
GmagickDraw GmagickDraw::annotate    ( float $x   , float $y   , string $text   )
GmagickDraw GmagickDraw::setfillcolor    ( string $color   )
GmagickDraw GmagickDraw::setfont    ( string $font   )
GmagickDraw GmagickDraw::settextencoding    ( string $encoding   )
GmagickPixel GmagickPixel::setcolor    ( string $color   )
GmagickPixel::__construct    ([ string $color  ] )
HW_API hwapi_hgcsp    ( string $hostname   [, int $port  ] )
HW_API_Attribute hwapi_attribute_new    ([ string $name   [, string $value  ]] )
HW_API_Content hwapi_content_new    ( string $content   , string $mimetype   )
HaruDoc::addPageLabel    ( int $first_page   , int $style   , int $first_num   [, string $prefix = ""  ] )
HaruDoc::createOutline    ( string $title   [, object $parent_outline   [, object $encoder  ]] )
HaruDoc::getEncoder    ( string $encoding   )
HaruDoc::getFont    ( string $fontname   [, string $encoding  ] )
HaruDoc::getInfoAttr    ( int $type   )
HaruDoc::loadJPEG    ( string $filename   )
HaruDoc::loadPNG    ( string $filename   [, bool $deferred = false  ] )
HaruDoc::loadRaw    ( string $filename   , int $width   , int $height   , int $color_space   )
HaruDoc::loadTTC    ( string $fontfile   , int $index   [, bool $embed = false  ] )
HaruDoc::loadTTF    ( string $fontfile   [, bool $embed = false  ] )
HaruDoc::loadType1    ( string $afmfile   [, string $pfmfile  ] )
HaruDoc::readFromStream    ( int $bytes   )
HaruDoc::save    ( string $file   )
HaruDoc::setCurrentEncoder    ( string $encoding   )
HaruDoc::setInfoAttr    ( int $type   , string $info   )
HaruDoc::setInfoDateAttr    ( int $type   , int $year   , int $month   , int $day   , int $hour   , int $min   , int $sec   , string $ind   , int $off_hour   , int $off_min   )
HaruDoc::setPassword    ( string $owner_password   , string $user_password   )
HaruEncoder::getByteType    ( string $text   , int $index   )
HaruFont::getEncodingName    ( void   )
HaruFont::getFontName    ( void   )
HaruFont::getTextWidth    ( string $text   )
HaruFont::measureText    ( string $text   , float $width   , float $font_size   , float $char_space   , float $word_space   [, bool $word_wrap = false  ] )
HaruImage::getColorSpace    ( void   )
HaruPage::createTextAnnotation    ( array $rectangle   , string $text   [, object $encoder  ] )
HaruPage::createURLAnnotation    ( array $rectangle   , string $url   )
HaruPage::measureText    ( string $text   , float $width   [, bool $wordwrap = false  ] )
HaruPage::showText    ( string $text   )
HaruPage::showTextNextLine    ( string $text   [, float $word_space = 0   [, float $char_space = 0  ]] )
HaruPage::textOut    ( float $x   , float $y   , string $text   )
HaruPage::textRect    ( float $left   , float $top   , float $right   , float $bottom   , string $text   [, int $align = HaruPage::TALIGN_LEFT  ] )
Imagick Imagick::fxImage    ( string $expression   [, int $channel = Imagick::CHANNEL_ALL  ] )
Imagick Imagick::montageImage    ( ImagickDraw $draw   , string $tile_geometry   , string $thumbnail_geometry   , int $mode   , string $frame   )
Imagick Imagick::readImages    ( string $filenames   )
Imagick Imagick::smushImages    ( string $stack   , string $offset   )
Imagick Imagick::transformImage    ( string $crop   , string $geometry   )
Imagick::__toString    ( void   )
Imagick::animateImages    ( string $x_server   )
Imagick::annotateImage    ( ImagickDraw $draw_settings   , float $x   , float $y   , float $angle   , string $text   )
Imagick::clipPathImage    ( string $pathname   , bool $inside   )
Imagick::commentImage    ( string $comment   )
Imagick::decipherImage    ( string $passphrase   )
Imagick::deleteImageArtifact    ( string $artifact   )
Imagick::displayImage    ( string $servername   )
Imagick::displayImages    ( string $servername   )
Imagick::encipherImage    ( string $passphrase   )
Imagick::getCopyright    ( void   )
Imagick::getFilename    ( void   )
Imagick::getFont    ( void   )
Imagick::getFormat    ( void   )
Imagick::getHomeURL    ( void   )
Imagick::getImageArtifact    ( string $artifact   )
Imagick::getImageBlob    ( void   )
Imagick::getImageFilename    ( void   )
Imagick::getImageFormat    ( void   )
Imagick::getImageMagickLicense    ( void   )
Imagick::getImageProfile    ( string $name   )
Imagick::getImageProfiles    ([ string $pattern = "*"   [, bool $only_names = true  ]] )
Imagick::getImageProperties    ([ string $pattern = "*"   [, bool $only_names = true  ]] )
Imagick::getImageProperty    ( string $name   )
Imagick::getImageSignature    ( void   )
Imagick::getImagesBlob    ( void   )
Imagick::getOption    ( string $key   )
Imagick::getPackageName    ( void   )
Imagick::getReleaseDate    ( void   )
Imagick::labelImage    ( string $label   )
Imagick::newImage    ( int $cols   , int $rows   , mixed $background   [, string $format  ] )
Imagick::newPseudoImage    ( int $columns   , int $rows   , string $pseudoString   )
Imagick::orderedPosterizeImage    ( string $threshold_map   [, int $channel = Imagick::CHANNEL_ALL  ] )
Imagick::pingImage    ( string $filename   )
Imagick::pingImageBlob    ( string $image   )
Imagick::pingImageFile    ( resource $filehandle   [, string $fileName  ] )
Imagick::profileImage    ( string $name   , string $profile   )
Imagick::queryFontMetrics    ( ImagickDraw $properties   , string $text   [, bool $multiline  ] )
Imagick::queryFonts    ([ string $pattern = "*"  ] )
Imagick::queryFormats    ([ string $pattern = "*"  ] )
Imagick::readImage    ( string $filename   )
Imagick::readImageBlob    ( string $image   [, string $filename  ] )
Imagick::readImageFile    ( resource $filehandle   [, string $fileName = null  ] )
Imagick::removeImageProfile    ( string $name   )
Imagick::resetImagePage    ( string $page   )
Imagick::setFilename    ( string $filename   )
Imagick::setFont    ( string $font   )
Imagick::setFormat    ( string $format   )
Imagick::setImageArtifact    ( string $artifact   , string $value   )
Imagick::setImageFilename    ( string $filename   )
Imagick::setImageFormat    ( string $format   )
Imagick::setImageProfile    ( string $name   , string $profile   )
Imagick::setImageProperty    ( string $name   , string $value   )
Imagick::setOption    ( string $key   , string $value   )
Imagick::writeImage    ([ string $filename = NULL  ] )
Imagick::writeImages    ( string $filename   , bool $adjoin   )
ImagickDraw::annotation    ( float $x   , float $y   , string $text   )
ImagickDraw::comment    ( string $comment   )
ImagickDraw::getClipPath    ( void   )
ImagickDraw::getFont    ( void   )
ImagickDraw::getFontFamily    ( void   )
ImagickDraw::getTextEncoding    ( void   )
ImagickDraw::getVectorGraphics    ( void   )
ImagickDraw::pushClipPath    ( string $clip_mask_id   )
ImagickDraw::pushPattern    ( string $pattern_id   , float $x   , float $y   , float $width   , float $height   )
ImagickDraw::setClipPath    ( string $clip_mask   )
ImagickDraw::setFillPatternURL    ( string $fill_url   )
ImagickDraw::setFont    ( string $font_name   )
ImagickDraw::setFontFamily    ( string $font_family   )
ImagickDraw::setStrokePatternURL    ( string $stroke_url   )
ImagickDraw::setTextEncoding    ( string $encoding   )
ImagickDraw::setVectorGraphics    ( string $xml   )
ImagickPixel::__construct    ([ string $color  ] )
ImagickPixel::getColorAsString    ( void   )
ImagickPixel::setColor    ( string $color   )
IntlRuleBasedBreakIterator::__construct    ( string $rules   [, string $areCompiled  ] )
Lua::__construct    ( string $lua_script_file = NULL   )
Memcache::add    ( string $key   , mixed $var   [, int $flag   [, int $expire  ]] )
Memcache::addServer    ( string $host   [, int $port = 11211   [, bool $persistent   [, int $weight   [, int $timeout   [, int $retry_interval   [, bool $status   [, callable $failure_callback   [, int $timeoutms  ]]]]]]]] )
Memcache::connect    ( string $host   [, int $port   [, int $timeout  ]] )
Memcache::decrement    ( string $key   [, int $value = 1  ] )
Memcache::delete    ( string $key   [, int $timeout = 0  ] )
Memcache::get    ( string $key   [, int &$flags  ] )
Memcache::getExtendedStats    ([ string $type   [, int $slabid   [, int $limit = 100  ]]] )
Memcache::getServerStatus    ( string $host   [, int $port = 11211  ] )
Memcache::getStats    ([ string $type   [, int $slabid   [, int $limit = 100  ]]] )
Memcache::getVersion    ( void   )
Memcache::increment    ( string $key   [, int $value = 1  ] )
Memcache::replace    ( string $key   , mixed $var   [, int $flag   [, int $expire  ]] )
Memcache::set    ( string $key   , mixed $var   [, int $flag   [, int $expire  ]] )
Memcache::setServerParams    ( string $host   [, int $port = 11211   [, int $timeout   [, int $retry_interval = false   [, bool $status   [, callable $failure_callback  ]]]]] )
MongoBinData::__construct    ( string $data   [, int $type = 0  ] )
MongoCode::__construct    ( string $code   [, array $scope = array()  ] )
MongoCollection MongoClient::selectCollection    ( string $db   , string $collection   )
MongoCollection MongoCollection::__get    ( string $name   )
MongoCollection MongoDB::__get    ( string $name   )
MongoCollection MongoDB::createCollection    ( string $name   [, array $options  ] )
MongoCollection MongoDB::selectCollection    ( string $name   )
MongoCollection::__construct    ( MongoDB $db   , string $name   )
MongoCommandCursor MongoCommandCursor::setReadPreference    ( string $read_preference   [, array $tags  ] )
MongoCommandCursor::__construct    ( MongoClient $connection   , string $ns   , array $command = array()   )
MongoCursor MongoCursor::addOption    ( string $key   , mixed $value   )
MongoCursor MongoCursor::setReadPreference    ( string $read_preference   [, array $tags  ] )
MongoCursor::__construct    ( MongoClient $connection   , string $ns   [, array $query = array()   [, array $fields = array()  ]] )
MongoDB MongoClient::__get    ( string $dbname   )
MongoDB MongoClient::selectDB    ( string $name   )
MongoDB::__construct    ( MongoClient $conn   , string $name   )
MongoDB\BSON\fromJSON    ( string $json   )
MongoDB\BSON\fromPHP    ( array|object $value   )
MongoDB\BSON\toJSON    ( string $bson   )
MongoGridFS MongoDB::getGridFS    ([ string $prefix = "fs"  ] )
MongoGridFS::__construct    ( MongoDB $db   [, string $prefix = "fs"   [, mixed $chunks = "fs"  ]] )
MongoGridFSCursor::__construct    ( MongoGridFS $gridfs   , resource $connection   , string $ns   , array $query   , array $fields   )
MongoInt32::__construct    ( string $value   )
MongoInt64::__construct    ( string $value   )
MongoRegex::__construct    ( string $regex   )
OAuth::__construct    ( string $consumer_key   , string $consumer_secret   [, string $signature_method = OAUTH_SIG_METHOD_HMACSHA1   [, int $auth_type = 0  ]] )
OCI-Collection oci_new_collection    ( resource $connection   , string $tdo   [, string $schema = NULL  ] )
OCI-Lob::export    ( string $filename   [, int $start   [, int $length  ]] )
OCI-Lob::import    ( string $filename   )
OCI-Lob::load    ( void   )
OCI-Lob::read    ( int $length   )
OCI-Lob::save    ( string $data   [, int $offset  ] )
OCI-Lob::write    ( string $data   [, int $length  ] )
OCI-Lob::writeTemporary    ( string $data   [, int $lob_type = OCI_TEMP_CLOB  ] )
PDF_add_launchlink    ( resource $pdfdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $filename   )
PDF_add_locallink    ( resource $pdfdoc   , float $lowerleftx   , float $lowerlefty   , float $upperrightx   , float $upperrighty   , int $page   , string $dest   )
PDF_add_nameddest    ( resource $pdfdoc   , string $name   , string $optlist   )
PDF_add_note    ( resource $pdfdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $contents   , string $title   , string $icon   , int $open   )
PDF_add_pdflink    ( resource $pdfdoc   , float $bottom_left_x   , float $bottom_left_y   , float $up_right_x   , float $up_right_y   , string $filename   , int $page   , string $dest   )
PDF_add_table_cell     ( resource $pdfdoc    , int $table    , int $column    , int $row    , string $text    , string $optlist    )
PDF_add_textflow    ( resource $pdfdoc   , int $textflow   , string $text   , string $optlist   )
PDF_add_weblink    ( resource $pdfdoc   , float $lowerleftx   , float $lowerlefty   , float $upperrightx   , float $upperrighty   , string $url   )
PDF_attach_file    ( resource $pdfdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $filename   , string $description   , string $author   , string $mimetype   , string $icon   )
PDF_begin_document    ( resource $pdfdoc   , string $filename   , string $optlist   )
PDF_begin_font    ( resource $pdfdoc   , string $filename   , float $a   , float $b   , float $c   , float $d   , float $e   , float $f   , string $optlist   )
PDF_begin_glyph    ( resource $pdfdoc   , string $glyphname   , float $wx   , float $llx   , float $lly   , float $urx   , float $ury   )
PDF_begin_item    ( resource $pdfdoc   , string $tag   , string $optlist   )
PDF_begin_page_ext    ( resource $pdfdoc   , float $width   , float $height   , string $optlist   )
PDF_begin_template_ext    ( resource $pdfdoc   , float $width   , float $height    , string $optlist   )
PDF_continue_text    ( resource $p   , string $text   )
PDF_create_3dview    ( resource $pdfdoc   , string $username   , string $optlist   )
PDF_create_action    ( resource $pdfdoc   , string $type   , string $optlist   )
PDF_create_annotation    ( resource $pdfdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $type   , string $optlist   )
PDF_create_bookmark    ( resource $pdfdoc   , string $text   , string $optlist   )
PDF_create_field    ( resource $pdfdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $name   , string $type   , string $optlist   )
PDF_create_fieldgroup    ( resource $pdfdoc   , string $name   , string $optlist   )
PDF_create_gstate    ( resource $pdfdoc   , string $optlist   )
PDF_create_pvf    ( resource $pdfdoc   , string $filename   , string $data   , string $optlist   )
PDF_create_textflow    ( resource $pdfdoc   , string $text   , string $optlist   )
PDF_define_layer    ( resource $pdfdoc   , string $name   , string $optlist   )
PDF_delete_pvf     ( resource $pdfdoc    , string $filename    )
PDF_delete_table     ( resource $pdfdoc    , int $table    , string $optlist    )
PDF_encoding_set_char     ( resource $pdfdoc    , string $encoding    , int $slot    , string $glyphname    , int $uv    )
PDF_end_document     ( resource $pdfdoc    , string $optlist    )
PDF_end_page_ext     ( resource $pdfdoc    , string $optlist    )
PDF_fill_imageblock     ( resource $pdfdoc    , int $page    , string $blockname    , int $image    , string $optlist    )
PDF_fill_pdfblock     ( resource $pdfdoc    , int $page    , string $blockname    , int $contents    , string $optlist    )
PDF_fill_textblock     ( resource $pdfdoc    , int $page    , string $blockname    , string $text    , string $optlist    )
PDF_findfont     ( resource $p    , string $fontname    , string $encoding    , int $embed    )
PDF_fit_image     ( resource $pdfdoc    , int $image    , float $x    , float $y    , string $optlist    )
PDF_fit_pdi_page     ( resource $pdfdoc    , int $page    , float $x    , float $y    , string $optlist    )
PDF_fit_table     ( resource $pdfdoc    , int $table    , float $llx    , float $lly    , float $urx    , float $ury    , string $optlist    )
PDF_fit_textflow     ( resource $pdfdoc    , int $textflow    , float $llx    , float $lly    , float $urx    , float $ury    , string $optlist    )
PDF_fit_textline     ( resource $pdfdoc    , string $text    , float $x    , float $y    , string $optlist    )
PDF_get_apiname     ( resource $pdfdoc    )
PDF_get_buffer     ( resource $p    )
PDF_get_errmsg     ( resource $pdfdoc    )
PDF_get_parameter     ( resource $p    , string $key    , float $modifier    )
PDF_get_pdi_parameter     ( resource $p    , string $key    , int $doc    , int $page    , int $reserved    )
PDF_load_3ddata     ( resource $pdfdoc    , string $filename    , string $optlist    )
PDF_load_font     ( resource $pdfdoc    , string $fontname    , string $encoding    , string $optlist    )
PDF_load_iccprofile     ( resource $pdfdoc    , string $profilename    , string $optlist    )
PDF_load_image     ( resource $pdfdoc    , string $imagetype    , string $filename    , string $optlist    )
PDF_makespotcolor     ( resource $p    , string $spotname    )
PDF_open_ccitt     ( resource $pdfdoc    , string $filename    , int $width    , int $height    , int $BitReverse    , int $k    , int $Blackls1    )
PDF_open_file     ( resource $p    , string $filename    )
PDF_open_image     ( resource $p    , string $imagetype    , string $source    , string $data    , int $length    , int $width    , int $height    , int $components    , int $bpc    , string $params    )
PDF_open_image_file     ( resource $p    , string $imagetype    , string $filename    , string $stringparam    , int $intparam    )
PDF_open_pdi     ( resource $pdfdoc    , string $filename    , string $optlist    , int $len    )
PDF_open_pdi_document    ( resource $p   , string $filename   , string $optlist   )
PDF_open_pdi_page        ( resource $p       , int $doc       , int $pagenumber       , string $optlist       )
PDF_pcos_get_stream     ( resource $p    , int $doc    , string $optlist    , string $path    )
PDF_pcos_get_string     ( resource $p    , int $doc    , string $path    )
PDF_process_pdi     ( resource $pdfdoc    , int $doc    , int $page    , string $optlist    )
PDF_resume_page     ( resource $pdfdoc    , string $optlist    )
PDF_set_border_style     ( resource $pdfdoc    , string $style    , float $width    )
PDF_set_info     ( resource $p    , string $key    , string $value    )
PDF_set_layer_dependency     ( resource $pdfdoc    , string $type    , string $optlist    )
PDF_set_parameter     ( resource $p    , string $key    , string $value    )
PDF_set_value     ( resource $p    , string $key    , float $value    )
PDF_setcolor     ( resource $p    , string $fstype    , string $colorspace    , float $c1    , float $c2    , float $c3    , float $c4    )
PDF_setdashpattern    ( resource $pdfdoc   , string $optlist   )
PDF_shading     ( resource $pdfdoc    , string $shtype    , float $x0    , float $y0    , float $x1    , float $y1    , float $c1    , float $c2    , float $c3    , float $c4    , string $optlist    )
PDF_shading_pattern     ( resource $pdfdoc    , int $shading    , string $optlist    )
PDF_show     ( resource $pdfdoc    , string $text    )
PDF_show_boxed     ( resource $p    , string $text    , float $left    , float $top    , float $width    , float $height    , string $mode    , string $feature    )
PDF_show_xy     ( resource $p    , string $text    , float $x    , float $y    )
PDF_suspend_page     ( resource $pdfdoc    , string $optlist    )
PDF_utf16_to_utf8     ( resource $pdfdoc    , string $utf16string    )
PDF_utf32_to_utf16     ( resource $pdfdoc    , string $utf32string    , string $ordering    )
PDF_utf8_to_utf16     ( resource $pdfdoc    , string $utf8string    , string $ordering    )
PDOStatement PDO::prepare    ( string $statement   [, array $driver_options = array()  ] )
PDOStatement PDO::query    ( string $statement   )
Phar Phar::convertToExecutable    ([ int $format = 9021976   [, int $compression = 9021976   [, string $extension  ]]] )
Phar PharData::convertToExecutable    ([ int $format   [, int $compression   [, string $extension  ]]] )
Phar::__construct    ( string $fname   [, int $flags   [, string $alias  ]] )
PharData Phar::convertToData    ([ int $format = 9021976   [, int $compression = 9021976   [, string $extension  ]]] )
PharData PharData::convertToData    ([ int $format   [, int $compression   [, string $extension  ]]] )
PharData::__construct    ( string $fname   [, int $flags   [, string $alias   [, int $format = Phar::TAR  ]]] )
PharData::addEmptyDir    ( string $dirname   )
PharData::addFromString    ( string $localname   , string $contents   )
PharData::buildFromIterator    ( Iterator $iter   [, string $base_directory  ] )
PharData::compress    ( int $compression   [, string $extension  ] )
PharData::copy    ( string $oldfile   , string $newfile   )
PharData::decompress    ([ string $extension  ] )
PharData::delete    ( string $entry   )
PharData::extractTo    ( string $pathto   [, string|array $files   [, bool $overwrite = false  ]] )
PharData::offsetUnset    ( string $offset   )
PharData::setAlias    ( string $alias   )
PharData::setDefaultStub    ([ string $index   [, string $webindex  ]] )
PharData::setStub    ( string $stub   [, int $len = -1  ] )
PharFileInfo::__construct    ( string $entry   )
Pool Pool::__construct    ( integer $size   , string $class   [, array $ctor  ] )
RRDCreator::__construct    ( string $path   [, string $startTime   [, int $step = 0  ]] )
RRDGraph::__construct    ( string $path   )
RRDUpdater::__construct    ( string $path   )
RarEntry RarArchive::getEntry    ( string $entryname    )
RecursiveCachingIterator::__construct    ( Iterator $iterator   [, string $flags = self::CALL_TOSTRING  ] )
RecursiveDirectoryIterator::__construct    ( string $path   [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO  ] )
ReflectionExtension::__construct    ( string $name   )
ReflectionMethod ReflectionClass::getMethod    ( string $name   )
ReflectionMethod::__construct    ( mixed $class   , string $name   )
ReflectionParameter::__construct    ( string $function   , string $parameter   )
ReflectionProperty ReflectionClass::getProperty    ( string $name   )
ReflectionProperty::__construct    ( mixed $class   , string $name   )
ReflectionZendExtension::__construct    ( string $name   )
ReturnType IntlBreakIterator::following    ( string $"offset"   )
ReturnType IntlBreakIterator::getLocale    ( string $"locale_type"   )
ReturnType IntlBreakIterator::getPartsIterator    ([ string $"key_type"  ] )
ReturnType IntlBreakIterator::isBoundary    ( string $"offset"   )
ReturnType IntlBreakIterator::next    ([ string $"offset"  ] )
ReturnType IntlBreakIterator::preceding    ( string $"offset"   )
ReturnType IntlBreakIterator::setText    ( string $"text"   )
ReturnType IntlCalendar::setLenient    ( string $isLenient   )
SAMConnection::connect    ( string $protocol   [, array $properties  ] )
SAMConnection::peekAll    ( string $target   [, array $properties  ] )
SAMConnection::send    ( string $target   , SAMMessage $msg   [, array $properties  ] )
SAMConnection::subscribe    ( string $targetTopic   )
SAMConnection::unsubscribe    ( string $subscriptionId   [, string $targetTopic  ] )
SAMMessage SAMConnection::peek    ( string $target   [, array $properties  ] )
SAMMessage SAMConnection::receive    ( string $target   [, array $properties  ] )
SAMMessage SAMConnection::remove    ( string $target   [, array $properties  ] )
SDODataObject SDO_DAS_Relational::executeQuery    (  PDO $database_handle    ,  string $SQL_statement    [,  array $column_specifier   ] )
SDO_DAS_Relational::__construct    (  array $database_metadata    [,  string $application_root_type    [,  array $SDO_containment_references_metadata   ]] )
SDO_DAS_Setting::getPropertyName    ( void   )
SDO_DAS_XML SDO_DAS_XML::create    ([ mixed $xsd_file   [, string $key  ]] )
SDO_DAS_XML::saveString    ( SDO_XMLDocument $xdoc   [, int $indent  ] )
SDO_DAS_XML_Document SDO_DAS_XML::createDocument    ([ string $document_element_name  ] )
SDO_DAS_XML_Document SDO_DAS_XML::loadString    ( string $xml_string   )
SDO_DAS_XML_Document::getRootElementName    ( void   )
SDO_DAS_XML_Document::getRootElementURI    ( void   )
SDO_DataObject SCA::createDataObject    (  string $type_namespace_uri    ,  string $type_name    )
SDO_DataObject SCA_LocalProxy::createDataObject    (  string $type_namespace_uri    ,  string $type_name    )
SDO_DataObject SCA_SoapProxy::createDataObject    (  string $type_namespace_uri    ,  string $type_name    )
SDO_DataObject SDO_DAS_XML::createDataObject    ( string $namespace_uri   , string $type_name   )
SDO_DataObject::getTypeName    ( void   )
SDO_DataObject::getTypeNamespaceURI    ( void   )
SDO_Model_Property::getName    ( void   )
SDO_Model_Type::getName    ( void   )
SDO_Model_Type::getNamespaceURI    ( void   )
SDO_XMLDocument SDO_DAS_XML::loadFile    ( string $xml_file   )
SQLite3::__construct    ( string $filename   [, int $flags   [, string $encryption_key  ]] )
SQLite3Result SQLite3::query    ( string $query   )
SQLite3Stmt SQLite3::prepare    ( string $query   )
SQLiteDatabase sqlite_factory    ( string $filename   [, int $mode = 0666   [, string &$error_message  ]] )
SVMModel::__construct    ([ string $filename  ] )
SWFAction::__construct    ( string $script   )
SWFFont::__construct    ( string $filename   )
SWFFont::getShape    ( int $code   )
SWFFontChar SWFMovie::importFont    ( string $libswf   , string $name   )
SWFMovie::save    ( string $filename   [, int $compression = -1  ] )
SWFSound::__construct    ( string $filename   [, int $flags = 0  ] )
SWFSprite SWFMovie::importChar    ( string $libswf   , string $name   )
SWFVideoStream::__construct    ([ string $file  ] )
SimpleXMLElement SimpleXMLElement::addChild    ( string $name   [, string $value   [, string $namespace  ]] )
SimpleXMLElement SimpleXMLElement::attributes    ([ string $ns = NULL   [, bool $is_prefix = false  ]] )
SimpleXMLElement SimpleXMLElement::children    ([ string $ns   [, bool $is_prefix = false  ]] )
SimpleXMLElement simplexml_import_dom    ( DOMNode $node   [, string $class_name = "SimpleXMLElement"  ] )
SimpleXMLElement simplexml_load_file    ( string $filename   [, string $class_name = "SimpleXMLElement"   [, int $options = 0   [, string $ns = ""   [, bool $is_prefix = false  ]]]] )
SimpleXMLElement simplexml_load_string    ( string $data   [, string $class_name = "SimpleXMLElement"   [, int $options = 0   [, string $ns = ""   [, bool $is_prefix = false  ]]]] )
SoapFault::SoapFault    ( string $faultcode   , string $faultstring   [, string $faultactor   [, string $detail   [, string $faultname   [, string $headerfault  ]]]] )
SoapFault::__construct    ( string $faultcode   , string $faultstring   [, string $faultactor   [, string $detail   [, string $faultname   [, string $headerfault  ]]]] )
SoapHeader::SoapHeader    ( string $namespace   , string $name   [, mixed $data   [, bool $mustunderstand = false   [, string $actor  ]]] )
SoapHeader::__construct    ( string $namespace   , string $name   [, mixed $data   [, bool $mustunderstand   [, string $actor  ]]] )
SoapParam::SoapParam    ( mixed $data   , string $name   )
SoapParam::__construct    ( mixed $data   , string $name   )
SoapVar::SoapVar    ( mixed $data   , string $encoding   [, string $type_name   [, string $type_namespace   [, string $node_name   [, string $node_namespace  ]]]] )
SoapVar::__construct    ( string $data   , string $encoding   [, string $type_name   [, string $type_namespace   [, string $node_name   [, string $node_namespace  ]]]] )
SolrDisMaxQuery SolrDisMaxQuery::addBigramPhraseField    ( string $field   , string $boost   [, string $slop  ] )
SolrDisMaxQuery SolrDisMaxQuery::addBoostQuery    ( string $field   , string $value   [, string $boost  ] )
SolrDisMaxQuery SolrDisMaxQuery::addPhraseField    ( string $field   , string $boost   [, string $slop  ] )
SolrDisMaxQuery SolrDisMaxQuery::addQueryField    ( string $field   [, string $boost  ] )
SolrDisMaxQuery SolrDisMaxQuery::addTrigramPhraseField    ( string $field   , string $boost   [, string $slop  ] )
SolrDisMaxQuery SolrDisMaxQuery::addUserField    ( string $field   )
SolrDisMaxQuery SolrDisMaxQuery::removeBigramPhraseField    ( string $field   )
SolrDisMaxQuery SolrDisMaxQuery::removeBoostQuery    ( string $field   )
SolrDisMaxQuery SolrDisMaxQuery::removePhraseField    ( string $field   )
SolrDisMaxQuery SolrDisMaxQuery::removeQueryField    ( string $field   )
SolrDisMaxQuery SolrDisMaxQuery::removeTrigramPhraseField    ( string $field   )
SolrDisMaxQuery SolrDisMaxQuery::removeUserField    ( string $field   )
SolrDisMaxQuery SolrDisMaxQuery::setBigramPhraseFields    ( string $fields   )
SolrDisMaxQuery SolrDisMaxQuery::setBigramPhraseSlop    ( string $slop   )
SolrDisMaxQuery SolrDisMaxQuery::setBoostFunction    ( string $function   )
SolrDisMaxQuery SolrDisMaxQuery::setBoostQuery    ( string $q   )
SolrDisMaxQuery SolrDisMaxQuery::setMinimumMatch    ( string $value   )
SolrDisMaxQuery SolrDisMaxQuery::setPhraseFields    ( string $fields   )
SolrDisMaxQuery SolrDisMaxQuery::setPhraseSlop    ( string $slop   )
SolrDisMaxQuery SolrDisMaxQuery::setQueryAlt    ( string $q   )
SolrDisMaxQuery SolrDisMaxQuery::setQueryPhraseSlop    ( string $slop   )
SolrDisMaxQuery SolrDisMaxQuery::setTieBreaker    ( string $tieBreaker   )
SolrDisMaxQuery SolrDisMaxQuery::setTrigramPhraseFields    ( string $fields   )
SolrDisMaxQuery SolrDisMaxQuery::setTrigramPhraseSlop    ( string $slop   )
SolrDisMaxQuery SolrDisMaxQuery::setUserFields    ( string $fields   )
SolrDisMaxQuery::__construct    ([ string $q  ] )
SolrDocumentField SolrDocument::__get    ( string $fieldName   )
SolrDocumentField SolrDocument::getField    ( string $fieldName   )
SolrDocumentField SolrDocument::offsetGet    ( string $fieldName   )
SolrDocumentField SolrInputDocument::getField    ( string $fieldName   )
SolrParams SolrParams::addParam    ( string $name   , string $value   )
SolrParams SolrParams::setParam    ( string $name   , string $value   )
SolrQuery SolrQuery::addExpandFilterQuery    ( string $fq   )
SolrQuery SolrQuery::addExpandSortField    ( string $field   [, string $order  ] )
SolrQuery SolrQuery::addFacetDateField    ( string $dateField   )
SolrQuery SolrQuery::addFacetDateOther    ( string $value   [, string $field_override  ] )
SolrQuery SolrQuery::addFacetField    ( string $field   )
SolrQuery SolrQuery::addFacetQuery    ( string $facetQuery   )
SolrQuery SolrQuery::addField    ( string $field   )
SolrQuery SolrQuery::addFilterQuery    ( string $fq   )
SolrQuery SolrQuery::addGroupField    ( string $value   )
SolrQuery SolrQuery::addGroupFunction    ( string $value   )
SolrQuery SolrQuery::addGroupQuery    ( string $value   )
SolrQuery SolrQuery::addGroupSortField    ( string $field   [, integer $order  ] )
SolrQuery SolrQuery::addHighlightField    ( string $field   )
SolrQuery SolrQuery::addMltField    ( string $field   )
SolrQuery SolrQuery::addMltQueryField    ( string $field   , float $boost   )
SolrQuery SolrQuery::addSortField    ( string $field   [, int $order = SolrQuery::ORDER_DESC  ] )
SolrQuery SolrQuery::addStatsFacet    ( string $field   )
SolrQuery SolrQuery::addStatsField    ( string $field   )
SolrQuery SolrQuery::removeExpandFilterQuery    ( string $fq   )
SolrQuery SolrQuery::removeExpandSortField    ( string $field   )
SolrQuery SolrQuery::removeFacetDateField    ( string $field   )
SolrQuery SolrQuery::removeFacetDateOther    ( string $value   [, string $field_override  ] )
SolrQuery SolrQuery::removeFacetField    ( string $field   )
SolrQuery SolrQuery::removeFacetQuery    ( string $value   )
SolrQuery SolrQuery::removeField    ( string $field   )
SolrQuery SolrQuery::removeFilterQuery    ( string $fq   )
SolrQuery SolrQuery::removeHighlightField    ( string $field   )
SolrQuery SolrQuery::removeMltField    ( string $field   )
SolrQuery SolrQuery::removeMltQueryField    ( string $queryField   )
SolrQuery SolrQuery::removeSortField    ( string $field   )
SolrQuery SolrQuery::removeStatsFacet    ( string $value   )
SolrQuery SolrQuery::removeStatsField    ( string $field   )
SolrQuery SolrQuery::setEchoParams    ( string $type   )
SolrQuery SolrQuery::setExpandQuery    ( string $q   )
SolrQuery SolrQuery::setExplainOther    ( string $query   )
SolrQuery SolrQuery::setFacetDateEnd    ( string $value   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetDateGap    ( string $value   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetDateHardEnd    ( bool $value   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetDateStart    ( string $value   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetEnumCacheMinDefaultFrequency    ( int $frequency   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetLimit    ( int $limit   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetMethod    ( string $method   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetMinCount    ( int $mincount   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetMissing    ( bool $flag   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetOffset    ( int $offset   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetPrefix    ( string $prefix   [, string $field_override  ] )
SolrQuery SolrQuery::setFacetSort    ( int $facetSort   [, string $field_override  ] )
SolrQuery SolrQuery::setGroupFormat    ( string $value   )
SolrQuery SolrQuery::setGroupMain    ( string $value   )
SolrQuery SolrQuery::setHighlightAlternateField    ( string $field   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightFormatter    ( string $formatter   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightFragmenter    ( string $fragmenter   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightFragsize    ( int $size   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightMaxAlternateFieldLength    ( int $fieldLength   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightMergeContiguous    ( bool $flag   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightRegexPattern    ( string $value   )
SolrQuery SolrQuery::setHighlightSimplePost    ( string $simplePost   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightSimplePre    ( string $simplePre   [, string $field_override  ] )
SolrQuery SolrQuery::setHighlightSnippets    ( int $value   [, string $field_override  ] )
SolrQuery SolrQuery::setQuery    ( string $query   )
SolrQuery SolrQuery::setTermsField    ( string $fieldname   )
SolrQuery SolrQuery::setTermsLowerBound    ( string $lowerBound   )
SolrQuery SolrQuery::setTermsPrefix    ( string $prefix   )
SolrQuery SolrQuery::setTermsUpperBound    ( string $upperBound   )
SolrQuery::__construct    ([ string $q  ] )
SolrQueryResponse SolrClient::getById    ( string $id   )
SolrUpdateResponse SolrClient::deleteById    ( string $id   )
SolrUpdateResponse SolrClient::deleteByQuery    ( string $query   )
SolrUpdateResponse SolrClient::request    ( string $raw_request   )
SplFileInfo SplFileInfo::getFileInfo    ([ string $class_name  ] )
SplFileInfo SplFileInfo::getPathInfo    ([ string $class_name  ] )
SplFileInfo::__construct    ( string $file_name   )
SplFileObject SplFileInfo::openFile    ([ string $open_mode = "r"   [, bool $use_include_path = false   [, resource $context = NULL  ]]] )
SplFileObject::__construct    ( string $filename   [, string $open_mode = "r"   [, bool $use_include_path = false   [, resource $context  ]]] )
Stomp::__construct     ([ string $broker = ini_get("stomp.default_broker_uri")    [, string $username    [, string $password    [, array $headers   ]]]] )
StompFrame::__construct    ([ string $command   [, array $headers   [, string $body  ]]] )
Swish::getMetaList    ( string $index_name   )
Swish::getPropertyList    ( string $index_name   )
Swish::prepare    ([ string $query  ] )
Swish::query    ( string $query   )
SwishResult::stem    ( string $word   )
SwishResults::getParsedWords    ( string $index_name   )
SwishResults::getRemovedStopwords    ( string $index_name   )
SwishSearch::execute    ([ string $query  ] )
SyncEvent::__construct    ([ string $name   [, bool $manual  ]] )
SyncMutex::__construct    ([ string $name  ] )
SyncReaderWriter::__construct    ([ string $name   [, bool $autounlock  ]] )
SyncSemaphore::__construct    ([ string $name   [, integer $initialval   [, bool $autounlock  ]]] )
TokyoTyrant TokyoTyrant::connect    ( string $host   [, int $port = TokyoTyrant::RDBDEF_PORT   [, array $options  ]] )
TokyoTyrant TokyoTyrant::connectUri    ( string $uri   )
TokyoTyrant TokyoTyrant::copy    ( string $path   )
TokyoTyrant TokyoTyrant::put    ( mixed $keys   [, string $value = NULL  ] )
TokyoTyrant TokyoTyrant::putCat    ( mixed $keys   [, string $value  ] )
TokyoTyrant TokyoTyrant::putKeep    ( mixed $keys   [, string $value  ] )
TokyoTyrant TokyoTyrant::putNr    ( mixed $keys   [, string $value = NULL  ] )
TokyoTyrant::__construct    ([ string $host   [, int $port = TokyoTyrant::RDBDEF_PORT   [, array $options  ]]] )
UConverter::__construct    ([ string $destination_encoding   [, string $source_encoding  ]] )
V8Js::__construct    ([ string $object_name = "PHP"   [, array $variables = array()   [, array $extensions = array()   [, bool $report_uncaught_exceptions = TRUE  ]]]] )
XMLDiff\Base::__construct    ( string $nsname   )
XMLWriter::openURI    ( string $uri   )
XMLWriter::outputMemory    ([ bool $flush = true  ] )
XMLWriter::setIndentString    ( string $indentString   )
XMLWriter::startAttribute    ( string $name   )
XMLWriter::startAttributeNS    ( string $prefix   , string $name   , string $uri   )
XMLWriter::startDTD    ( string $qualifiedName   [, string $publicId   [, string $systemId  ]] )
XMLWriter::startDTDAttlist    ( string $name   )
XMLWriter::startDTDElement    ( string $qualifiedName   )
XMLWriter::startDTDEntity    ( string $name   , bool $isparam   )
XMLWriter::startDocument    ([ string $version = 1.0   [, string $encoding = NULL   [, string $standalone  ]]] )
XMLWriter::startElement    ( string $name   )
XMLWriter::startElementNS    ( string $prefix   , string $name   , string $uri   )
XMLWriter::startPI    ( string $target   )
XMLWriter::text    ( string $content   )
XMLWriter::writeAttribute    ( string $name   , string $value   )
XMLWriter::writeAttributeNS    ( string $prefix   , string $name   , string $uri   , string $content   )
XMLWriter::writeCData    ( string $content   )
XMLWriter::writeComment    ( string $content   )
XMLWriter::writeDTD    ( string $name   [, string $publicId   [, string $systemId   [, string $subset  ]]] )
XMLWriter::writeDTDAttlist    ( string $name   , string $content   )
XMLWriter::writeDTDElement    ( string $name   , string $content   )
XMLWriter::writeDTDEntity    ( string $name   , string $content   , bool $pe   , string $pubid   , string $sysid   , string $ndataid   )
XMLWriter::writeElement    ( string $name   [, string $content  ] )
XMLWriter::writeElementNS    ( string $prefix   , string $name   , string $uri   [, string $content  ] )
XMLWriter::writePI    ( string $target   , string $content   )
XMLWriter::writeRaw    ( string $content   )
XSLTProcessor::getParameter    ( string $namespaceURI   , string $localName   )
XSLTProcessor::removeParameter    ( string $namespaceURI   , string $localName   )
XSLTProcessor::setParameter    ( string $namespace   , string $name   , string $value   )
XSLTProcessor::setProfiling    ( string $filename   )
XSLTProcessor::transformToURI    ( DOMDocument $doc   , string $uri   )
XSLTProcessor::transformToXML    ( object $doc   )
Yaf_Application Yaf_Application::setAppDirectory    ( string $directory   )
Yaf_Application::__construct    ( mixed $config   [, string $envrion  ] )
Yaf_Config_Ini::__construct    ( string $config_file   [, string $section  ] )
Yaf_Config_Simple::__construct    ( string $config_file   [, string $section  ] )
Yaf_Dispatcher Yaf_Dispatcher::setDefaultAction    ( string $action   )
Yaf_Dispatcher Yaf_Dispatcher::setDefaultController    ( string $controller   )
Yaf_Dispatcher Yaf_Dispatcher::setDefaultModule    ( string $module   )
Yaf_Loader Yaf_Loader::setLibraryPath    ( string $directory   [, bool $is_global = false  ] )
Yaf_Request_Http::__construct    ([ string $request_uri   [, string $base_uri  ]] )
Yaf_Request_Simple::__construct    ([ string $method   [, string $module   [, string $controller   [, string $action   [, array $params  ]]]]] )
Yaf_Route_Interface Yaf_Router::getRoute    ( string $name   )
Yaf_Route_Map::__construct    ([ string $controller_prefer = false   [, string $delimiter = ""  ]] )
Yaf_Route_Regex::__construct    ( string $match   , array $route   [, array $map   [, array $verify   [, string $reverse  ]]] )
Yaf_Route_Rewrite::__construct    ( string $match   , array $route   [, array $verify  ] )
Yaf_Route_Simple::__construct    ( string $module_name   , string $controller_name   , string $action_name   )
Yaf_Route_Supervar::__construct    ( string $supervar_name   )
Yaf_View_Interface Yaf_Dispatcher::initView    ( string $templates_dir   [, array $options  ] )
ZMQSocket ZMQContext::getSocket    ( integer $type   [, string $persistent_id = null   [, callback $on_new_socket = null  ]] )
ZMQSocket ZMQSocket::bind    ( string $dsn   [, boolean $force = false  ] )
ZMQSocket ZMQSocket::connect    ( string $dsn   [, boolean $force = false  ] )
ZMQSocket ZMQSocket::disconnect    ( string $dsn   )
ZMQSocket ZMQSocket::send    ( string $message   [, integer $mode = 0  ] )
ZMQSocket ZMQSocket::unbind    ( string $dsn   )
ZMQSocket::__construct    ( ZMQContext $context   , int $type   [, string $persistent_id = null   [, callback $on_new_socket = null  ]] )
ZipArchive::addEmptyDir    ( string $dirname   )
ZipArchive::addFile    ( string $filename   [, string $localname = NULL   [, int $start = 0   [, int $length = 0  ]]] )
ZipArchive::addFromString    ( string $localname   , string $contents   )
ZipArchive::addGlob    ( string $pattern   [, int $flags = 0   [, array $options = array()  ]] )
ZipArchive::addPattern    ( string $pattern   [, string $path = "."   [, array $options = array()  ]] )
ZipArchive::deleteName    ( string $name   )
ZipArchive::extractTo    ( string $destination   [, mixed $entries  ] )
ZipArchive::getArchiveComment    ([ int $flags  ] )
ZipArchive::getCommentIndex    ( int $index   [, int $flags  ] )
ZipArchive::getCommentName    ( string $name   [, int $flags  ] )
ZipArchive::getExternalAttributesName    ( string $name   , int &$opsys   , int &$attr   [, int $flags  ] )
ZipArchive::getFromIndex    ( int $index   [, int $length = 0   [, int $flags  ]] )
ZipArchive::getFromName    ( string $name   [, int $length = 0   [, int $flags  ]] )
ZipArchive::getNameIndex    ( int $index   [, int $flags  ] )
ZipArchive::getStatusString    ( void   )
ZipArchive::locateName    ( string $name   [, int $flags  ] )
ZipArchive::renameIndex    ( int $index   , string $newname   )
ZipArchive::renameName    ( string $name   , string $newname   )
ZipArchive::setArchiveComment    ( string $comment   )
ZipArchive::setCommentIndex    ( int $index   , string $comment   )
ZipArchive::setCommentName    ( string $name   , string $comment   )
ZipArchive::setCompressionName    ( string $name   , int $comp_method   [, int $comp_flags = 0  ] )
ZipArchive::setExternalAttributesName    ( string $name   , int $opsys   , int $attr   [, int $flags  ] )
ZipArchive::statName    ( string $name   [, int $flags  ] )
ZipArchive::unchangeName    ( string $name   )
abstract public MongoCursorInterface MongoCursorInterface::setReadPreference    ( string $read_preference   [, array $tags  ] )
abstract public bool SessionHandlerInterface::destroy    ( string $session_id   )
abstract public bool SessionHandlerInterface::gc    ( string $maxlifetime   )
abstract public bool SessionHandlerInterface::open    ( string $save_path   , string $name   )
abstract public bool SessionHandlerInterface::write    ( string $session_id   , string $session_data   )
abstract public bool Yaf_View_Interface::assign    ( string $name   [, string $value  ] )
abstract public bool Yaf_View_Interface::display    ( string $tpl   [, array $tpl_vars  ] )
abstract public mixed Yaf_Config_Abstract::get    ( string $name   , mixed $value   )
abstract public string Serializable::serialize    ( void   )
abstract public string SessionHandlerInterface::read    ( string $session_id   )
abstract public string Yaf_Route_Interface::assemble    ( array $info   [, array $query  ] )
abstract public string Yaf_View_Interface::render    ( string $tpl   [, array $tpl_vars  ] )
abstract public void Serializable::unserialize    ( string $serialized   )
abstract public void Yaf_View_Interface::setScriptPath    ( string $template_dir   )
addcslashes    ( string $str   , string $charlist   )
addslashes    ( string $str   )
apache_get_version    ( void   )
apache_getenv    ( string $variable   [, bool $walk_to_top = false  ] )
apache_lookup_uri    ( string $filename   )
apache_note    ( string $note_name   [, string $note_value = ""  ] )
apache_setenv    ( string $variable   , string $value   [, bool $walk_to_top = false  ] )
apc_add    ( string $key   , mixed $var   [, int $ttl = 0  ] )
apc_bin_dump    ([ array $files = NULL   [, array $user_vars = NULL  ]] )
apc_bin_dumpfile    ( array $files   , array $user_vars   , string $filename   [, int $flags = 0   [, resource $context = NULL  ]] )
apc_bin_load    ( string $data   [, int $flags = 0  ] )
apc_bin_loadfile    ( string $filename   [, resource $context = NULL   [, int $flags = 0  ]] )
apc_cache_info    ([ string $cache_type = ""   [, bool $limited = false  ]] )
apc_cas    ( string $key   , int $old   , int $new   )
apc_clear_cache    ([ string $cache_type = ""  ] )
apc_dec    ( string $key   [, int $step = 1   [, bool &$success  ]] )
apc_define_constants    ( string $key   , array $constants   [, bool $case_sensitive = true  ] )
apc_inc    ( string $key   [, int $step = 1   [, bool &$success  ]] )
apc_load_constants    ( string $key   [, bool $case_sensitive = true  ] )
apc_store    ( string $key   , mixed $var   [, int $ttl = 0  ] )
apcu_add    ( string $key   , mixed $var   [, int $ttl = 0  ] )
apcu_cas    ( string $key   , int $old   , int $new   )
apcu_dec    ( string $key   [, int $step = 1   [, bool &$success  ]] )
apcu_inc    ( string $key   [, int $step = 1   [, bool &$success  ]] )
apcu_store    ( string $key   , mixed $var   [, int $ttl = 0  ] )
apd_echo    ( string $output   )
apd_set_pprof_trace    ([ string $dump_directory = ini_get("apd.dumpdir")   [, string $fragment = "pprof"  ]] )
apd_set_session_trace_socket    ( string $tcp_server   , int $socket_type   , int $port   , int $debug_level   )
assert    ( mixed $assertion   [, string $description  ] )
base64_decode    ( string $data   [, bool $strict = false  ] )
base64_encode    ( string $data   )
base_convert     ( string $number    , int $frombase    , int $tobase    )
basename    ( string $path   [, string $suffix  ] )
bbcode_add_element    ( resource $bbcode_container   , string $tag_name   , array $tag_rules   )
bbcode_add_smiley    ( resource $bbcode_container   , string $smiley   , string $replace_by   )
bbcode_parse    ( resource $bbcode_container   , string $to_parse   )
bcadd    ( string $left_operand   , string $right_operand   [, int $scale  ] )
bccomp    ( string $left_operand   , string $right_operand   [, int $scale = int  ] )
bcdiv    ( string $left_operand   , string $right_operand   [, int $scale = int  ] )
bcmod    ( string $left_operand   , string $modulus   )
bcmul    ( string $left_operand   , string $right_operand   [, int $scale = int  ] )
bcompiler_load    ( string $filename   )
bcompiler_load_exe    ( string $filename   )
bcompiler_parse_class    ( string $class   , string $callback   )
bcompiler_write_class    ( resource $filehandle   , string $className   [, string $extends  ] )
bcompiler_write_constant    ( resource $filehandle   , string $constantName   )
bcompiler_write_file    ( resource $filehandle   , string $filename   )
bcompiler_write_function    ( resource $filehandle   , string $functionName   )
bcompiler_write_functions_from_file    ( resource $filehandle   , string $fileName   )
bcompiler_write_header    ( resource $filehandle   [, string $write_ver  ] )
bcompiler_write_included_filename    ( resource $filehandle   , string $filename   )
bcpow    ( string $left_operand   , string $right_operand   [, int $scale  ] )
bcpowmod    ( string $left_operand   , string $right_operand   , string $modulus   [, int $scale = int  ] )
bcsqrt    ( string $operand   [, int $scale  ] )
bcsub    ( string $left_operand   , string $right_operand   [, int $scale = int  ] )
bin2hex    ( string $str   )
bind_textdomain_codeset    ( string $domain   , string $codeset   )
bindtextdomain    ( string $domain   , string $directory   )
blenc_encrypt    ( string $plaintext   , string $encodedfile   [, string $encryption_key  ] )
bson_decode    ( string $bson   )
bson_encode    ( mixed $anything   )
bzerrstr    ( resource $bz   )
bzread    ( resource $bz   [, int $length = 1024  ] )
bzwrite    ( resource $bz   , string $data   [, int $length  ] )
cairo_image_surface_get_data    ( CairoImageSurface $surface   )
cairo_pattern_get_extend    ( string $pattern   )
cairo_ps_level_to_string    ( int $level   )
cairo_scaled_font_text_extents    ( CairoScaledFont $scaledfont   , string $text   )
cairo_svg_version_to_string    ( int $version   )
calcul_hmac    ( string $clent   , string $siretcode   , string $price   , string $reference   , string $validity   , string $taxation   , string $devise   , string $language   )
calculhmac    ( string $clent   , string $data   )
chdb::__construct    ( string $pathname   )
chdb_create    ( string $pathname   , array $data   )
chdir    ( string $directory   )
checkdnsrr    ( string $host   [, string $type = "MX"  ] )
chgrp    ( string $filename   , mixed $group   )
chmod    ( string $filename   , int $mode   )
chown    ( string $filename   , mixed $user   )
chr    ( int $ascii   )
chroot    ( string $directory   )
chunk_split    ( string $body   [, int $chunklen = 76   [, string $end = "\r\n"  ]] )
class_alias    ( string $original   , string $alias   [, bool $autoload = TRUE  ] )
class_exists    ( string $class_name   [, bool $autoload = true  ] )
classkit_import    ( string $filename   )
classkit_method_add    ( string $classname   , string $methodname   , string $args   , string $code   [, int $flags = CLASSKIT_ACC_PUBLIC  ] )
classkit_method_copy    ( string $dClass   , string $dMethod   , string $sClass   [, string $sMethod  ] )
classkit_method_redefine    ( string $classname   , string $methodname   , string $args   , string $code[, int $flags = CLASSKIT_ACC_PUBLIC  ] )
classkit_method_remove    ( string $classname   , string $methodname   )
classkit_method_rename    ( string $classname   , string $methodname   , string $newname   )
cli_get_process_title    ( void   )
cli_set_process_title    ( string $title   )
com_create_guid    ( void   )
com_load_typelib    ( string $typelib_name   [, bool $case_insensitive = true  ] )
com_print_typeinfo    ( object $comobject   [, string $dispinterface   [, bool $wantsink = false  ]] )
convert_cyr_string    ( string $str   , string $from   , string $to   )
convert_uudecode    ( string $data   )
convert_uuencode    ( string $data   )
copy    ( string $source   , string $dest   [, resource $context  ] )
crack_check    ( resource $dictionary   , string $password   )
crack_getlastmessage    ( void   )
crc32    ( string $str   )
create_function    ( string $args   , string $code   )
crypt    ( string $str   [, string $salt  ] )
ctype_alnum    ( string $text   )
ctype_alpha    ( string $text   )
ctype_cntrl    ( string $text   )
ctype_digit    ( string $text   )
ctype_graph    ( string $text   )
ctype_lower    ( string $text   )
ctype_print    ( string $text   )
ctype_punct    ( string $text   )
ctype_space    ( string $text   )
ctype_upper    ( string $text   )
ctype_xdigit    ( string $text   )
cubrid_bind    ( resource $req_identifier   , int $bind_index   , mixed $bind_value   [, string $bind_value_type  ] )
cubrid_client_encoding    ([ resource $conn_identifier    ] )
cubrid_col_get    ( resource $conn_identifier   , string $oid   , string $attr_name   )
cubrid_col_size        ( resource $conn_identifier       , string $oid       , string $attr_name   )
cubrid_current_oid    ( resource $req_identifier   )
cubrid_db_name    ( array $result   , int $index   )
cubrid_drop    ( resource $conn_identifier     , string $oid     )
cubrid_error    ([ resource $connection  ] )
cubrid_error_msg    ( void   )
cubrid_fetch_object    ( resource $result   [, string $class_name   [, array $params   [, int $type  ]]] )
cubrid_field_flags    ( resource $result   , int $field_offset   )
cubrid_field_name    ( resource $result   , int $field_offset   )
cubrid_field_table    ( resource $result   , int $field_offset   )
cubrid_field_type     ( resource $result   , int $field_offset   )
cubrid_get_charset    ( resource $conn_identifier     )
cubrid_get_class_name    ( resource $conn_identifier     , string $oid     )
cubrid_get_client_info    ( void   )
cubrid_get_server_info    ( resource $conn_identifier     )
cubrid_insert_id    ([ resource $conn_identifier  ] )
cubrid_is_instance    ( resource $conn_identifier     , string $oid     )
cubrid_load_from_glo    ( resource $conn_identifier     , string $oid     , string $file_name     )
cubrid_lob2_bind    ( resource $req_identifier   , int $bind_index   , mixed $bind_value   [, string $bind_value_type  ] )
cubrid_lob2_export    ( resource $lob_identifier   , string $file_name   )
cubrid_lob2_import    ( resource $lob_identifier   , string $file_name   )
cubrid_lob2_read    ( resource $lob_identifier   , int $len   )
cubrid_lob2_seek64    ( resource $lob_identifier   , string $offset   [, int $origin = CUBRID_CURSOR_CURRENT  ] )
cubrid_lob2_size64    ( resource $lob_identifier   )
cubrid_lob2_tell64    ( resource $lob_identifier   )
cubrid_lob2_write    ( resource $lob_identifier   , string $buf   )
cubrid_lob_export    ( resource $conn_identifier     , resource $lob_identifier     , string $path_name     )
cubrid_lob_get    ( resource $conn_identifier     , string $sql     )
cubrid_lob_size    ( resource $lob_identifier     )
cubrid_lock_read    ( resource $conn_identifier     , string $oid     )
cubrid_lock_write    ( resource $conn_identifier     , string $oid     )
cubrid_new_glo    ( resource $conn_identifier     , string $class_name     , string $file_name     )
cubrid_put    ( resource $conn_identifier     , string $oid     [, string $attr    ], mixed $value     )
cubrid_real_escape_string    ( string $unescaped_string   [, resource $conn_identifier  ] )
cubrid_result    ( resource $result   , int $row   [, mixed $field = 0  ] )
cubrid_save_to_glo    ( resource $conn_identifier     , string $oid     , string $file_name     )
cubrid_schema    ( resource $conn_identifier     , int $schema_type     [, string $class_name    [, string $attr_name    ]] )
cubrid_send_glo    ( resource $conn_identifier     , string $oid     )
cubrid_seq_drop    ( resource $conn_identifier     , string $oid     , string $attr_name     , int $index     )
cubrid_seq_insert    ( resource $conn_identifier     , string $oid     , string $attr_name     , int $index     , string $seq_element     )
cubrid_seq_put    ( resource $conn_identifier     , string $oid     , string $attr_name     , int $index     , string $seq_element     )
cubrid_set_add    ( resource $conn_identifier     , string $oid     , string $attr_name     , string $set_element    )
cubrid_set_drop    ( resource $conn_identifier     , string $oid     , string $attr_name     , string $set_element    )
cubrid_version    ( void   )
curl_error    ( resource $ch   )
curl_escape    ( resource $ch   , string $str   )
curl_multi_getcontent    ( resource $ch   )
curl_multi_strerror    ( int $errornum   )
curl_share_setopt    ( resource $sh   , int $option   , string $value   )
curl_strerror    ( int $errornum   )
curl_unescape    ( resource $ch   , string $str   )
cyrus_query    ( resource $connection   , string $query   )
cyrus_unbind    ( resource $connection   , string $trigger_name   )
date    ( string $format   [, int $timestamp = time()  ] )
date_default_timezone_get    ( void   )
date_default_timezone_set    ( string $timezone_identifier   )
date_parse    ( string $date   )
date_parse_from_format    ( string $format   , string $date   )
db2_bind_param    ( resource $stmt   , int $parameter-number   , string $variable-name   [, int $parameter-type   [, int $data-type = 0   [, int $precision = -1   [, int $scale = 0  ]]]] )
db2_conn_error    ([ resource $connection  ] )
db2_conn_errormsg    ([ resource $connection  ] )
db2_escape_string    ( string $string_literal   )
db2_field_name    ( resource $stmt   , mixed $column   )
db2_field_type    ( resource $stmt   , mixed $column   )
db2_get_option    ( resource $resource         , string $option   )
db2_last_insert_id    ( resource $resource         )
db2_lob_read    ( resource $stmt   , int $colnum   , int $length   )
db2_stmt_error    ([ resource $stmt  ] )
db2_stmt_errormsg    ([ resource $stmt  ] )
dba_delete    ( string $key   , resource $handle   )
dba_exists    ( string $key   , resource $handle   )
dba_fetch    ( string $key   , resource $handle   )
dba_firstkey    ( resource $handle   )
dba_insert    ( string $key   , string $value   , resource $handle   )
dba_nextkey    ( resource $handle   )
dba_replace    ( string $key   , string $value   , resource $handle   )
dbase_create    ( string $filename   , array $fields   )
dbase_open    ( string $filename   , int $mode   )
dbplus_chdir    ([ string $newdir  ] )
dbplus_errcode    ([ int $errno  ] )
dbplus_freelock    ( resource $relation   , string $tuple   )
dbplus_getlock    ( resource $relation   , string $tuple   )
dbplus_info    ( resource $relation   , string $key   , array &$result   )
dbplus_rchperm    ( resource $relation   , int $mask   , string $user   , string $group   )
dbplus_resolve    ( string $relation_name   )
dbplus_rrename    ( resource $relation   , string $name   )
dbplus_setindex    ( resource $relation   , string $idx_name   )
dbplus_tcl    ( int $sid   , string $script   )
dbx_compare    ( array $row_a   , array $row_b   , string $column_key   [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE  ] )
dbx_connect    ( mixed $module   , string $host   , string $database   , string $username   , string $password   [, int $persistent  ] )
dbx_error    ( object $link_identifier   )
dbx_escape_string    ( object $link_identifier   , string $text   )
dbx_sort    ( object $result   , string $user_compare_function   )
dcgettext    ( string $domain   , string $message   , int $category   )
dcngettext    ( string $domain   , string $msgid1   , string $msgid2   , int $n   , int $category   )
decbin    ( int $number   )
dechex    ( int $number    )
decoct    ( int $number   )
define    ( string $name   , mixed $value   [, bool $case_insensitive = false  ] )
defined    ( string $name   )
dgettext    ( string $domain   , string $message   )
dio_read    ( resource $fd   [, int $len = 1024  ] )
dio_write    ( resource $fd   , string $data   [, int $len = 0  ] )
dirname    ( string $path   )
dl    ( string $library   )
dngettext    ( string $domain   , string $msgid1   , string $msgid2   , int $n   )
dns_get_record    ( string $hostname   [, int $type = DNS_ANY   [, array &$authns   [, array &$addtl   [, bool &$raw = false  ]]]] )
ean Gender\Gender::connect    ( string $dsn   )
ean opcache_compile_file    ( string $file   )
ean opcache_invalidate    ( string $script   [, boolean $force = FALSE  ] )
ean opcache_is_script_cached    ( string $file   )
ean password_needs_rehash    ( string $hash   , integer $algo   [, array $options  ] )
ean password_verify    ( string $password   , string $hash   )
eger radius_get_tagged_attr_tag    ( string $data   )
eio_get_last_error    ( resource $req   )
enchant_broker_dict_exists    ( resource $broker   , string $tag   )
enchant_broker_get_error    ( resource $broker   )
enchant_broker_set_dict_path    ( resource $broker   , int $dict_type   , string $value   )
enchant_broker_set_ordering    ( resource $broker   , string $tag   , string $ordering   )
enchant_dict_check    ( resource $dict   , string $word   )
enchant_dict_get_error    ( resource $dict   )
enchant_dict_is_in_session    ( resource $dict   , string $word   )
enchant_dict_quick_check    ( resource $dict   , string $word   [, array &$suggestions  ] )
enchant_dict_suggest    ( resource $dict   , string $word   )
ereg    ( string $pattern   , string $string   [, array &$regs  ] )
ereg_replace    ( string $pattern   , string $replacement   , string $string   )
eregi    ( string $pattern   , string $string   [, array &$regs  ] )
eregi_replace    ( string $pattern   , string $replacement   , string $string   )
error_log    ( string $message   [, int $message_type = 0   [, string $destination   [, string $extra_headers  ]]] )
escapeshellarg    ( string $arg   )
escapeshellcmd    ( string $command   )
event_buffer_read    ( resource $bevent   , int $data_size   )
event_buffer_write    ( resource $bevent   , string $data   [, int $data_size = -1  ] )
exec    ( string $command   [, array &$output   [, int &$return_var  ]] )
exif_imagetype     ( string $filename    )
exif_read_data    ( string $filename   [, string $sections = NULL   [, bool $arrays = false   [, bool $thumbnail = false  ]]] )
exif_tagname         ( int $index   )
exif_thumbnail    ( string $filename   [, int &$width   [, int &$height   [, int &$imagetype  ]]] )
explode    ( string $delimiter   , string $string   [, int $limit  ] )
extension_loaded    ( string $name   )
extract      ( array &$array     [, int $flags = EXTR_OVERWRITE     [, string $prefix = NULL  ]] )
ezmlm_hash    ( string $addr   )
fann_cascadetrain_on_file    ( resource $ann   , string $filename   , int $max_neurons   , int $neurons_between_reports   , float $desired_error   )
fann_get_errstr    ( resource $errdat   )
fann_reset_MSE    ( string $ann   )
fann_save    ( resource $ann   , string $configuration_file   )
fann_save_train    ( resource $data   , string $file_name   )
fann_train_on_file    ( resource $ann   , string $filename   , int $max_epochs   , int $epochs_between_reports   , float $desired_error   )
fbsql_blob_size    ( string $blob_handle   [, resource $link_identifier  ] )
fbsql_change_user    ( string $user   , string $password   [, string $database   [, resource $link_identifier  ]] )
fbsql_clob_size    ( string $clob_handle   [, resource $link_identifier  ] )
fbsql_create_blob    ( string $blob_data   [, resource $link_identifier  ] )
fbsql_create_clob    ( string $clob_data   [, resource $link_identifier  ] )
fbsql_create_db    ( string $database_name   [, resource $link_identifier   [, string $database_options  ]] )
fbsql_database    ( resource $link_identifier   [, string $database  ] )
fbsql_database_password    ( resource $link_identifier   [, string $database_password  ] )
fbsql_db_status    ( string $database_name   [, resource $link_identifier  ] )
fbsql_drop_db    ( string $database_name   [, resource $link_identifier  ] )
fbsql_error    ([ resource $link_identifier  ] )
fbsql_field_flags    ( resource $result   [, int $field_offset  ] )
fbsql_field_name    ( resource $result   [, int $field_index  ] )
fbsql_field_table    ( resource $result   [, int $field_offset  ] )
fbsql_field_type    ( resource $result   [, int $field_offset  ] )
fbsql_hostname    ( resource $link_identifier   [, string $host_name  ] )
fbsql_password    ( resource $link_identifier   [, string $password  ] )
fbsql_read_blob    ( string $blob_handle   [, resource $link_identifier  ] )
fbsql_read_clob    ( string $clob_handle   [, resource $link_identifier  ] )
fbsql_select_db    ([ string $database_name   [, resource $link_identifier  ]] )
fbsql_set_password    ( resource $link_identifier   , string $user   , string $password   , string $old_password   )
fbsql_start_db    ( string $database_name   [, resource $link_identifier   [, string $database_options  ]] )
fbsql_stop_db    ( string $database_name   [, resource $link_identifier  ] )
fbsql_table_name    ( resource $result   , int $index   )
fbsql_username    ( resource $link_identifier   [, string $username  ] )
fdf_add_doc_javascript    ( resource $fdf_document   , string $script_name   , string $script_code   )
fdf_add_template    ( resource $fdf_document   , int $newpage   , string $filename   , string $template   , int $rename   )
fdf_error    ([ int $error_code = -1  ] )
fdf_get_ap    ( resource $fdf_document   , string $field   , int $face   , string $filename   )
fdf_get_attachment    ( resource $fdf_document   , string $fieldname   , string $savepath   )
fdf_get_encoding    ( resource $fdf_document   )
fdf_get_file    ( resource $fdf_document   )
fdf_get_flags    ( resource $fdf_document   , string $fieldname   , int $whichflags   )
fdf_get_status    ( resource $fdf_document   )
fdf_get_version    ([ resource $fdf_document  ] )
fdf_next_field_name    ( resource $fdf_document   [, string $fieldname  ] )
fdf_remove_item    ( resource $fdf_document   , string $fieldname   , int $item   )
fdf_save    ( resource $fdf_document   [, string $filename  ] )
fdf_save_string    ( resource $fdf_document   )
fdf_set_ap    ( resource $fdf_document   , string $field_name   , int $face   , string $filename   , int $page_number   )
fdf_set_encoding    ( resource $fdf_document   , string $encoding   )
fdf_set_file    ( resource $fdf_document   , string $url   [, string $target_frame  ] )
fdf_set_flags    ( resource $fdf_document   , string $fieldname   , int $whichFlags   , int $newFlags   )
fdf_set_javascript_action    ( resource $fdf_document   , string $fieldname   , int $trigger   , string $script   )
fdf_set_on_import_javascript    ( resource $fdf_document   , string $script   , bool $before_data_import   )
fdf_set_opt    ( resource $fdf_document   , string $fieldname   , int $element   , string $str1   , string $str2   )
fdf_set_status    ( resource $fdf_document   , string $status   )
fdf_set_submit_form_action    ( resource $fdf_document   , string $fieldname   , int $trigger   , string $script   , int $flags   )
fdf_set_target_frame    ( resource $fdf_document   , string $frame_name   )
fdf_set_value    ( resource $fdf_document   , string $fieldname   , mixed $value   [, int $isName  ] )
fdf_set_version    ( resource $fdf_document   , string $version   )
fgetc    ( resource $handle   )
fgetcsv    ( resource $handle   [, int $length = 0   [, string $delimiter = ","   [, string $enclosure = '"'   [, string $escape = "\"  ]]]] )
fgets    ( resource $handle   [, int $length  ] )
fgetss    ( resource $handle   [, int $length   [, string $allowable_tags  ]] )
file    ( string $filename   [, int $flags = 0   [, resource $context  ]] )
file_exists    ( string $filename   )
file_get_contents    ( string $filename   [, bool $use_include_path = false   [, resource $context   [, int $offset = -1   [, int $maxlen  ]]]] )
file_put_contents    ( string $filename   , mixed $data   [, int $flags = 0   [, resource $context  ]] )
fileatime    ( string $filename   )
filectime    ( string $filename   )
filegroup    ( string $filename   )
fileinode    ( string $filename   )
filemtime    ( string $filename   )
fileowner    ( string $filename   )
fileperms    ( string $filename   )
filepro    ( string $directory   )
filepro_fieldname    ( int $field_number   )
filepro_fieldtype    ( int $field_number   )
filepro_retrieve    ( int $row_number   , int $field_number   )
filesize    ( string $filename   )
filetype    ( string $filename   )
filter_has_var    ( int $type   , string $variable_name   )
filter_id    ( string $filtername   )
float HaruPage::getTextWidth    ( string $text   )
float NumberFormatter::parseCurrency    ( string $value   , string &$currency   [, int &$position  ] )
float PDF_get_pdi_value     ( resource $p    , string $key    , int $doc    , int $page    , int $reserved    )
float PDF_get_value     ( resource $p    , string $key    , float $modifier    )
float PDF_info_font    ( resource $pdfdoc   , int $font   , string $keyword   , string $optlist   )
float PDF_info_matchbox     ( resource $pdfdoc    , string $boxname    , int $num    , string $keyword    )
float PDF_info_table     ( resource $pdfdoc    , int $table    , string $keyword    )
float PDF_info_textflow     ( resource $pdfdoc    , int $textflow    , string $keyword    )
float PDF_info_textline     ( resource $pdfdoc    , string $text    , string $keyword    , string $optlist    )
float PDF_pcos_get_number     ( resource $p    , int $doc    , string $path    )
float PDF_stringwidth     ( resource $p    , string $text    , int $font    , float $fontsize    )
float SWFFont::getUTF8Width    ( string $string   )
float SWFFont::getWidth    ( string $string   )
float SWFText::getUTF8Width    ( string $string   )
float SWFText::getWidth    ( string $string   )
float SolrInputDocument::getFieldBoost    ( string $fieldName   )
float disk_free_space    ( string $directory   )
float disk_total_space    ( string $directory   )
float ps_get_value    ( resource $psdoc   , string $name   [, float $modifier  ] )
float ps_stringwidth    ( resource $psdoc   , string $text   [, int $fontid = 0   [, float $size = 0.0  ]] )
float px_get_value    ( resource $pxdoc   , string $name   )
fnmatch    ( string $pattern   , string $string   [, int $flags = 0  ] )
fprintf    ( resource $handle   , string $format   [, mixed $args   [, mixed $...  ]] )
fputcsv    ( resource $handle   , array $fields   [, string $delimiter = ","   [, string $enclosure = '"'   [, string $escape_char = "\"  ]]] )
fread    ( resource $handle   , int $length   )
fribidi_log2vis    ( string $str   , string $direction   , int $charset   )
ftok    ( string $pathname   , string $proj   )
ftp_alloc    ( resource $ftp_stream   , int $filesize   [, string &$result  ] )
ftp_chdir    ( resource $ftp_stream   , string $directory   )
ftp_chmod    ( resource $ftp_stream   , int $mode   , string $filename   )
ftp_delete    ( resource $ftp_stream   , string $path   )
ftp_exec    ( resource $ftp_stream   , string $command   )
ftp_fget    ( resource $ftp_stream   , resource $handle   , string $remote_file   , int $mode   [, int $resumepos = 0  ] )
ftp_fput    ( resource $ftp_stream   , string $remote_file   , resource $handle   , int $mode   [, int $startpos = 0  ] )
ftp_get    ( resource $ftp_stream   , string $local_file   , string $remote_file   , int $mode   [, int $resumepos = 0  ] )
ftp_login    ( resource $ftp_stream   , string $username   , string $password   )
ftp_mdtm    ( resource $ftp_stream   , string $remote_file   )
ftp_mkdir    ( resource $ftp_stream   , string $directory   )
ftp_nb_fget    ( resource $ftp_stream   , resource $handle   , string $remote_file   , int $mode   [, int $resumepos = 0  ] )
ftp_nb_fput    ( resource $ftp_stream   , string $remote_file   , resource $handle   , int $mode   [, int $startpos = 0  ] )
ftp_nb_get    ( resource $ftp_stream   , string $local_file   , string $remote_file   , int $mode   [, int $resumepos = 0  ] )
ftp_nb_put    ( resource $ftp_stream   , string $remote_file   , string $local_file   , int $mode   [, int $startpos = 0  ] )
ftp_nlist      ( resource $ftp_stream     , string $directory     )
ftp_put    ( resource $ftp_stream   , string $remote_file   , string $local_file   , int $mode   [, int $startpos = 0  ] )
ftp_pwd      ( resource $ftp_stream     )
ftp_raw       ( resource $ftp_stream      , string $command      )
ftp_rename    ( resource $ftp_stream   , string $oldname   , string $newname   )
ftp_rmdir       ( resource $ftp_stream      , string $directory      )
ftp_site    ( resource $ftp_stream   , string $command   )
ftp_size    ( resource $ftp_stream   , string $remote_file   )
ftp_systype    ( resource $ftp_stream   )
function_exists    ( string $function_name   )
fwrite    ( resource $handle   , string $string   [, int $length  ] )
geoip_asnum_by_name    ( string $hostname   )
geoip_continent_code_by_name    ( string $hostname   )
geoip_country_code3_by_name    ( string $hostname   )
geoip_country_code_by_name    ( string $hostname   )
geoip_country_name_by_name    ( string $hostname   )
geoip_database_info    ([ int $database = GEOIP_COUNTRY_EDITION  ] )
geoip_db_filename    ( int $database   )
geoip_domain_by_name    ( string $hostname   )
geoip_id_by_name    ( string $hostname   )
geoip_isp_by_name    ( string $hostname   )
geoip_netspeedcell_by_name    ( string $hostname   )
geoip_org_by_name    ( string $hostname   )
geoip_record_by_name    ( string $hostname   )
geoip_region_by_name    ( string $hostname   )
geoip_region_name_by_code    ( string $country_code   , string $region_code   )
geoip_time_zone_by_country_and_region    ( string $country_code   [, string $region_code  ] )
get_called_class    ( void   )
get_cfg_var    ( string $option   )
get_class    ([ object $object = NULL  ] )
get_class_vars    ( string $class_name   )
get_current_user    ( void   )
get_extension_funcs    ( string $module_name   )
get_headers    ( string $url   [, int $format = 0  ] )
get_html_translation_table    ([ int $table = HTML_SPECIALCHARS   [, int $flags = ENT_COMPAT | ENT_HTML401   [, string $encoding = "UTF-8"  ]]] )
get_include_path    ( void   )
get_meta_tags    ( string $filename   [, bool $use_include_path = false  ] )
get_parent_class    ([ mixed $object  ] )
get_resource_type    ( resource $handle   )
get_resources    ([ string $type  ] )
getcwd    ( void   )
getenv    ( string $varname   )
gethostbyaddr    ( string $ip_address   )
gethostbyname    ( string $hostname   )
gethostbynamel    ( string $hostname   )
gethostname    ( void   )
getimagesize    ( string $filename   [, array &$imageinfo  ] )
getimagesizefromstring    ( string $imagedata   [, array &$imageinfo  ] )
getmxrr    ( string $hostname   , array &$mxhosts   [, array &$weight  ] )
getopt    ( string $options   [, array $longopts  ] )
getprotobyname    ( string $name   )
getprotobynumber    ( int $number   )
getservbyname    ( string $service   , string $protocol   )
getservbyport    ( int $port   , string $protocol   )
gettext    ( string $message   )
gettype    ( mixed $var   )
glob    ( string $pattern   [, int $flags = 0  ] )
gmdate    ( string $format   [, int $timestamp = time()  ] )
gmp_export    ( GMP $gmpnumber   , integer $word_size   , integer $options   )
gmp_strval    ( GMP $gmpnumber   [, int $base = 10  ] )
gmstrftime    ( string $format   [, int $timestamp = time()  ] )
gnupg_adddecryptkey    ( resource $identifier   , string $fingerprint   , string $passphrase   )
gnupg_addencryptkey    ( resource $identifier   , string $fingerprint   )
gnupg_addsignkey    ( resource $identifier   , string $fingerprint   [, string $passphrase  ] )
gnupg_decrypt    ( resource $identifier   , string $text   )
gnupg_decryptverify    ( resource $identifier   , string $text   , string &$plaintext   )
gnupg_encrypt    ( resource $identifier   , string $plaintext   )
gnupg_encryptsign    ( resource $identifier   , string $plaintext   )
gnupg_export    ( resource $identifier   , string $fingerprint   )
gnupg_geterror    ( resource $identifier   )
gnupg_import    ( resource $identifier   , string $keydata   )
gnupg_keyinfo    ( resource $identifier   , string $pattern   )
gnupg_sign    ( resource $identifier   , string $plaintext   )
gnupg_verify    ( resource $identifier   , string $signed_text   , string $signature   [, string &$plaintext  ] )
gopher_parsedir    ( string $dirent   )
grapheme_extract    ( string $haystack   , int $size   [, int $extract_type   [, int $start = 0   [, int &$next  ]]] )
grapheme_stripos    ( string $haystack   , string $needle   [, int $offset = 0  ] )
grapheme_stristr    ( string $haystack   , string $needle   [, bool $before_needle = false  ] )
grapheme_strlen    ( string $input   )
grapheme_strpos    ( string $haystack   , string $needle   [, int $offset = 0  ] )
grapheme_strripos    ( string $haystack   , string $needle   [, int $offset = 0  ] )
grapheme_strrpos    ( string $haystack   , string $needle   [, int $offset = 0  ] )
grapheme_strstr    ( string $haystack   , string $needle   [, bool $before_needle = false  ] )
grapheme_substr    ( string $string   , int $start   [, int $length  ] )
gupnp_context_get_host_ip    ( resource $context   )
gupnp_context_host_path    ( resource $context   , string $local_path   , string $server_path   )
gupnp_context_unhost_path    ( resource $context   , string $server_path   )
gupnp_device_action_callback_set    ( resource $root_device   , int $signal   , string $action_name   , mixed $callback   [, mixed $arg  ] )
gupnp_root_device_get_relative_location    ( resource $root_device   )
gupnp_service_action_return_error    ( resource $action   , int $error_code   [, string $error_description  ] )
gupnp_service_action_set    ( resource $action   , string $name   , int $type   , mixed $value   )
gupnp_service_introspection_get_state_variable    ( resource $introspection   , string $variable_name   )
gupnp_service_notify    ( resource $service   , string $name   , int $type   , mixed $value   )
gupnp_service_proxy_action_set    ( resource $proxy   , string $action   , string $name   , mixed $value   , int $type   )
gupnp_service_proxy_add_notify    ( resource $proxy   , string $value   , int $type   , mixed $callback   [, mixed $arg  ] )
gupnp_service_proxy_remove_notify    ( resource $proxy   , string $value   )
gupnp_service_proxy_send_action    ( resource $proxy   , string $action   , array $in_params   , array $out_params   )
gzcompress    ( string $data   [, int $level = -1   [, int $encoding = ZLIB_ENCODING_DEFLATE  ]] )
gzdecode    ( string $data   [, int $length  ] )
gzdeflate    ( string $data   [, int $level = -1   [, int $encoding = ZLIB_ENCODING_RAW  ]] )
gzencode    ( string $data   [, int $level = -1   [, int $encoding_mode = FORCE_GZIP  ]] )
gzfile    ( string $filename   [, int $use_include_path = 0  ] )
gzgetc    ( resource $zp   )
gzgets    ( resource $zp   [, int $length  ] )
gzgetss    ( resource $zp   , int $length   [, string $allowable_tags  ] )
gzinflate    ( string $data   [, int $length = 0  ] )
gzread    ( resource $zp   , int $length   )
gzuncompress    ( string $data   [, int $length = 0  ] )
gzwrite    ( resource $zp   , string $string   [, int $length  ] )
hash    ( string $algo   , string $data   [, bool $raw_output = false  ] )
hash_equals    ( string $known_string   , string $user_string   )
hash_file    ( string $algo   , string $filename   [, bool $raw_output = false  ] )
hash_final    ( resource $context   [, bool $raw_output = false  ] )
hash_hmac    ( string $algo   , string $data   , string $key   [, bool $raw_output = false  ] )
hash_hmac_file    ( string $algo   , string $filename   , string $key   [, bool $raw_output = false  ] )
hash_pbkdf2    ( string $algo   , string $password   , string $salt   , int $iterations   [, int $length = 0   [, bool $raw_output = false  ]] )
hash_update    ( resource $context   , string $data   )
hash_update_file    ( resource $hcontext   , string $filename   [, resource $scontext = NULL  ] )
headers_sent    ([ string &$file   [, int &$line  ]] )
hebrev    ( string $hebrew_text   [, int $max_chars_per_line = 0  ] )
hebrevc    ( string $hebrew_text   [, int $max_chars_per_line = 0  ] )
hex2bin   ( string $data  )
html_entity_decode    ( string $string   [, int $flags = ENT_COMPAT | ENT_HTML401   [, string $encoding = ini_get("default_charset")  ]] )
htmlentities    ( string $string   [, int $flags = ENT_COMPAT | ENT_HTML401   [, string $encoding = ini_get("default_charset")   [, bool $double_encode = true  ]]] )
htmlspecialchars    ( string $string   [, int $flags = ENT_COMPAT | ENT_HTML401   [, string $encoding = ini_get("default_charset")   [, bool $double_encode = true  ]]] )
htmlspecialchars_decode    ( string $string   [, int $flags = ENT_COMPAT | ENT_HTML401  ] )
http_build_query    ( mixed $query_data   [, string $numeric_prefix   [, string $arg_separator   [, int $enc_type = PHP_QUERY_RFC1738  ]]] )
hw_api_attribute::key    ( void   )
hw_api_attribute::langdepvalue    ( string $language   )
hw_api_attribute::value    ( void   )
hw_api_content::mimetype    ( void   )
hw_api_content::read    ( string $buffer   , int $len   )
hw_api_object::remove    ( string $name   )
hw_api_object::title    ( array $parameter   )
hw_api_object::value    ( string $name   )
hw_api_reason::description    ( void   )
ibase_add_user    ( resource $service_handle   , string $user_name   , string $password   [, string $first_name   [, string $middle_name   [, string $last_name  ]]] )
ibase_blob_echo    ( string $blob_id   )
ibase_blob_get    ( resource $blob_handle   , int $len   )
ibase_blob_import    ( resource $link_identifier   , resource $file_handle   )
ibase_blob_info    ( resource $link_identifier   , string $blob_id   )
ibase_db_info    ( resource $service_handle   , string $db   , int $action   [, int $argument = 0  ] )
ibase_delete_user    ( resource $service_handle   , string $user_name   )
ibase_errmsg    ( void   )
ibase_maintain_db    ( resource $service_handle   , string $db   , int $action   [, int $argument = 0  ] )
ibase_modify_user    ( resource $service_handle   , string $user_name   , string $password   [, string $first_name   [, string $middle_name   [, string $last_name  ]]] )
ibase_name_result    ( resource $result   , string $name   )
ibase_server_info    ( resource $service_handle   , int $action   )
ibase_wait_event    ( string $event_name1   [, string $event_name2   [, string $...  ]] )
iconv    ( string $in_charset   , string $out_charset   , string $str   )
iconv_mime_decode    ( string $encoded_header   [, int $mode = 0   [, string $charset = ini_get("iconv.internal_encoding")  ]] )
iconv_mime_decode_headers    ( string $encoded_headers   [, int $mode = 0   [, string $charset = ini_get("iconv.internal_encoding")  ]] )
iconv_mime_encode    ( string $field_name   , string $field_value   [, array $preferences = NULL  ] )
iconv_set_encoding    ( string $type   , string $charset   )
iconv_strlen    ( string $str   [, string $charset = ini_get("iconv.internal_encoding")  ] )
iconv_strpos    ( string $haystack   , string $needle   [, int $offset = 0   [, string $charset = ini_get("iconv.internal_encoding")  ]] )
iconv_strrpos    ( string $haystack   , string $needle   [, string $charset = ini_get("iconv.internal_encoding")  ] )
iconv_substr    ( string $str   , int $offset   [, int $length = iconv_strlen($str, $charset)   [, string $charset = ini_get("iconv.internal_encoding")  ]] )
id3_get_frame_long_name    ( string $frameId   )
id3_get_frame_short_name    ( string $frameId   )
id3_get_genre_id    ( string $genre   )
id3_get_genre_name    ( int $genre_id   )
id3_get_tag    ( string $filename   [, int $version = ID3_BEST  ] )
id3_get_version    ( string $filename   )
id3_remove_tag    ( string $filename   [, int $version = ID3_V1_0  ] )
id3_set_tag    ( string $filename   , array $tag   [, int $version = ID3_V1_0  ] )
idate    ( string $format   [, int $timestamp = time()  ] )
idn_to_ascii    ( string $domain   [, int $options = 0   [, int $variant = INTL_IDNA_VARIANT_2003   [, array &$idna_info  ]]] )
idn_to_utf8    ( string $domain   [, int $options = 0   [, int $variant = INTL_IDNA_VARIANT_2003   [, array &$idna_info  ]]] )
ifx_create_blob    ( int $type   , int $mode   , string $param   )
ifx_create_char    ( string $param   )
ifx_error    ([ resource $link_identifier  ] )
ifx_errormsg    ([ int $errorcode  ] )
ifx_get_blob    ( int $bid   )
ifx_get_char    ( int $bid   )
ifx_htmltbl_result    ( resource $result_id   [, string $html_table_options  ] )
ifx_update_blob    ( int $bid   , string $content   )
ifx_update_char    ( int $bid   , string $content   )
ifxus_read_slob    ( int $bid   , int $nbytes   )
ifxus_write_slob    ( int $bid   , string $content   )
ignore_user_abort    ([ string $value  ] )
iis_add_server    ( string $path   , string $comment   , string $server_ip   , int $port   , string $host_name   , int $rights   , int $start_server   )
iis_get_dir_security    ( int $server_instance   , string $virtual_path   )
iis_get_script_map    ( int $server_instance   , string $virtual_path   , string $script_extension   )
iis_get_server_by_comment    ( string $comment   )
iis_get_server_by_path    ( string $path   )
iis_get_server_rights    ( int $server_instance   , string $virtual_path   )
iis_get_service_state    ( string $service_id   )
iis_set_app_settings    ( int $server_instance   , string $virtual_path   , string $application_scope   )
iis_set_dir_security    ( int $server_instance   , string $virtual_path   , int $directory_flags   )
iis_set_script_map    ( int $server_instance   , string $virtual_path   , string $script_extension   , string $engine_path   , int $allow_scripting   )
iis_set_server_rights    ( int $server_instance   , string $virtual_path   , int $directory_flags   )
iis_start_service    ( string $service_id   )
iis_stop_service    ( string $service_id   )
image2wbmp    ( resource $image   [, string $filename   [, int $threshold  ]] )
image_type_to_extension    ( int $imagetype   [, bool $include_dot = TRUE  ] )
image_type_to_mime_type    ( int $imagetype   )
imagechar    ( resource $image   , int $font   , int $x   , int $y   , string $c   , int $color   )
imagecharup    ( resource $image   , int $font   , int $x   , int $y   , string $c   , int $color   )
imageftbbox    ( float $size   , float $angle   , string $fontfile   , string $text   [, array $extrainfo  ] )
imagefttext    ( resource $image   , float $size   , float $angle   , int $x   , int $y   , int $color   , string $fontfile   , string $text   [, array $extrainfo  ] )
imagegd    ( resource $image   [, string $filename  ] )
imagegd2    ( resource $image   [, string $filename   [, int $chunk_size   [, int $type = IMG_GD2_RAW  ]]] )
imagegif    ( resource $image   [, string $filename  ] )
imagejpeg    ( resource $image   [, string $filename   [, int $quality  ]] )
imageloadfont    ( string $file   )
imagepng    ( resource $image   [, string $filename   [, int $quality   [, int $filters  ]]] )
imagepsbbox    ( string $text   , resource $font   , int $size   )
imagepsencodefont    ( resource $font_index   , string $encodingfile   )
imagepstext    ( resource $image   , string $text   , resource $font_index   , int $size   , int $foreground   , int $background   , int $x   , int $y   [, int $space = 0   [, int $tightness = 0   [, float $angle = 0.0   [, int $antialias_steps = 4  ]]]] )
imagestring    ( resource $image   , int $font   , int $x   , int $y   , string $string   , int $color   )
imagestringup    ( resource $image   , int $font   , int $x   , int $y   , string $string   , int $color   )
imagettfbbox    ( float $size   , float $angle   , string $fontfile   , string $text   )
imagettftext    ( resource $image   , float $size   , float $angle   , int $x   , int $y   , int $color   , string $fontfile   , string $text   )
imagewbmp    ( resource $image   [, string $filename   [, int $foreground  ]] )
imagewebp    ( resource $image   , string $filename   )
imagexbm    ( resource $image   , string $filename   [, int $foreground  ] )
imap_8bit    ( string $string   )
imap_append    ( resource $imap_stream   , string $mailbox   , string $message   [, string $options = NULL   [, string $internal_date = NULL  ]] )
imap_base64    ( string $text   )
imap_binary    ( string $string   )
imap_body    ( resource $imap_stream   , int $msg_number   [, int $options = 0  ] )
imap_bodystruct    ( resource $imap_stream   , int $msg_number   , string $section   )
imap_clearflag_full    ( resource $imap_stream   , string $sequence   , string $flag   [, int $options = 0  ] )
imap_createmailbox    ( resource $imap_stream   , string $mailbox   )
imap_deletemailbox    ( resource $imap_stream   , string $mailbox   )
imap_fetch_overview    ( resource $imap_stream   , string $sequence   [, int $options = 0  ] )
imap_fetchbody    ( resource $imap_stream   , int $msg_number   , string $section   [, int $options = 0  ] )
imap_fetchheader    ( resource $imap_stream   , int $msg_number   [, int $options = 0  ] )
imap_fetchmime    ( resource $imap_stream   , int $msg_number   , string $section   [, int $options = 0  ] )
imap_get_quota    ( resource $imap_stream   , string $quota_root   )
imap_get_quotaroot    ( resource $imap_stream   , string $quota_root   )
imap_getacl    ( resource $imap_stream   , string $mailbox   )
imap_getmailboxes    ( resource $imap_stream   , string $ref   , string $pattern   )
imap_getsubscribed    ( resource $imap_stream   , string $ref   , string $pattern   )
imap_headerinfo    ( resource $imap_stream   , int $msg_number   [, int $fromlength = 0   [, int $subjectlength = 0   [, string $defaulthost = NULL  ]]] )
imap_last_error    ( void   )
imap_list    ( resource $imap_stream   , string $ref   , string $pattern   )
imap_listscan    ( resource $imap_stream   , string $ref   , string $pattern   , string $content   )
imap_lsub    ( resource $imap_stream   , string $ref   , string $pattern   )
imap_mail    ( string $to   , string $subject   , string $message   [, string $additional_headers = NULL   [, string $cc = NULL   [, string $bcc = NULL   [, string $rpath = NULL  ]]]] )
imap_mail_compose    ( array $envelope   , array $body   )
imap_mail_copy    ( resource $imap_stream   , string $msglist   , string $mailbox   [, int $options = 0  ] )
imap_mail_move    ( resource $imap_stream   , string $msglist   , string $mailbox   [, int $options = 0  ] )
imap_mime_header_decode    ( string $text   )
imap_qprint    ( string $string   )
imap_renamemailbox    ( resource $imap_stream   , string $old_mbox   , string $new_mbox   )
imap_reopen    ( resource $imap_stream   , string $mailbox   [, int $options = 0   [, int $n_retries = 0  ]] )
imap_rfc822_parse_adrlist    ( string $address   , string $default_host   )
imap_rfc822_parse_headers    ( string $headers   [, string $defaulthost = "UNKNOWN"  ] )
imap_rfc822_write_address    ( string $mailbox   , string $host   , string $personal   )
imap_savebody    ( resource $imap_stream   , mixed $file   , int $msg_number   [, string $part_number = ""   [, int $options = 0  ]] )
imap_search    ( resource $imap_stream   , string $criteria   [, int $options = SE_FREE   [, string $charset = NULL  ]] )
imap_set_quota    ( resource $imap_stream   , string $quota_root   , int $quota_limit   )
imap_setacl    ( resource $imap_stream   , string $mailbox   , string $id   , string $rights   )
imap_setflag_full    ( resource $imap_stream   , string $sequence   , string $flag   [, int $options = NIL  ] )
imap_sort    ( resource $imap_stream   , int $criteria   , int $reverse   [, int $options = 0   [, string $search_criteria = NULL   [, string $charset = NULL  ]]] )
imap_status    ( resource $imap_stream   , string $mailbox   , int $options   )
imap_subscribe    ( resource $imap_stream   , string $mailbox   )
imap_unsubscribe    ( resource $imap_stream   , string $mailbox   )
imap_utf7_decode    ( string $text   )
imap_utf7_encode    ( string $data   )
imap_utf8    ( string $mime_encoded_text   )
implode    ( string $glue   , array $pieces   )
import_request_variables    ( string $types   [, string $prefix  ] )
inet_ntop    ( string $in_addr   )
inet_pton    ( string $address   )
ingres_charset    ( resource $link   )
ingres_cursor    ( resource $result   )
ingres_error    ([ resource $link  ] )
ingres_errsqlstate    ([ resource $link  ] )
ingres_escape_string    ( resource $link   , string $source_string   )
ingres_execute    ( resource $result   [, array $params   [, string $types  ]] )
ingres_field_name    ( resource $result   , int $index   )
ingres_field_type    ( resource $result   , int $index   )
ini_get    ( string $varname   )
ini_get_all    ([ string $extension   [, bool $details = true  ]] )
ini_set    ( string $varname   , string $newvalue   )
inotify_add_watch    ( resource $inotify_instance   , string $pathname   , int $mask   )
int Collator::compare    ( string $str1   , string $str2   )
int DOMDocument::save    ( string $filename   [, int $options  ] )
int DOMDocument::saveHTMLFile    ( string $filename  )
int DOMNode::C14NFile    ( string $uri   [, bool $exclusive   [, bool $with_comments   [, array $xpath   [, array $ns_prefixes  ]]]] )
int EventBuffer::copyout    (  string &$data    ,  int $max_bytes    )
int GearmanTask::sendData    ( string $data   )
int GearmanTask::sendWorkload    ( string $data   )
int IntlCalendar::getWeekendTransition    ( string $dayOfWeek   )
int IntlDateFormatter::parse    ( string $value   [, int &$position   ] )
int Memcached::decrement    ( string $key   [, int $offset = 1   [, int $initial_value = 0   [, int $expiry = 0  ]]] )
int Memcached::decrementByKey    ( string $server_key   , string $key   [, int $offset = 1   [, int $initial_value = 0   [, int $expiry = 0  ]]] )
int Memcached::increment    ( string $key   [, int $offset = 1   [, int $initial_value = 0   [, int $expiry = 0  ]]] )
int Memcached::incrementByKey    ( string $server_key   , string $key   [, int $offset = 1   [, int $initial_value = 0   [, int $expiry = 0  ]]] )
int MongoGridFSFile::write    ([ string $filename = NULL  ] )
int PDO::exec    ( string $statement   )
int Phar::offsetGet    ( string $offset   )
int QuickHashIntStringHash::set    ( int $key   , string $value   )
int QuickHashStringIntHash::set    ( string $key   , int $value   )
int SolrQuery::getFacetLimit    ([ string $field_override  ] )
int SolrQuery::getFacetMinCount    ([ string $field_override  ] )
int SolrQuery::getFacetOffset    ([ string $field_override  ] )
int SolrQuery::getFacetSort    ([ string $field_override  ] )
int SolrQuery::getHighlightFragsize    ([ string $field_override  ] )
int SolrQuery::getHighlightMaxAlternateFieldLength    ([ string $field_override  ] )
int SolrQuery::getHighlightSnippets    ([ string $field_override  ] )
int SphinxClient::addQuery    ( string $query   [, string $index = "*"   [, string $comment = ""  ]] )
int SphinxClient::updateAttributes    ( string $index   , array $attributes   , array $values   [, bool $mva = false  ] )
int SplFileObject::fputcsv    ( array $fields   [, string $delimiter = ","   [, string $enclosure = '"'  ]] )
int SplFileObject::fwrite    ( string $str   [, int $length  ] )
int TokyoTyrant::size    ( string $key   )
int TokyoTyrantTable::put    ( string $key   , array $columns   )
int VarnishAdmin::ban    ( string $vcl_regex   )
int VarnishAdmin::banUrl    ( string $vcl_regex   )
int VarnishAdmin::setParam    ( string $name   , string|integer $value   )
int streamWrapper::stream_write    ( string $data   )
integer Gender\Gender::get    ( string $name   [, integer $country  ] )
interface_exists    ( string $interface_name   [, bool $autoload = true  ] )
intl_error_name    ( int $error_code   )
intl_get_error_message    ( void   )
ip2long    ( string $ip_address   )
iptcparse    ( string $iptcblock   )
is_a    ( object $object   , string $class_name   [, bool $allow_string = FALSE  ] )
is_callable    ( callable $name   [, bool $syntax_only = false   [, string &$callable_name  ]] )
is_dir    ( string $filename   )
is_executable    ( string $filename   )
is_file    ( string $filename   )
is_link    ( string $filename   )
is_readable    ( string $filename   )
is_string    ( mixed $var   )
is_subclass_of    ( mixed $object   , string $class_name   [, bool $allow_string = TRUE  ] )
is_tainted    ( string $string   )
is_uploaded_file    ( string $filename   )
is_writable    ( string $filename   )
jdmonthname    ( int $julianday   , int $mode   )
jdtofrench    ( int $juliandaycount   )
jdtogregorian    ( int $julianday   )
jdtojewish    ( int $juliandaycount   [, bool $hebrew = false   [, int $fl = 0  ]] )
jdtojulian    ( int $julianday   )
jpeg2wbmp    ( string $jpegname   , string $wbmpname   , int $dest_height   , int $dest_width   , int $threshold   )
json_encode    ( mixed $value   [, int $options = 0   [, int $depth = 512  ]] )
json_last_error_msg    ( void   )
judy_version    ( void   )
kadm5_chpass_principal    ( resource $handle   , string $principal   , string $password   )
kadm5_create_principal    ( resource $handle   , string $principal   [, string $password   [, array $options  ]] )
kadm5_delete_principal    ( resource $handle   , string $principal   )
kadm5_get_principal    ( resource $handle   , string $principal   )
kadm5_modify_principal    ( resource $handle   , string $principal   , array $options   )
lcfirst    ( string $str   )
lchgrp    ( string $filename   , mixed $group   )
lchown    ( string $filename   , mixed $user   )
ldap_8859_to_t61    ( string $value   )
ldap_add    ( resource $link_identifier   , string $dn   , array $entry   )
ldap_bind    ( resource $link_identifier   [, string $bind_rdn = NULL   [, string $bind_password = NULL  ]] )
ldap_control_paged_result    ( resource $link   , int $pagesize   [, bool $iscritical = false   [, string $cookie = ""  ]] )
ldap_control_paged_result_response    ( resource $link   , resource $result   [, string &$cookie   [, int &$estimated  ]] )
ldap_delete    ( resource $link_identifier   , string $dn   )
ldap_dn2ufn    ( string $dn   )
ldap_err2str    ( int $errno   )
ldap_error    ( resource $link_identifier   )
ldap_escape    ( string $value   [, string $ignore   [, int $flags  ]] )
ldap_explode_dn    ( string $dn   , int $with_attrib   )
ldap_first_attribute    ( resource $link_identifier   , resource $result_entry_identifier   )
ldap_get_dn    ( resource $link_identifier   , resource $result_entry_identifier   )
ldap_get_values    ( resource $link_identifier   , resource $result_entry_identifier   , string $attribute   )
ldap_get_values_len    ( resource $link_identifier   , resource $result_entry_identifier   , string $attribute   )
ldap_mod_add    ( resource $link_identifier   , string $dn   , array $entry   )
ldap_mod_del    ( resource $link_identifier   , string $dn   , array $entry   )
ldap_mod_replace    ( resource $link_identifier   , string $dn   , array $entry   )
ldap_modify    ( resource $link_identifier   , string $dn   , array $entry   )
ldap_modify_batch    ( resource $link_identifier   , string $dn   , array $entry   )
ldap_next_attribute    ( resource $link_identifier   , resource $result_entry_identifier   )
ldap_parse_result    ( resource $link   , resource $result   , int &$errcode   [, string &$matcheddn   [, string &$errmsg   [, array &$referrals  ]]] )
ldap_rename    ( resource $link_identifier   , string $dn   , string $newrdn   , string $newparent   , bool $deleteoldrdn   )
ldap_sasl_bind    ( resource $link   [, string $binddn = NULL   [, string $password = NULL   [, string $sasl_mech = NULL   [, string $sasl_realm = NULL   [, string $sasl_authc_id = NULL   [, string $sasl_authz_id = NULL   [, string $props = NULL  ]]]]]]] )
ldap_sort    ( resource $link   , resource $result   , string $sortfilter   )
ldap_t61_to_8859    ( string $value   )
levenshtein    ( string $str1   , string $str2   )
link    ( string $target   , string $link   )
linkinfo    ( string $path   )
long2ip    ( string $proper_address   )
lstat    ( string $filename   )
ltrim    ( string $str   [, string $character_mask  ] )
lzf_compress    ( string $data   )
lzf_decompress    ( string $data   )
m_connectionerror    ( resource $conn   )
m_getcell    ( resource $conn   , int $identifier   , string $column   , int $row   )
m_getcellbynum    ( resource $conn   , int $identifier   , int $column   , int $row   )
m_getcommadelimited    ( resource $conn   , int $identifier   )
m_getheader    ( resource $conn   , int $identifier   , int $column_num   )
m_initengine    ( string $location   )
m_responseparam    ( resource $conn   , int $identifier   , string $key   )
m_setdropfile    ( resource $conn   , string $directory   )
m_setip    ( resource $conn   , string $host   , int $port   )
m_setssl    ( resource $conn   , string $host   , int $port   )
m_setssl_cafile    ( resource $conn   , string $cafile   )
m_setssl_files    ( resource $conn   , string $sslkeyfile   , string $sslcertfile   )
m_sslcert_gen_hash    ( string $filename   )
m_transkeyval    ( resource $conn   , int $identifier   , string $key   , string $value   )
mail    ( string $to   , string $subject   , string $message   [, string $additional_headers   [, string $additional_parameters  ]] )
mailparse_determine_best_xfer_encoding    ( resource $fp   )
mailparse_msg_extract_part_file    ( resource $mimemail   , mixed $filename   [, callable $callbackfunc  ] )
mailparse_msg_extract_whole_part_file    ( resource $mimemail   , string $filename   [, callable $callbackfunc  ] )
mailparse_msg_parse    ( resource $mimemail   , string $data   )
mailparse_rfc822_parse_addresses    ( string $addresses   )
mailparse_stream_encode    ( resource $sourcefp   , resource $destfp   , string $encoding         )
maxdb_change_user    ( resource $link   , string $user   , string $password   , string $database   )
maxdb_character_set_name    ( resource $link   )
maxdb_connect_error    ( void   )
maxdb_error    ( resource $link   )
maxdb_get_client_info    ( void   )
maxdb_get_host_info    ( resource $link   )
maxdb_get_server_info    ( resource $link   )
maxdb_info    ( resource $link   )
maxdb_master_query    ( resource $link   , string $query   )
maxdb_multi_query    ( resource $link   , string $query   )
maxdb_real_connect    ( resource $link   [, string $hostname   [, string $username   [, string $passwd   [, string $dbname   [, int $port = 0   [, string $socket  ]]]]]] )
maxdb_real_escape_string    ( resource $link   , string $escapestr   )
maxdb_real_query    ( resource $link   , string $query   )
maxdb_select_db    ( resource $link   , string $dbname   )
maxdb_send_query    ( resource $link   , string $query   )
maxdb_sqlstate    ( resource $link   )
maxdb_ssl_set    ( resource $link   , string $key   , string $cert   , string $ca   , string $capath   , string $cipher   )
maxdb_stat    ( resource $link   )
maxdb_stmt_bind_param    ( resource $stmt   , string $types   , mixed &$var1   [, mixed &$...  ] )
maxdb_stmt_error    ( resource $stmt   )
maxdb_stmt_prepare    ( resource $stmt   , string $query   )
maxdb_stmt_send_long_data    ( resource $stmt   , int $param_nr   , string $data   )
maxdb_stmt_sqlstate    ( resource $stmt   )
mb_check_encoding    ([ string $var = NULL   [, string $encoding = mb_internal_encoding()  ]] )
mb_convert_case    ( string $str   , int $mode   [, string $encoding = mb_internal_encoding()  ] )
mb_convert_encoding    ( string $str   , string $to_encoding   [, mixed $from_encoding = mb_internal_encoding()  ] )
mb_convert_kana    ( string $str   [, string $option = "KV"   [, string $encoding = mb_internal_encoding()  ]] )
mb_convert_variables    ( string $to_encoding   , mixed $from_encoding   , mixed &$vars   [, mixed &$...  ] )
mb_decode_mimeheader    ( string $str   )
mb_decode_numericentity    ( string $str   , array $convmap   [, string $encoding = mb_internal_encoding()  ] )
mb_detect_encoding    ( string $str   [, mixed $encoding_list = mb_detect_order()   [, bool $strict = false  ]] )
mb_encode_mimeheader    ( string $str   [, string $charset = mb_internal_encoding()   [, string $transfer_encoding = "B"   [, string $linefeed = "\r\n"   [, int $indent = 0  ]]]] )
mb_encode_numericentity    ( string $str   , array $convmap   [, string $encoding = mb_internal_encoding()   [, bool $is_hex = FALSE  ]] )
mb_encoding_aliases    ( string $encoding   )
mb_ereg    ( string $pattern   , string $string   [, array $regs  ] )
mb_ereg_match    ( string $pattern   , string $string   [, string $option = "msr"  ] )
mb_ereg_replace    ( string $pattern   , string $replacement   , string $string   [, string $option = "msr"  ] )
mb_ereg_replace_callback    ( string $pattern   , callable $callback   , string $string   [, string $option = "msr"  ] )
mb_ereg_search    ([ string $pattern   [, string $option = "ms"  ]] )
mb_ereg_search_init    ( string $string   [, string $pattern   [, string $option = "msr"  ]] )
mb_ereg_search_pos    ([ string $pattern   [, string $option = "ms"  ]] )
mb_ereg_search_regs    ([ string $pattern   [, string $option = "ms"  ]] )
mb_eregi    ( string $pattern   , string $string   [, array $regs  ] )
mb_eregi_replace    ( string $pattern   , string $replace   , string $string   [, string $option = "msri"  ] )
mb_output_handler    ( string $contents   , int $status   )
mb_parse_str    ( string $encoded_string   [, array &$result  ] )
mb_preferred_mime_name    ( string $encoding   )
mb_regex_set_options    ([ string $options = mb_regex_set_options()  ] )
mb_send_mail    ( string $to   , string $subject   , string $message   [, string $additional_headers = NULL   [, string $additional_parameter = NULL  ]] )
mb_split    ( string $pattern   , string $string   [, int $limit = -1  ] )
mb_strcut    ( string $str   , int $start   [, int $length = NULL   [, string $encoding = mb_internal_encoding()  ]] )
mb_strimwidth    ( string $str   , int $start   , int $width   [, string $trimmarker = ""   [, string $encoding = mb_internal_encoding()  ]] )
mb_stripos    ( string $haystack   , string $needle   [, int $offset = 0   [, string $encoding = mb_internal_encoding()  ]] )
mb_stristr    ( string $haystack   , string $needle   [, bool $before_needle = false   [, string $encoding = mb_internal_encoding()  ]] )
mb_strpos    ( string $haystack   , string $needle   [, int $offset = 0   [, string $encoding = mb_internal_encoding()  ]] )
mb_strrchr    ( string $haystack   , string $needle   [, bool $part = false   [, string $encoding = mb_internal_encoding()  ]] )
mb_strrichr    ( string $haystack   , string $needle   [, bool $part = false   [, string $encoding = mb_internal_encoding()  ]] )
mb_strripos    ( string $haystack   , string $needle   [, int $offset = 0   [, string $encoding = mb_internal_encoding()  ]] )
mb_strrpos    ( string $haystack   , string $needle   [, int $offset = 0   [, string $encoding = mb_internal_encoding()  ]] )
mb_strstr    ( string $haystack   , string $needle   [, bool $before_needle = false   [, string $encoding = mb_internal_encoding()  ]] )
mb_strtolower    ( string $str   [, string $encoding = mb_internal_encoding()  ] )
mb_strtoupper    ( string $str   [, string $encoding = mb_internal_encoding()  ] )
mb_strwidth    ( string $str   [, string $encoding = mb_internal_encoding()  ] )
mb_substr    ( string $str   , int $start   [, int $length = NULL   [, string $encoding = mb_internal_encoding()  ]] )
mb_substr_count    ( string $haystack   , string $needle   [, string $encoding = mb_internal_encoding()  ] )
mcrypt_cbc    ( int $cipher   , string $key   , string $data   , int $mode   [, string $iv  ] )
mcrypt_cfb    ( int $cipher   , string $key   , string $data   , int $mode   , string $iv   )
mcrypt_create_iv    ( int $size   [, int $source = MCRYPT_DEV_URANDOM  ] )
mcrypt_decrypt    ( string $cipher   , string $key   , string $data   , string $mode   [, string $iv  ] )
mcrypt_ecb    ( int $cipher   , string $key   , string $data   , int $mode   )
mcrypt_enc_get_algorithms_name    ( resource $td   )
mcrypt_enc_get_modes_name    ( resource $td   )
mcrypt_encrypt    ( string $cipher   , string $key   , string $data   , string $mode   [, string $iv  ] )
mcrypt_generic    ( resource $td   , string $data   )
mcrypt_generic_init    ( resource $td   , string $key   , string $iv   )
mcrypt_get_cipher_name    ( int $cipher   )
mcrypt_get_iv_size    ( string $cipher   , string $mode   )
mcrypt_list_algorithms    ([ string $lib_dir = ini_get("mcrypt.algorithms_dir")  ] )
mcrypt_list_modes    ([ string $lib_dir = ini_get("mcrypt.modes_dir")  ] )
mcrypt_module_get_algo_block_size    ( string $algorithm   [, string $lib_dir  ] )
mcrypt_module_get_algo_key_size    ( string $algorithm   [, string $lib_dir  ] )
mcrypt_module_get_supported_key_sizes    ( string $algorithm   [, string $lib_dir  ] )
mcrypt_module_is_block_algorithm    ( string $algorithm   [, string $lib_dir  ] )
mcrypt_module_is_block_algorithm_mode    ( string $mode   [, string $lib_dir  ] )
mcrypt_module_is_block_mode    ( string $mode   [, string $lib_dir  ] )
mcrypt_module_self_test    ( string $algorithm   [, string $lib_dir  ] )
mcrypt_ofb    ( int $cipher   , string $key   , string $data   , int $mode   , string $iv   )
md5    ( string $str   [, bool $raw_output = false  ] )
md5_file    ( string $filename   [, bool $raw_output = false  ] )
mdecrypt_generic    ( resource $td   , string $data   )
metaphone    ( string $str   [, int $phonemes = 0  ] )
method_exists    ( mixed $object   , string $method_name   )
mhash    ( int $hash   , string $data   [, string $key  ] )
mhash_get_hash_name    ( int $hash   )
mhash_keygen_s2k    ( int $hash   , string $password   , string $salt   , int $bytes   )
mime_content_type    ( string $filename   )
ming_keypress    ( string $char   )
mkdir    ( string $pathname   [, int $mode = 0777   [, bool $recursive = false   [, resource $context  ]]] )
money_format    ( string $format   , float $number   )
move_uploaded_file    ( string $filename   , string $destination   )
mqseries_strerror    ( int $reason   )
msession_connect    ( string $host   , string $port   )
msession_create    ( string $session   [, string $classname   [, string $data  ]] )
msession_destroy    ( string $name   )
msession_find    ( string $name   , string $value   )
msession_get    ( string $session   , string $name   , string $value   )
msession_get_array    ( string $session   )
msession_get_data    ( string $session   )
msession_inc    ( string $session   , string $name   )
msession_listvar    ( string $name   )
msession_lock    ( string $name   )
msession_plugin    ( string $session   , string $val   [, string $param  ] )
msession_randstr    ( int $param   )
msession_set    ( string $session   , string $name   , string $value   )
msession_set_data    ( string $session   , string $value   )
msession_timeout    ( string $session   [, int $param  ] )
msession_uniq    ( int $param   [, string $classname   [, string $data  ]] )
msession_unlock    ( string $session   , int $key   )
msql_create_db     ( string $database_name    [, resource $link_identifier   ] )
msql_drop_db    ( string $database_name   [, resource $link_identifier  ] )
msql_error    ( void   )
msql_field_flags    ( resource $result   , int $field_offset   )
msql_field_name    ( resource $result   , int $field_offset   )
msql_field_type    ( resource $result   , int $field_offset   )
msql_result    ( resource $result   , int $row   [, mixed $field  ] )
msql_select_db    ( string $database_name   [, resource $link_identifier  ] )
mssql_bind    ( resource $stmt   , string $param_name   , mixed &$var   , int $type   [, bool $is_output = false   [, bool $is_null = false   [, int $maxlen = -1  ]]] )
mssql_field_name    ( resource $result   [, int $offset = -1  ] )
mssql_field_type    ( resource $result   [, int $offset = -1  ] )
mssql_get_last_message    ( void   )
mssql_guid_string    ( string $binary   [, bool $short_format = false  ] )
mssql_result    ( resource $result   , int $row   , mixed $field   )
mssql_select_db    ( string $database_name   [, resource $link_identifier  ] )
mysql_client_encoding    ([ resource $link_identifier = NULL  ] )
mysql_create_db    ( string $database_name   [, resource $link_identifier = NULL  ] )
mysql_db_name    ( resource $result   , int $row   [, mixed $field = NULL  ] )
mysql_drop_db    ( string $database_name   [, resource $link_identifier = NULL  ] )
mysql_error    ([ resource $link_identifier = NULL  ] )
mysql_escape_string    ( string $unescaped_string   )
mysql_fetch_object    ( resource $result   [, string $class_name   [, array $params  ]] )
mysql_field_flags    ( resource $result   , int $field_offset   )
mysql_field_name    ( resource $result   , int $field_offset   )
mysql_field_table    ( resource $result   , int $field_offset   )
mysql_field_type    ( resource $result   , int $field_offset   )
mysql_get_client_info    ( void   )
mysql_get_host_info    ([ resource $link_identifier = NULL  ] )
mysql_get_server_info    ([ resource $link_identifier = NULL  ] )
mysql_info ([ resource $link_identifier = NULL  ] )
mysql_real_escape_string    ( string $unescaped_string   [, resource $link_identifier = NULL  ] )
mysql_result    ( resource $result   , int $row   [, mixed $field = 0  ] )
mysql_select_db    ( string $database_name   [, resource $link_identifier = NULL  ] )
mysql_set_charset    ( string $charset   [, resource $link_identifier = NULL  ] )
mysql_stat    ([ resource $link_identifier = NULL  ] )
mysql_tablename    ( resource $result   , int $i   )
mysqli mysqli_connect    ([ string $host = ini_get("mysqli.default_host")   [, string $username = ini_get("mysqli.default_user")   [, string $passwd = ini_get("mysqli.default_pw")   [, string $dbname = ""   [, int $port = ini_get("mysqli.default_port")   [, string $socket = ini_get("mysqli.default_socket")  ]]]]]] )
mysqli::change_user    ( string $user   , string $password   , string $database   )
mysqli::character_set_name    ( void   )
mysqli::commit    ([ int $flags   [, string $name  ]] )
mysqli::debug    ( string $message   )
mysqli::escape_string    ( string $escapestr   )
mysqli::get_client_info    ( void   )
mysqli::multi_query    ( string $query   )
mysqli::real_connect    ([ string $host   [, string $username   [, string $passwd   [, string $dbname   [, int $port   [, string $socket   [, int $flags  ]]]]]]] )
mysqli::real_query     ( string $query    )
mysqli::rollback    ([ int $flags   [, string $name  ]] )
mysqli::rpl_query_type    ( string $query   )
mysqli::select_db    ( string $dbname   )
mysqli::send_query             ( string $query         )
mysqli::set_charset    ( string $charset   )
mysqli::ssl_set    ( string $key   , string $cert   , string $ca   , string $capath   , string $cipher   )
mysqli::stat    ( void   )
mysqli_connect_error    ( void   )
mysqli_error             ( mysqli $link         )
mysqli_get_client_info    ( mysqli $link   )
mysqli_get_host_info    ( mysqli $link   )
mysqli_get_server_info    ( mysqli $link   )
mysqli_info    ( mysqli $link   )
mysqli_master_query    ( mysqli $link   , string $query   )
mysqli_result::fetch_object    ([ string $class_name = "stdClass"   [, array $params  ]] )
mysqli_slave_query    ( mysqli $link   , string $query   )
mysqli_sqlstate    ( mysqli $link   )
mysqli_stmt mysqli::prepare    ( string $query   )
mysqli_stmt::bind_param    ( string $types   , mixed &$var1   [, mixed &$...  ] )
mysqli_stmt::send_long_data    ( int $param_nr   , string $data   )
mysqli_stmt_error    ( mysqli_stmt $stmt   )
mysqli_stmt_sqlstate    ( mysqli_stmt $stmt   )
mysqlnd_memcache_set    ( mixed $mysql_connection   [, Memcached $memcache_connection   [, string $pattern   [, callback $callback  ]]] )
mysqlnd_ms_get_last_gtid    ( mixed $connection   )
mysqlnd_ms_match_wild    ( string $table_name   , string $wildcard   )
mysqlnd_ms_query_is_select    ( string $query   )
mysqlnd_ms_set_user_pick_server    ( string $function   )
mysqlnd_ms_xa_begin    ( mixed $connection   , string $gtrid   [, int $timeout  ] )
mysqlnd_ms_xa_commit    ( mixed $connection   , string $gtrid   )
mysqlnd_ms_xa_gc    ( mixed $connection   [, string $gtrid   [, boolean $ignore_max_retries  ]] )
mysqlnd_ms_xa_rollback    ( mixed $connection   , string $gtrid   )
mysqlnd_qc_set_storage_handler    (  string $handler    )
mysqlnd_qc_set_user_handlers    (  string $get_hash    ,  string $find_query_in_cache    ,  string $return_to_cache    ,  string $add_query_to_cache_if_not_exists    ,  string $query_is_select    ,  string $update_query_run_time_stats    ,  string $get_stats    ,  string $clear_cache    )
ncurses_addchnstr    ( string $s   , int $n   )
ncurses_addchstr    ( string $s   )
ncurses_addnstr    ( string $s   , int $n   )
ncurses_addstr    ( string $text   )
ncurses_define_key    ( string $definition   , int $keycode   )
ncurses_erasechar    ( void   )
ncurses_inch    ( void   )
ncurses_insstr    ( string $text   )
ncurses_instr    ( string &$buffer   )
ncurses_killchar    ( void   )
ncurses_longname    ( void   )
ncurses_mvaddchnstr    ( int $y   , int $x   , string $s   , int $n   )
ncurses_mvaddchstr    ( int $y   , int $x   , string $s   )
ncurses_mvaddnstr    ( int $y   , int $x   , string $s   , int $n   )
ncurses_mvaddstr    ( int $y   , int $x   , string $s   )
ncurses_mvwaddstr    ( resource $window   , int $y   , int $x   , string $text   )
ncurses_putp    ( string $text   )
ncurses_scr_dump    ( string $filename   )
ncurses_scr_init    ( string $filename   )
ncurses_scr_restore    ( string $filename   )
ncurses_scr_set    ( string $filename   )
ncurses_slk_set    ( int $labelnr   , string $label   , int $format   )
ncurses_termname    ( void   )
ncurses_waddstr    ( resource $window   , string $str   [, int $n  ] )
newt_centered_window    ( int $width   , int $height   [, string $title  ] )
newt_checkbox_get_value    ( resource $checkbox   )
newt_checkbox_tree_get_entry_value    ( resource $checkboxtree   , mixed $data   )
newt_checkbox_tree_get_multi_selection    ( resource $checkboxtree   , string $seqnum   )
newt_entry_get_value    ( resource $entry   )
newt_listbox_get_current    ( resource $listbox   )
newt_open_window    ( int $left   , int $top   , int $width   , int $height   [, string $title  ] )
newt_reflow_text    ( string $text   , int $width   , int $flex_down   , int $flex_up   , int &$actual_width   , int &$actual_height   )
newt_win_choice    ( string $title   , string $button1_text   , string $button2_text   , string $format   [, mixed $args   [, mixed $...  ]] )
newt_win_entries    ( string $title   , string $text   , int $suggested_width   , int $flex_down   , int $flex_up   , int $data_width   , array &$items   , string $button1   [, string $...  ] )
newt_win_menu    ( string $title   , string $text   , int $suggestedWidth   , int $flexDown   , int $flexUp   , int $maxListHeight   , array $items   , int &$listItem   [, string $button1   [, string $...  ]] )
newt_win_ternary    ( string $title   , string $button1_text   , string $button2_text   , string $button3_text   , string $format   [, mixed $args   [, mixed $...  ]] )
ngettext    ( string $msgid1   , string $msgid2   , int $n   )
nl2br    ( string $string   [, bool $is_xhtml = true  ] )
nl_langinfo    ( int $item   )
nsapi_virtual    ( string $uri   )
nthmac    ( string $clent   , string $data   )
number TokyoTyrant::add    ( string $key   , number $increment   [, int $type = 0  ] )
number bindec    ( string $binary_string    )
number hexdec    ( string $hex_string    )
number octdec    ( string $octal_string    )
number_format    ( float $number   [, int $decimals = 0  ] )
oauth_get_sbs    ( string $http_method   , string $uri   [, array $request_parameters  ] )
oauth_urlencode    ( string $uri   )
ob_get_clean    ( void   )
ob_get_contents    ( void   )
ob_get_flush    ( void   )
ob_gzhandler    ( string $buffer   , int $mode   )
ob_iconv_handler    ( string $contents   , int $status   )
ob_tidyhandler    ( string $input   [, int $mode  ] )
object Phar::compress    ( int $compression   [, string $extension  ] )
object Phar::decompress    ([ string $extension  ] )
oci_bind_array_by_name    ( resource $statement   , string $name   , array &$var_array   , int $max_table_length   [, int $max_item_length = -1   [, int $type = SQLT_AFC  ]] )
oci_bind_by_name    ( resource $statement   , string $bv_name   , mixed &$variable   [, int $maxlength = -1   [, int $type = SQLT_CHR  ]] )
oci_client_version    ( void   )
oci_define_by_name    ( resource $statement   , string $column_name   , mixed &$variable   [, int $type = SQLT_CHR  ] )
oci_field_name    ( resource $statement   , mixed $field   )
oci_password_change    ( resource $connection   , string $username   , string $old_password   , string $new_password   )
oci_server_version    ( resource $connection   )
oci_set_action    ( resource $connection   , string $action_name   )
oci_set_client_identifier    ( resource $connection   , string $client_identifier   )
oci_set_client_info    ( resource $connection   , string $client_info   )
oci_set_edition    ( string $edition   )
oci_set_module_name    ( resource $connection   , string $module_name   )
oci_statement_type    ( resource $statement   )
odbc_cursor    ( resource $result_id   )
odbc_error    ([ resource $connection_id  ] )
odbc_errormsg    ([ resource $connection_id  ] )
odbc_field_name    ( resource $result_id   , int $field_number   )
odbc_field_num    ( resource $result_id   , string $field_name   )
odbc_field_type    ( resource $result_id   , int $field_number   )
odbc_result_all    ( resource $result_id   [, string $format  ] )
openal_buffer_data    ( resource $buffer   , int $format   , string $data   , int $freq   )
openal_buffer_loadwav    ( resource $buffer   , string $wavfile   )
openlog    ( string $ident   , int $option   , int $facility   )
openssl_cipher_iv_length    ( string $method   )
openssl_csr_export    ( resource $csr   , string &$out   [, bool $notext = true  ] )
openssl_csr_export_to_file    ( resource $csr   , string $outfilename   [, bool $notext = true  ] )
openssl_decrypt    ( string $data   , string $method   , string $password   [, int $options = 0   [, string $iv = ""  ]] )
openssl_dh_compute_key    ( string $pub_key   , resource $dh_key   )
openssl_digest    ( string $data   , string $method   [, bool $raw_output = false  ] )
openssl_encrypt    ( string $data   , string $method   , string $password   [, int $options = 0   [, string $iv = ""  ]] )
openssl_error_string    ( void   )
openssl_open    ( string $sealed_data   , string &$open_data   , string $env_key   , mixed $priv_key_id   [, string $method  ] )
openssl_pbkdf2    ( string $password   , string $salt   , int $key_length   , int $iterations   [, string $digest_algorithm  ] )
openssl_pkcs12_export    ( mixed $x509   , string &$out   , mixed $priv_key   , string $pass   [, array $args  ] )
openssl_pkcs12_export_to_file    ( mixed $x509   , string $filename   , mixed $priv_key   , string $pass   [, array $args  ] )
openssl_pkcs12_read    ( string $pkcs12   , array &$certs   , string $pass   )
openssl_pkcs7_decrypt    ( string $infilename   , string $outfilename   , mixed $recipcert   [, mixed $recipkey  ] )
openssl_pkcs7_encrypt    ( string $infile   , string $outfile   , mixed $recipcerts   , array $headers   [, int $flags = 0   [, int $cipherid = OPENSSL_CIPHER_RC2_40  ]] )
openssl_pkcs7_sign    ( string $infilename   , string $outfilename   , mixed $signcert   , mixed $privkey   , array $headers   [, int $flags = PKCS7_DETACHED   [, string $extracerts  ]] )
openssl_pkey_export    ( mixed $key   , string &$out   [, string $passphrase   [, array $configargs  ]] )
openssl_pkey_export_to_file    ( mixed $key   , string $outfilename   [, string $passphrase   [, array $configargs  ]] )
openssl_private_decrypt    ( string $data   , string &$decrypted   , mixed $key   [, int $padding = OPENSSL_PKCS1_PADDING  ] )
openssl_private_encrypt    ( string $data   , string &$crypted   , mixed $key   [, int $padding = OPENSSL_PKCS1_PADDING  ] )
openssl_public_decrypt    ( string $data   , string &$decrypted   , mixed $key   [, int $padding = OPENSSL_PKCS1_PADDING  ] )
openssl_public_encrypt    ( string $data   , string &$crypted   , mixed $key   [, int $padding = OPENSSL_PKCS1_PADDING  ] )
openssl_random_pseudo_bytes    ( int $length   [, bool &$crypto_strong  ] )
openssl_seal    ( string $data   , string &$sealed_data   , array &$env_keys   , array $pub_key_ids   [, string $method = "RC4"  ] )
openssl_sign    ( string $data   , string &$signature   , mixed $priv_key_id   [, mixed $signature_alg = OPENSSL_ALGO_SHA1  ] )
openssl_spki_export    ( string &$spkac   )
openssl_spki_export_challenge    ( string &$spkac   )
openssl_spki_new    ( resource &$privkey   , string &$challenge   [, int $algorithm = 0  ] )
openssl_spki_verify    ( string &$spkac   )
openssl_verify    ( string $data   , string $signature   , mixed $pub_key_id   [, mixed $signature_alg = OPENSSL_ALGO_SHA1  ] )
openssl_x509_checkpurpose    ( mixed $x509cert   , int $purpose   [, array $cainfo = array()   [, string $untrustedfile  ]] )
openssl_x509_export    ( mixed $x509   , string &$output   [, bool $notext = TRUE  ] )
openssl_x509_export_to_file    ( mixed $x509   , string $outfilename   [, bool $notext = TRUE  ] )
openssl_x509_fingerprint    ( mixed $x509   [, string $hash_algorithm = "sha1"   [, bool $raw_output = FALSE  ]] )
ord    ( string $string   )
output_add_rewrite_var    ( string $name   , string $value   )
override_function    ( string $function_name   , string $function_args   , string $function_code   )
pack    ( string $format   [, mixed $args   [, mixed $...  ]] )
parse_ini_file    ( string $filename   [, bool $process_sections = false   [, int $scanner_mode = INI_SCANNER_NORMAL  ]] )
parse_ini_string    ( string $ini   [, bool $process_sections = false   [, int $scanner_mode = INI_SCANNER_NORMAL  ]] )
parsekit_compile_file    ( string $filename   [, array &$errors   [, int $options = PARSEKIT_QUIET  ]] )
parsekit_compile_string    ( string $phpcode   [, array &$errors   [, int $options = PARSEKIT_QUIET  ]] )
password_get_info    ( string $hash   )
password_hash    ( string $password   , integer $algo   [, array $options  ] )
pcntl_exec    ( string $path   [, array $args   [, array $envs  ]] )
pcntl_strerror    ( int $errno   )
pg_client_encoding    ([ resource $connection  ] )
pg_convert    ( resource $connection   , string $table_name   , array $assoc_array   [, int $options = 0  ] )
pg_copy_from    ( resource $connection   , string $table_name   , array $rows   [, string $delimiter   [, string $null_as  ]] )
pg_copy_to    ( resource $connection   , string $table_name   [, string $delimiter   [, string $null_as  ]] )
pg_dbname    ([ resource $connection  ] )
pg_escape_bytea    ([ resource $connection   ], string $data   )
pg_escape_identifier    ([ resource $connection   ], string $data   )
pg_escape_literal    ([ resource $connection   ], string $data   )
pg_escape_string    ([ resource $connection   ], string $data   )
pg_fetch_result    ( resource $result   , int $row   , mixed $field   )
pg_field_name    ( resource $result   , int $field_number   )
pg_field_num    ( resource $result   , string $field_name   )
pg_field_type    ( resource $result   , int $field_number   )
pg_host    ([ resource $connection  ] )
pg_last_error    ([ resource $connection  ] )
pg_last_notice    ( resource $connection   )
pg_last_oid    ( resource $result   )
pg_lo_export    ([ resource $connection   ], int $oid   , string $pathname   )
pg_lo_import    ([ resource $connection   ], string $pathname   [, mixed $object_id  ] )
pg_lo_read    ( resource $large_object   [, int $len = 8192  ] )
pg_lo_write    ( resource $large_object   , string $data   [, int $len  ] )
pg_meta_data    ( resource $connection   , string $table_name   [, bool $extended  ] )
pg_options    ([ resource $connection  ] )
pg_parameter_status    ([ resource $connection   ], string $param_name   )
pg_put_line    ([ resource $connection   ], string $data   )
pg_result_error    ( resource $result   )
pg_result_error_field    ( resource $result   , int $fieldcode   )
pg_send_execute    ( resource $connection   , string $stmtname   , array $params   )
pg_send_prepare    ( resource $connection   , string $stmtname   , string $query   )
pg_send_query    ( resource $connection   , string $query   )
pg_send_query_params    ( resource $connection   , string $query   , array $params   )
pg_set_client_encoding    ([ resource $connection   ], string $encoding   )
pg_trace    ( string $pathname   [, string $mode = "w"   [, resource $connection  ]] )
pg_tty    ([ resource $connection  ] )
pg_unescape_bytea    ( string $data   )
png2wbmp    ( string $pngname   , string $wbmpname   , int $dest_height   , int $dest_width   , int $threshold   )
posix_access    ( string $file   [, int $mode = POSIX_F_OK  ] )
posix_ctermid    ( void   )
posix_getcwd    ( void   )
posix_getgrnam    ( string $name   )
posix_getlogin    ( void   )
posix_getpwnam    ( string $username   )
posix_initgroups    ( string $name   , int $base_group_id   )
posix_mkfifo    ( string $pathname   , int $mode   )
posix_mknod    ( string $pathname   , int $mode   [, int $major = 0   [, int $minor = 0  ]] )
posix_strerror    ( int $errno   )
posix_ttyname    ( mixed $fd   )
preg_grep    ( string $pattern   , array $input   [, int $flags = 0  ] )
preg_match    ( string $pattern   , string $subject   [, array &$matches   [, int $flags = 0   [, int $offset = 0  ]]] )
preg_match_all    ( string $pattern   , string $subject   [, array &$matches   [, int $flags = PREG_PATTERN_ORDER   [, int $offset = 0  ]]] )
preg_quote    ( string $str  [, string $delimiter = NULL  ] )
preg_split    ( string $pattern   , string $subject   [, int $limit = -1   [, int $flags = 0  ]] )
print    ( string $arg   )
printf    ( string $format   [, mixed $args   [, mixed $...  ]] )
property_exists    ( mixed $class   , string $property   )
protected bool Yaf_Controller_Abstract::display    ( string $tpl   [, array $parameters  ] )
protected string MongoCollection::toIndexString    ( mixed $keys   )
protected string Yaf_Controller_Abstract::render    ( string $tpl   [, array $parameters  ] )
ps_add_bookmark    ( resource $psdoc   , string $text   [, int $parent = 0   [, int $open = 0  ]] )
ps_add_launchlink    ( resource $psdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $filename   )
ps_add_locallink    ( resource $psdoc   , float $llx   , float $lly   , float $urx   , float $ury   , int $page   , string $dest   )
ps_add_note    ( resource $psdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $contents   , string $title   , string $icon   , int $open   )
ps_add_pdflink    ( resource $psdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $filename   , int $page   , string $dest   )
ps_add_weblink    ( resource $psdoc   , float $llx   , float $lly   , float $urx   , float $ury   , string $url   )
ps_continue_text    ( resource $psdoc   , string $text   )
ps_findfont    ( resource $psdoc   , string $fontname   , string $encoding   [, bool $embed = false  ] )
ps_get_buffer    ( resource $psdoc   )
ps_get_parameter    ( resource $psdoc   , string $name   [, float $modifier  ] )
ps_hyphenate    ( resource $psdoc   , string $text   )
ps_include_file    ( resource $psdoc   , string $file   )
ps_makespotcolor    ( resource $psdoc   , string $name   [, int $reserved = 0  ] )
ps_open_file    ( resource $psdoc   [, string $filename  ] )
ps_open_image    ( resource $psdoc   , string $type   , string $source   , string $data   , int $lenght   , int $width   , int $height   , int $components   , int $bpc   , string $params   )
ps_open_image_file    ( resource $psdoc   , string $type   , string $filename   [, string $stringparam   [, int $intparam = 0  ]] )
ps_set_border_style    ( resource $psdoc   , string $style   , float $width   )
ps_set_info    ( resource $p   , string $key   , string $val   )
ps_set_parameter    ( resource $psdoc   , string $name   , string $value   )
ps_set_value    ( resource $psdoc   , string $name   , float $value   )
ps_setcolor    ( resource $psdoc   , string $type   , string $colorspace   , float $c1   , float $c2   , float $c3   , float $c4   )
ps_shading    ( resource $psdoc   , string $type   , float $x0   , float $y0   , float $x1   , float $y1   , float $c1   , float $c2   , float $c3   , float $c4   , string $optlist   )
ps_shading_pattern    ( resource $psdoc   , int $shadingid   , string $optlist   )
ps_show    ( resource $psdoc   , string $text   )
ps_show2    ( resource $psdoc   , string $text   , int $len   )
ps_show_boxed    ( resource $psdoc   , string $text   , float $left   , float $bottom   , float $width   , float $height   , string $hmode   [, string $feature  ] )
ps_show_xy    ( resource $psdoc   , string $text   , float $x   , float $y   )
ps_show_xy2    ( resource $psdoc   , string $text   , int $len   , float $xcoor   , float $ycoor   )
ps_string_geometry    ( resource $psdoc   , string $text   [, int $fontid = 0   [, float $size = 0.0  ]] )
ps_symbol_name    ( resource $psdoc   , int $ord   [, int $fontid = 0  ] )
pspell_add_to_personal    ( int $dictionary_link   , string $word   )
pspell_add_to_session    ( int $dictionary_link   , string $word   )
pspell_check    ( int $dictionary_link   , string $word   )
pspell_config_create    ( string $language   [, string $spelling   [, string $jargon   [, string $encoding  ]]] )
pspell_config_data_dir    ( int $conf   , string $directory   )
pspell_config_dict_dir    ( int $conf   , string $directory   )
pspell_config_personal    ( int $dictionary_link   , string $file   )
pspell_config_repl    ( int $dictionary_link   , string $file   )
pspell_new    ( string $language   [, string $spelling   [, string $jargon   [, string $encoding   [, int $mode = 0  ]]]] )
pspell_new_personal    ( string $personal   , string $language   [, string $spelling   [, string $jargon   [, string $encoding   [, int $mode = 0  ]]]] )
pspell_store_replacement    ( int $dictionary_link   , string $misspelled   , string $correct   )
pspell_suggest    ( int $dictionary_link   , string $word   )
putenv    ( string $setting   )
px_date2string    ( resource $pxdoc   , int $value   , string $format   )
px_get_parameter    ( resource $pxdoc   , string $name   )
px_set_blob_file    ( resource $pxdoc   , string $filename   )
px_set_parameter    ( resource $pxdoc   , string $name   , string $value   )
px_set_targetencoding    ( resource $pxdoc   , string $encoding   )
px_set_value    ( resource $pxdoc   , string $name   , float $value   )
px_timestamp2string    ( resource $pxdoc   , float $value   , string $format   )
quoted_printable_decode    ( string $str   )
quoted_printable_encode    ( string $str   )
quotemeta    ( string $str   )
radius_add_server    ( resource $radius_handle   , string $hostname   , int $port   , string $secret   , int $timeout   , int $max_tries   )
radius_config    ( resource $radius_handle   , string $file   )
radius_cvt_addr    ( string $data   )
radius_cvt_int    ( string $data   )
radius_cvt_string    ( string $data   )
radius_demangle    ( resource $radius_handle   , string $mangled   )
radius_demangle_mppe_key    ( resource $radius_handle         , string $mangled   )
radius_get_tagged_attr_data    ( string $data   )
radius_get_vendor_attr    ( string $data   )
radius_put_addr    ( resource $radius_handle   , int $type         , string $addr               [, int $options = 0   [, int $tag  ]] )
radius_put_attr    ( resource $radius_handle   , int $type         , string $value               [, int $options = 0   [, int $tag  ]] )
radius_put_string    ( resource $radius_handle   , int $type         , string $value               [, int $options = 0   [, int $tag  ]] )
radius_put_vendor_addr    ( resource $radius_handle   , int $vendor               , int $type         , string $addr               )
radius_put_vendor_attr    ( resource $radius_handle   , int $vendor   , int $type   , string $value   [, int $options = 0   [, int $tag  ]] )
radius_put_vendor_string    ( resource $radius_handle   , int $vendor               , int $type         , string $value               [, int $options = 0   [, int $tag  ]] )
radius_request_authenticator    ( resource $radius_handle   )
radius_salt_encrypt_attr    ( resource $radius_handle   , string $data   )
radius_server_secret    ( resource $radius_handle   )
radius_strerror    ( resource $radius_handle   )
random_bytes    ( int $length   )
rar_wrapper_cache_stats    ( void   )
rawurldecode    ( string $str   )
rawurlencode    ( string $str   )
readdir    ([ resource $dir_handle  ] )
readfile    ( string $filename   [, bool $use_include_path = false   [, resource $context  ]] )
readgzfile    ( string $filename   [, int $use_include_path = 0  ] )
readline    ([ string $prompt  ] )
readline_add_history    ( string $line   )
readline_callback_handler_install    ( string $prompt   , callable $callback   )
readline_read_history    ([ string $filename  ] )
readline_write_history    ([ string $filename  ] )
readlink    ( string $path   )
realpath    ( string $path   )
recode_file    ( string $request   , resource $input   , resource $output   )
recode_string    ( string $request   , string $string   )
rename    ( string $oldname   , string $newname   [, resource $context  ] )
rename_function    ( string $original_name   , string $new_name   )
rmdir    ( string $dirname   [, resource $context  ] )
rpm_is_valid    ( string $filename   )
rpm_version    ( void   )
rrd_create    ( string $filename   , array $options   )
rrd_error    ( void   )
rrd_fetch    ( string $filename   , array $options   )
rrd_first    ( string $file   [, int $raaindex = 0  ] )
rrd_graph    ( string $filename   , array $options   )
rrd_info    ( string $filename   )
rrd_last    ( string $filename   )
rrd_lastupdate    ( string $filename   )
rrd_restore    ( string $xml_file   , string $rrd_file   [, array $options  ] )
rrd_tune    ( string $filename   , array $options   )
rrd_update    ( string $filename   , array $options   )
rrd_version    ( void   )
rtrim    ( string $str   [, string $character_mask  ] )
runkit_class_adopt    ( string $classname   , string $parentname   )
runkit_class_emancipate    ( string $classname   )
runkit_constant_add    ( string $constname   , mixed $value   )
runkit_constant_redefine    ( string $constname   , mixed $newvalue   )
runkit_constant_remove    ( string $constname   )
runkit_function_add    ( string $funcname   , string $arglist   , string $code   )
runkit_function_copy    ( string $funcname   , string $targetname   )
runkit_function_redefine    ( string $funcname   , string $arglist   , string $code   )
runkit_function_remove    ( string $funcname   )
runkit_function_rename    ( string $funcname   , string $newname   )
runkit_import    ( string $filename   [, int $flags = RUNKIT_IMPORT_CLASS_METHODS  ] )
runkit_lint    ( string $code   )
runkit_lint_file    ( string $filename   )
runkit_method_add    ( string $classname   , string $methodname   , string $args   , string $code   [, int $flags = RUNKIT_ACC_PUBLIC  ] )
runkit_method_copy    ( string $dClass   , string $dMethod   , string $sClass   [, string $sMethod  ] )
runkit_method_redefine    ( string $classname   , string $methodname   , string $args   , string $code   [, int $flags = RUNKIT_ACC_PUBLIC  ] )
runkit_method_remove    ( string $classname   , string $methodname   )
runkit_method_rename    ( string $classname   , string $methodname   , string $newname   )
scandir    ( string $directory   [, int $sorting_order = SCANDIR_SORT_ASCENDING   [, resource $context  ]] )
serialize     ( mixed $value    )
session_cache_expire    ([ string $new_cache_expire  ] )
session_cache_limiter    ([ string $cache_limiter  ] )
session_decode    ( string $data   )
session_encode    ( void   )
session_id    ([ string $id  ] )
session_is_registered    ( string $name   )
session_module_name    ([ string $module  ] )
session_name    ([ string $name  ] )
session_pgsql_add_error    ( int $error_level   [, string $error_message  ] )
session_pgsql_get_field    ( void   )
session_pgsql_set_field    ( string $value   )
session_save_path    ([ string $path  ] )
session_unregister    ( string $name   )
set_include_path    ( string $new_include_path   )
setcookie    ( string $name   [, string $value   [, int $expire = 0   [, string $path   [, string $domain   [, bool $secure = false   [, bool $httponly = false  ]]]]]] )
setlocale    ( int $category   , string $locale   [, string $...  ] )
setrawcookie    ( string $name   [, string $value   [, int $expire = 0   [, string $path   [, string $domain   [, bool $secure = false   [, bool $httponly = false  ]]]]]] )
setthreadtitle    ( string $title   )
settype    ( mixed &$var   , string $type   )
sha1    ( string $str   [, bool $raw_output = false  ] )
sha1_file    ( string $filename   [, bool $raw_output = false  ] )
shell_exec    ( string $cmd   )
shmop_open    ( int $key   , string $flags   , int $mode   , int $size   )
shmop_read    ( int $shmid   , int $start   , int $count   )
shmop_write    ( int $shmid   , string $data   , int $offset   )
similar_text    ( string $first   , string $second   [, float &$percent  ] )
snmp2_get    ( string $host   , string $community   , string $object_id   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp2_getnext    ( string $host   , string $community   , string $object_id   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp2_real_walk    ( string $host   , string $community   , string $object_id   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp2_set    ( string $host   , string $community   , string $object_id   , string $type   , string $value   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp2_walk    ( string $host   , string $community   , string $object_id   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp3_get    ( string $host   , string $sec_name   , string $sec_level   , string $auth_protocol   , string $auth_passphrase   , string $priv_protocol   , string $priv_passphrase   , string $object_id   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp3_getnext    ( string $host   , string $sec_name   , string $sec_level   , string $auth_protocol   , string $auth_passphrase   , string $priv_protocol   , string $priv_passphrase   , string $object_id   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp3_real_walk    (  string $host    ,  string $sec_name    ,  string $sec_level    ,  string $auth_protocol    ,  string $auth_passphrase    ,  string $priv_protocol    ,  string $priv_passphrase    ,  string $object_id    [,  string $timeout  = 1000000    [,  string $retries  = 5   ]] )
snmp3_set    ( string $host   , string $sec_name   , string $sec_level   , string $auth_protocol   , string $auth_passphrase   , string $priv_protocol   , string $priv_passphrase   , string $object_id   , string $type   , string $value   [, int $timeout = 1000000   [, int $retries = 5  ]] )
snmp3_walk    ( string $host   , string $sec_name   , string $sec_level   , string $auth_protocol   , string $auth_passphrase   , string $priv_protocol   , string $priv_passphrase   , string $object_id   [, string $timeout = 1000000   [, string $retries = 5  ]] )
snmp_read_mib    ( string $filename   )
snmpget    ( string $hostname   , string $community   , string $object_id   [, int $timeout = 1000000   [, int $retries = 5  ]] )
snmpgetnext    ( string $host   , string $community   , string $object_id   [, int $timeout = 1000000   [, int $retries = 5  ]] )
snmprealwalk    ( string $host   , string $community   , string $object_id   [, int $timeout = 1000000   [, int $retries = 5  ]] )
snmpset    ( string $host   , string $community   , string $object_id   , string $type   , mixed $value   [, int $timeout = 1000000   [, int $retries = 5  ]] )
snmpwalk    ( string $hostname   , string $community   , string $object_id   [, int $timeout = 1000000   [, int $retries = 5  ]] )
snmpwalkoid    ( string $hostname   , string $community   , string $object_id   [, int $timeout = 1000000   [, int $retries = 5  ]] )
socket_bind    ( resource $socket   , string $address   [, int $port = 0  ] )
socket_connect    ( resource $socket   , string $address   [, int $port = 0  ] )
socket_getpeername    ( resource $socket   , string &$address   [, int &$port  ] )
socket_getsockname    ( resource $socket   , string &$addr   [, int &$port  ] )
socket_read    ( resource $socket   , int $length   [, int $type = PHP_BINARY_READ  ] )
socket_recv    ( resource $socket   , string &$buf   , int $len   , int $flags   )
socket_recvfrom    ( resource $socket   , string &$buf   , int $len   , int $flags   , string &$name   [, int &$port  ] )
socket_recvmsg    ( resource $socket   , string $message   [, int $flags  ] )
socket_send    ( resource $socket   , string $buf   , int $len   , int $flags   )
socket_sendto    ( resource $socket   , string $buf   , int $len   , int $flags   , string $addr   [, int $port = 0  ] )
socket_strerror    ( int $errno   )
socket_write    ( resource $socket   , string $buffer   [, int $length = 0  ] )
solr_get_version    ( void   )
soundex    ( string $str   )
spl_autoload_extensions    ([ string $file_extensions  ] )
spl_object_hash    ( object $obj   )
split    ( string $pattern   , string $string   [, int $limit = -1  ] )
spliti    ( string $pattern   , string $string   [, int $limit = -1  ] )
sprintf    ( string $format   [, mixed $args   [, mixed $...  ]] )
sql_regcase    ( string $string   )
sqlite_array_query    ( resource $dbhandle   , string $query   [, int $result_type = SQLITE_BOTH   [, bool $decode_binary = true  ]] )
sqlite_error_string    ( int $error_code   )
sqlite_escape_string    ( string $item   )
sqlite_exec    ( resource $dbhandle   , string $query   [, string &$error_msg  ] )
sqlite_fetch_column_types    ( string $table_name   , resource $dbhandle   [, int $result_type = SQLITE_ASSOC  ] )
sqlite_fetch_object    ( resource $result   [, string $class_name   [, array $ctor_params   [, bool $decode_binary = true  ]]] )
sqlite_fetch_single    ( resource $result   [, bool $decode_binary = true  ] )
sqlite_field_name    ( resource $result   , int $field_index   )
sqlite_libencoding    ( void   )
sqlite_libversion    ( void   )
sqlite_single_query    ( resource $db   , string $query   [, bool $first_row_only   [, bool $decode_binary  ]] )
sqlite_udf_decode_binary    ( string $data   )
sqlite_udf_encode_binary    ( string $data   )
sqlsrv_configure    ( string $setting   , mixed $value   )
ssdeep_fuzzy_compare    ( string $signature1   , string $signature2   )
ssdeep_fuzzy_hash    ( string $to_hash   )
ssdeep_fuzzy_hash_filename    ( string $file_name   )
ssh2_auth_agent    ( resource $session   , string $username   )
ssh2_auth_hostbased_file    ( resource $session   , string $username   , string $hostname   , string $pubkeyfile   , string $privkeyfile   [, string $passphrase   [, string $local_username  ]] )
ssh2_auth_password    ( resource $session   , string $username   , string $password   )
ssh2_auth_pubkey_file    ( resource $session   , string $username   , string $pubkeyfile   , string $privkeyfile   [, string $passphrase  ] )
ssh2_fingerprint    ( resource $session   [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX  ] )
ssh2_publickey_add    ( resource $pkey   , string $algoname   , string $blob   [, bool $overwrite = false   [, array $attributes  ]] )
ssh2_publickey_remove    ( resource $pkey   , string $algoname   , string $blob   )
ssh2_scp_recv    ( resource $session   , string $remote_file   , string $local_file   )
ssh2_scp_send    ( resource $session   , string $local_file   , string $remote_file   [, int $create_mode = 0644  ] )
ssh2_sftp_chmod    ( resource $sftp   , string $filename   , int $mode   )
ssh2_sftp_lstat    ( resource $sftp   , string $path   )
ssh2_sftp_mkdir    ( resource $sftp   , string $dirname   [, int $mode = 0777   [, bool $recursive = false  ]] )
ssh2_sftp_readlink    ( resource $sftp   , string $link   )
ssh2_sftp_realpath    ( resource $sftp   , string $filename   )
ssh2_sftp_rename    ( resource $sftp   , string $from   , string $to   )
ssh2_sftp_rmdir    ( resource $sftp   , string $dirname   )
ssh2_sftp_stat    ( resource $sftp   , string $path   )
ssh2_sftp_symlink    ( resource $sftp   , string $target   , string $link   )
ssh2_sftp_unlink    ( resource $sftp   , string $filename   )
stat    ( string $filename   )
stats_rand_phrase_to_seeds    ( string $phrase   )
stomp_connect_error    ( void   )
stomp_version    ( void   )
stompframe Stomp::readFrame    ([ string $class_name = "stompFrame"   ] )
str_getcsv    ( string $input   [, string $delimiter = ","   [, string $enclosure = '"'   [, string $escape = "\\"  ]]] )
str_pad    ( string $input   , int $pad_length   [, string $pad_string = " "   [, int $pad_type = STR_PAD_RIGHT  ]] )
str_repeat    ( string $input   , int $multiplier   )
str_rot13    ( string $str   )
str_shuffle    ( string $str   )
str_split    ( string $string   [, int $split_length = 1  ] )
strcasecmp    ( string $str1   , string $str2   )
strcmp    ( string $str1   , string $str2   )
strcoll    ( string $str1   , string $str2   )
strcspn    ( string $str1   , string $str2   [, int $start   [, int $length  ]] )
stream_bucket_new    ( resource $stream   , string $buffer   )
stream_context_set_option    ( resource $stream_or_context   , string $wrapper   , string $option   , mixed $value   )
stream_encoding    ( resource $stream   [, string $encoding  ] )
stream_filter_register    ( string $filtername   , string $classname   )
stream_get_contents    ( resource $handle   [, int $maxlength = -1   [, int $offset = -1  ]] )
stream_get_line    ( resource $handle   , int $length   [, string $ending  ] )
stream_resolve_include_path    ( string $filename      )
stream_socket_get_name    ( resource $handle   , bool $want_peer   )
stream_socket_recvfrom    ( resource $socket   , int $length   [, int $flags = 0   [, string &$address  ]] )
stream_socket_sendto    ( resource $socket   , string $data   [, int $flags = 0   [, string $address  ]] )
stream_wrapper_register    ( string $protocol   , string $classname   [, int $flags  = 0  ] )
stream_wrapper_restore    ( string $protocol   )
stream_wrapper_unregister    ( string $protocol   )
strftime    ( string $format   [, int $timestamp = time()  ] )
strip_tags    ( string $str   [, string $allowable_tags  ] )
stripcslashes    ( string $str   )
stripslashes    ( string $str   )
stristr    ( string $haystack   , mixed $needle   [, bool $before_needle = false  ] )
strlen    ( string $string   )
strnatcasecmp    ( string $str1   , string $str2   )
strnatcmp    ( string $str1   , string $str2   )
strncasecmp    ( string $str1   , string $str2   , int $len   )
strncmp    ( string $str1   , string $str2   , int $len   )
strpbrk    ( string $haystack   , string $char_list   )
strptime      ( string $date     , string $format     )
strrchr    ( string $haystack   , mixed $needle   )
strrev    ( string $string   )
strripos    ( string $haystack   , string $needle   [, int $offset = 0  ] )
strrpos    ( string $haystack   , string $needle   [, int $offset = 0  ] )
strspn    ( string $subject   , string $mask   [, int $start   [, int $length  ]] )
strstr    ( string $haystack   , mixed $needle   [, bool $before_needle = false  ] )
strtok    ( string $str   , string $token   )
strtolower    ( string $string   )
strtotime    ( string $time   [, int $now = time()  ] )
strtoupper    ( string $string   )
strtr    ( string $str   , string $from   , string $to   )
strval    ( mixed $var   )
substr    ( string $string   , int $start   [, int $length  ] )
substr_compare    ( string $main_str   , string $str   , int $offset   [, int $length   [, bool $case_insensitivity = false  ]] )
substr_count    ( string $haystack   , string $needle   [, int $offset = 0   [, int $length  ]] )
svn_add    ( string $path   [, bool $recursive = true   [, bool $force = false  ]] )
svn_auth_get_parameter    ( string $key   )
svn_blame    ( string $repository_url   [, int $revision_no = SVN_REVISION_HEAD  ] )
svn_cat    ( string $repos_url   [, int $revision_no  ] )
svn_checkout    ( string $repos   , string $targetpath   [, int $revision   [, int $flags = 0  ]] )
svn_cleanup    ( string $workingdir   )
svn_client_version    ( void   )
svn_commit    ( string $log   , array $targets   [, bool $recursive = true  ] )
svn_delete    ( string $path   [, bool $force = false  ] )
svn_diff    ( string $path1   , int $rev1   , string $path2   , int $rev2   )
svn_export    ( string $frompath   , string $topath   [, bool $working_copy = true   [, int $revision_no = -1  ]] )
svn_fs_change_node_prop    ( resource $root   , string $path   , string $name   , string $value   )
svn_fs_check_path    ( resource $fsroot   , string $path   )
svn_fs_contents_changed    ( resource $root1   , string $path1   , resource $root2   , string $path2   )
svn_fs_copy    ( resource $from_root   , string $from_path   , resource $to_root   , string $to_path   )
svn_fs_delete    ( resource $root   , string $path   )
svn_fs_dir_entries    ( resource $fsroot   , string $path   )
svn_fs_file_length    ( resource $fsroot   , string $path   )
svn_fs_is_dir    ( resource $root   , string $path   )
svn_fs_is_file    ( resource $root   , string $path   )
svn_fs_make_dir    ( resource $root   , string $path   )
svn_fs_make_file    ( resource $root   , string $path   )
svn_fs_node_created_rev    ( resource $fsroot   , string $path   )
svn_fs_node_prop    ( resource $fsroot   , string $path   , string $propname   )
svn_fs_props_changed    ( resource $root1   , string $path1   , resource $root2   , string $path2   )
svn_fs_revision_prop    ( resource $fs   , int $revnum   , string $propname   )
svn_import    ( string $path   , string $url   , bool $nonrecursive   )
svn_log    ( string $repos_url   [, int $start_revision   [, int $end_revision   [, int $limit = 0   [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY  ]]]] )
svn_ls    ( string $repos_url   [, int $revision_no = SVN_REVISION_HEAD   [, bool $recurse = false   [, bool $peg = false  ]]] )
svn_mkdir    ( string $path   [, string $log_message  ] )
svn_repos_hotcopy    ( string $repospath   , string $destpath   , bool $cleanlogs   )
svn_repos_recover    ( string $path   )
svn_revert    ( string $path   [, bool $recursive = false  ] )
svn_status    ( string $path   [, int $flags = 0  ] )
svn_update    ( string $path   [, int $revno = SVN_REVISION_HEAD   [, bool $recurse = true  ]] )
sybase_get_last_message    ( void   )
sybase_result    ( resource $result   , int $row   , mixed $field   )
sybase_select_db    ( string $database_name   [, resource $link_identifier  ] )
symlink    ( string $target   , string $link   )
sys_get_temp_dir    ( void   )
syslog    ( int $priority   , string $message   )
system    ( string $command   [, int &$return_var  ] )
taint    ( string &$string   [, string $...  ] )
tcpwrap_check    ( string $daemon   , string $address   [, string $user   [, bool $nodns = false  ]] )
tempnam    ( string $dir   , string $prefix   )
textdomain       ( string $text_domain      )
tidy::__construct    ([ string $filename   [, mixed $config   [, string $encoding   [, bool $use_include_path  ]]]] )
tidy::getOptDoc    ( string $optname   )
tidy::getRelease    ( void   )
tidy::parseFile    ( string $filename   [, mixed $config   [, string $encoding   [, bool $use_include_path = false  ]]] )
tidy::parseString    ( string $input   [, mixed $config   [, string $encoding  ]] )
tidy::repairFile    ( string $filename   [, mixed $config   [, string $encoding   [, bool $use_include_path = false  ]]] )
tidy::repairString    ( string $data   [, mixed $config   [, string $encoding  ]] )
tidy_get_error_buffer    ( tidy $tidy   )
tidy_get_output    ( tidy $object   )
tidy_save_config    ( string $filename   )
tidy_set_encoding    ( string $encoding   )
tidy_setopt    ( string $option   , mixed $value   )
timezone_name_from_abbr    ( string $abbr   [, int $gmtOffset = -1   [, int $isdst = -1  ]] )
timezone_version_get    ( void   )
token_get_all    ( string $source   )
token_name    ( int $token   )
touch    ( string $filename   [, int $time = time()   [, int $atime  ]] )
trait_exists    ( string $traitname   [, bool $autoload  ] )
trigger_error    ( string $error_msg   [, int $error_type = E_USER_NOTICE  ] )
trim    ( string $str   [, string $character_mask = " \t\n\r\0\x0B"  ] )
ucfirst    ( string $str   )
ucwords    ( string $str   )
udm_add_search_limit    ( resource $agent   , int $var   , string $val   )
udm_cat_list    ( resource $agent   , string $category   )
udm_cat_path    ( resource $agent   , string $category   )
udm_check_charset    ( resource $agent   , string $charset   )
udm_crc32    ( resource $agent   , string $str   )
udm_error    ( resource $agent   )
udm_get_res_field    ( resource $res   , int $row   , int $field   )
udm_get_res_param    ( resource $res   , int $param   )
udm_hash32    ( resource $agent   , string $str   )
udm_load_ispell_data    ( resource $agent   , int $var   , string $val1   , string $val2   , int $flag   )
udm_set_agent_param    ( resource $agent   , int $var   , string $val   )
uniqid    ([ string $prefix = ""   [, bool $more_entropy = false  ]] )
unlink    ( string $filename   [, resource $context  ] )
unpack    ( string $format   , string $data   )
untaint    ( string &$string   [, string $...  ] )
uopz_flags    ( string $class   , string $function   , int $flags   )
urldecode    ( string $str   )
urlencode    ( string $str   )
utf8_decode    ( string $data   )
utf8_encode    ( string $data   )
variant com_get_active_object    ( string $progid   [, int $code_page  ] )
vfprintf    ( resource $handle   , string $format   , array $args   )
virtual    ( string $filename   )
vpopmail_add_alias_domain    ( string $domain   , string $aliasdomain   )
vpopmail_add_alias_domain_ex    ( string $olddomain   , string $newdomain   )
vpopmail_add_domain    ( string $domain   , string $dir   , int $uid   , int $gid   )
vpopmail_add_domain_ex    ( string $domain   , string $passwd   [, string $quota   [, string $bounce   [, bool $apop  ]]] )
vpopmail_add_user    ( string $user   , string $domain   , string $password   [, string $gecos   [, bool $apop  ]] )
vpopmail_alias_add    ( string $user   , string $domain   , string $alias   )
vpopmail_alias_del    ( string $user   , string $domain   )
vpopmail_alias_del_domain    ( string $domain   )
vpopmail_alias_get    ( string $alias   , string $domain   )
vpopmail_alias_get_all    ( string $domain   )
vpopmail_auth_user    ( string $user   , string $domain   , string $password   [, string $apop  ] )
vpopmail_del_domain    ( string $domain   )
vpopmail_del_domain_ex    ( string $domain   )
vpopmail_del_user    ( string $user   , string $domain   )
vpopmail_error    ( void   )
vpopmail_passwd    ( string $user   , string $domain   , string $password   [, bool $apop  ] )
vpopmail_set_user_quota    ( string $user   , string $domain   , string $quota   )
vprintf    ( string $format   , array $args   )
vsprintf    ( string $format   , array $args   )
wddx_packet_end    ( resource $packet_id   )
wddx_serialize_value    ( mixed $var   [, string $comment  ] )
wddx_serialize_vars    ( mixed $var_name   [, mixed $...  ] )
win32_continue_service    ( string $servicename   [, string $machine  ] )
win32_pause_service    ( string $servicename   [, string $machine  ] )
win32_start_service    ( string $servicename   [, string $machine  ] )
win32_stop_service    ( string $servicename   [, string $machine  ] )
wincache_lock    ( string $key   [, bool $isglobal = false  ] )
wincache_ucache_add    ( string $key   , mixed $value   [, int $ttl = 0  ] )
wincache_ucache_cas    ( string $key   , int $old_value   , int $new_value   )
wincache_ucache_exists    ( string $key   )
wincache_ucache_info    ([ bool $summaryonly = false   [, string $key = NULL  ]] )
wincache_unlock    ( string $key   )
wordwrap    ( string $str   [, int $width = 75   [, string $break = "\n"   [, bool $cut = false  ]]] )
xattr_get    ( string $filename   , string $name   [, int $flags = 0  ] )
xattr_list    ( string $filename   [, int $flags = 0  ] )
xattr_remove    ( string $filename   , string $name   [, int $flags = 0  ] )
xattr_set    ( string $filename   , string $name   , string $value   [, int $flags = 0  ] )
xattr_supported    ( string $filename   [, int $flags = 0  ] )
xdiff_file_bdiff    ( string $old_file   , string $new_file   , string $dest   )
xdiff_file_bdiff_size    ( string $file   )
xdiff_file_bpatch    ( string $file   , string $patch   , string $dest   )
xdiff_file_diff    ( string $old_file   , string $new_file   , string $dest   [, int $context = 3   [, bool $minimal = false  ]] )
xdiff_file_diff_binary    ( string $old_file   , string $new_file   , string $dest   )
xdiff_file_patch_binary    ( string $file   , string $patch   , string $dest   )
xdiff_file_rabdiff    ( string $old_file   , string $new_file   , string $dest   )
xdiff_string_bdiff    ( string $old_data   , string $new_data   )
xdiff_string_bdiff_size    ( string $patch   )
xdiff_string_bpatch    ( string $str   , string $patch   )
xdiff_string_diff    ( string $old_data   , string $new_data   [, int $context = 3   [, bool $minimal = false  ]] )
xdiff_string_patch    ( string $str   , string $patch   [, int $flags   [, string &$error  ]] )
xdiff_string_patch_binary    ( string $str   , string $patch   )
xml_error_string    ( int $code   )
xml_parse    ( resource $parser   , string $data   [, bool $is_final = false  ] )
xml_parse_into_struct    ( resource $parser   , string $data   , array &$values   [, array &$index  ] )
xmlrpc_encode    ( mixed $value   )
xmlrpc_encode_request    ( string $method   , mixed $params   [, array $output_options  ] )
xmlrpc_get_type    ( mixed $value   )
xmlrpc_parse_method_descriptions    ( string $xml   )
xmlrpc_server_call_method    ( resource $server   , string $xml   , mixed $user_data   [, array $output_options  ] )
xmlrpc_server_register_introspection_callback    ( resource $server   , string $function   )
xmlrpc_server_register_method    ( resource $server   , string $method_name   , string $function   )
xmlrpc_set_type    ( string &$value   , string $type   )
yaml_emit    ( mixed $data   [, int $encoding = YAML_ANY_ENCODING   [, int $linebreak = YAML_ANY_BREAK   [, array $callbacks  ]]] )
yaml_emit_file    ( string $filename   , mixed $data   [, int $encoding = YAML_ANY_ENCODING   [, int $linebreak = YAML_ANY_BREAK   [, array $callbacks  ]]] )
yaz_addinfo    ( resource $id   )
yaz_ccl_parse    ( resource $id   , string $query   , array &$result   )
yaz_database    ( resource $id   , string $databases   )
yaz_element    ( resource $id   , string $elementset   )
yaz_error    ( resource $id   )
yaz_get_option    ( resource $id   , string $name   )
yaz_record    ( resource $id   , int $pos   , string $type   )
yaz_search    ( resource $id   , string $type   , string $query   )
yp_cat    ( string $domain   , string $map   )
yp_err_string    ( int $errorcode   )
yp_first    ( string $domain   , string $map   )
yp_get_default_domain    ( void   )
yp_master    ( string $domain   , string $map   )
yp_match    ( string $domain   , string $map   , string $key   )
yp_next    ( string $domain   , string $map   , string $key   )
yp_order    ( string $domain   , string $map   )
zend_logo_guid    ( void   )
zend_version    ( void   )
zip_entry_compressionmethod    ( resource $zip_entry   )
zip_entry_name    ( resource $zip_entry   )
zip_entry_open          ( resource $zip   , resource $zip_entry   [, string $mode  ] )
zip_entry_read    ( resource $zip_entry   [, int $length = 1024  ] )
zlib_decode    ( string $data   [, string $max_decoded_len  ] )
zlib_encode    ( string $data   , string $encoding   [, string $level = -1  ] )
zlib_get_coding_type    ( void   )
